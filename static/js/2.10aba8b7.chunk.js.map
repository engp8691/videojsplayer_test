{"version":3,"sources":["../node_modules/global/window.js","../node_modules/global/document.js","../node_modules/react/index.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/pkcs7/dist/pkcs7.es.js","../node_modules/aes-decrypter/dist/aes-decrypter.es.js","../node_modules/video.js/dist/video.es.js","../node_modules/mux.js/lib/utils/stream.js","../node_modules/mux.js/lib/mp4/probe.js","../node_modules/mux.js/lib/m2ts/stream-types.js","../node_modules/webpack/buildin/global.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/tsml/tsml.js","../node_modules/mux.js/lib/mp4/transmuxer.js","../node_modules/mux.js/lib/aac/utils.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/xhr/index.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/object-assign/index.js","../node_modules/mux.js/lib/mp4/mp4-generator.js","../node_modules/mux.js/lib/m2ts/caption-stream.js","../node_modules/mux.js/lib/tools/caption-packet-parser.js","../node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","../node_modules/react-dom/index.js","../node_modules/safe-json-parse/tuple.js","../node_modules/mux.js/lib/mp4/index.js","../node_modules/mux.js/lib/tools/ts-inspector.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/is-function/index.js","../node_modules/parse-headers/parse-headers.js","../node_modules/trim/index.js","../node_modules/for-each/index.js","../node_modules/is-callable/index.js","../node_modules/xtend/immutable.js","../node_modules/mux.js/lib/utils/bin.js","../node_modules/mux.js/lib/mp4/frame-utils.js","../node_modules/mux.js/lib/mp4/audio-frame-utils.js","../node_modules/mux.js/lib/data/silence.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/mp4/track-decode-info.js","../node_modules/mux.js/lib/m2ts/m2ts.js","../node_modules/mux.js/lib/m2ts/metadata-stream.js","../node_modules/mux.js/lib/codecs/adts.js","../node_modules/mux.js/lib/codecs/h264.js","../node_modules/mux.js/lib/utils/exp-golomb.js","../node_modules/mux.js/lib/aac/index.js","../node_modules/mux.js/lib/mp4/caption-parser.js","../node_modules/mux.js/lib/tools/mp4-inspector.js","../node_modules/mux.js/lib/m2ts/probe.js","../node_modules/videojs-playlist/dist/videojs-playlist.es.js"],"names":["global","win","window","self","module","exports","doccy","topLevel","minDoc","__webpack_require__","document","classCallCheck","instance","Constructor","TypeError","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","Stream","this","listeners","on","type","listener","push","off","index","indexOf","splice","trigger","callbacks","args","Array","slice","apply","dispose","pipe","destination","data","LineStream","_Stream","_this","buffer","nextNewline","substring","parseAttributes","attributes","attrs","split","RegExp","result","attr","exec","replace","ParseStream","customParsers","line","match","event","tagType","duration","parseFloat","title","parseInt","version","number","playlistType","offset","allowed","test","URI","uri","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","text","addParser","_ref","_this2","expression","customType","dataParser","segment","Parser","lineStream","parseStream","uris","currentUri","currentMap","_key","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","segments","entry","mediaGroup","rendition","tag","allow-cache","message","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","method","iv","media-sequence","isFinite","discontinuity-sequence","playlist-type","playlist","map","stream-inf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","program-date-time","targetduration","targetDuration","totalduration","totalDuration","start","isNaN","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","timeline","comment","custom","chunk","end","options","aes_decrypter_es_classCallCheck","createClass","defineProperties","props","descriptor","defineProperty","protoProps","staticProps","aes_decrypter_es_possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","x","xInv","d","th","x2","x4","s","tEnc","tDec","aesTables","AES","_tables","j","tmp","encKey","decKey","keyLen","rcon","Error","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a","b","c","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","delay","timeout_","aes_decrypter_es_inherits","processJob_","shift","setTimeout","bind","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","byteOffset","byteLength","decipher","decrypted","Uint8Array","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","step","STEP","asyncStream_","decryptChunk_","subarray","padded","bytes","set","get","video_es_version","_inheritsLoose","_setPrototypeOf","o","p","_construct","Parent","Class","Reflect","construct","sham","Proxy","toString","e","isNativeReflectConstruct","Function","_assertThisInitialized","_taggedTemplateLiteralLoose","strings","raw","video_es_history","video_es_LogByTypeFactory","name","log","level","lvl","levels","lvlRegExp","unshift","toUpperCase","concat","window_default","console","fn","info","isArray","video_es_log","createLogger","logByType","_len","subname","all","debug","warn","error","history","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","keys","object","isObject","each","forEach","video_es_assign","sources","isPlain","video_es_computedStyle","el","prop","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","parent","createQuerier","selector","context","querySelector","ctx","createEl","tagName","properties","content","createElement","getOwnPropertyNames","propName","val","tsml_default","setAttribute","textContent","attrName","appendContent","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","trim","removeClass","classToRemove","remove","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","obj","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","undefined","findPosition","box","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","Math","round","getPointerPosition","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","id","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","opts","addEventListener","passiveEvents","guid","hash","handlersCopy","m","n","passive","attachEvent","removeType","t","elemData","ownerDocument","bubbles","targetData","one","func","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","readyState","EVENT_MAP","video_es_createStyleElement","style","setTextContent","styleSheet","cssText","uid","bound","throttle","last","now","video_es_debounce","immediate","timeout","debounced","_later","clearTimeout","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","delete","size","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","mergeOptions","video_es_Component","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","_proto","localize","tokens","defaultValue","code","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","navigator","userAgent","webkitVersionMap","appleWebkitVersion","pop","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","apiMap","specApi","video_es_i","dist_video_es_i","MediaError","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","reduce","acc","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","url","href","div","addToBody","host","protocol","innerHTML","details","location","video_es_getAbsoluteURL","getFileExtension","path","pathParts","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","WebVTT","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","flush","video_es_loadTrack","crossOrigin","cors","xhr_default","err","response","responseBody","loaded_","tech_","loadHandler","video_es_TextTrack","_Track","TextTrack","settings","srclang","mode","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","floor","h","gm","gh","Infinity","implementation","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","liveCurrentTime","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","btn","buttonPressed_","stepChild","item","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyPress","createMenu","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","Number","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","LiveTracker","reset_","handleDurationchange","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","abs","pastSeekEnd","behindLiveEdge","behindLiveEdge_","startTracking","stopTracking","isTracking","trackingInterval_","handleTimeupdate","seekableEnds","sort","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","fluid_","updateStyleEl_","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","breakpoints","responsive","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","promise","previouslyMuted","catch","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","video_es_get","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this11","sourceTech","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","inactivityTimeout","handleActivity","screenX","screenY","isAudio_","String","toJSON","createModal","_this12","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits$1","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","xhr","dom","video_es_resolveUrl","baseURL","relativeURL","url_toolkit_default","buildAbsoluteURL","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","withCredentials","getPrototypeOf","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","responseText","media_","mediaUpdateTimeout","stopRequest","oldRequest","onreadystatechange","abort","mediaChange","started","isFinalRendition","intervalDuration","endSequence","expired","backward","forward","backwardDuration","forwardDuration","video_es_duration","sumDurations","startIndex","endIndex","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","scale","pow","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","textRange","range","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","ArrayBuffer","isView","initSegmentId","initSegment","hexDump","utils","tagDump","textRanges","timeWithinSegment","requestedTime","segmentStart","requestedTimeString","toISOString","segmentTimeString","endTimeString","findSegmentForTime","manifestTime","estimatedEnd","estimatedStart","timeWithinSegmentEnd","timeWithinSegmentDuration","getStreamTime","_ref$time","matchedSegment","findSegmentForPlayerTime","seekTime","streamTime","mediaSeconds","programDateTime","seekToStreamTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","findSegmentForStreamTime","mediaOffset","comparisonTimeStamp","segmentDateTime","streamDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","results","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","frame","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","charCodeAt","payload","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","flags","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","_findBox","parseType","timescale","getVideoTrackIds","mp4Generator","fileType","movie","toUnsigned$1","init","fragment","trafs","baseTimes","traks","videoTrackIds","hdlrs","tkhds","view","trackId","handlerType","getUint8","getUint32","probe","findBox","subresults","flushSource","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","sampleForFrame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","nalUnitType","currentGop","gops","nalCount","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","count","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","timestamp","sampleRate","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","ONE_SECOND_IN_TS$1","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","array","sum","sumFrameByteLengths","trackDecodeInfo","maxSegmentDts","maxSegmentPts","keepOriginalTimestamps","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","decodeURIComponent","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","bufferSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","timed-metadata","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","pes","ptsDtsFlags","packetLength","parsePes","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","byteIndex","returnSize","lowThree","middle","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","inspectMp4","_textifyMp","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$2","parseMp4Date","parseSampleFlags","nalParse","avcStream","avcView","parse$$1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","escape","nals","modificationTime","streamDescriptor","matrix","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","Uint16Array","mp4Inspector","inspect","ab","z","textify","inspectedMp4","indent","prefix","byte","parseTfdt","parseHdlr","parseTfhd","parseTrun","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","action","gopInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","parsed","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","mpd_parser_es","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","Range","byterangeEnd","byterangeStr","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decryptSegment","handleProgress","progressFn","stats","progressEvent","loaded","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","responseType","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","appendedLastSegment","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","segmentInfo","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","endOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","timingInfo","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","dtsTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onError","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","renditionSelectionMixin","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","__webpack_exports__","toUnsigned","g","_classCallCheck","_defineProperties","_createClass","_getPrototypeOf","_typeof2","_typeof","_possibleConstructorReturn","_inherits","clean","sa","AdtsStream","AacStream","isLikelyAacData","collectDtsInfo","trimAdtsFramesByEarliestDts","calculateTrackBaseMediaDecodeTime","prefixWithSilence","generateSampleTable","concatenateFrameData","clearDtsInfo","groupNalsIntoFrames","groupFramesIntoGops","extendFirstKeyFrame","concatenateNalData","parseId3TagSize","parseAdtsSize","parseSampleRate","parseAacTimestamp","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","isFunction","parseHeaders","xtend","initParams","params","createXHR","_createXHR","called","getBody","responseXML","firefoxBugTakenEffect","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","useXDR","rawRequest","getAllResponseHeaders","XDomainRequest","XMLHttpRequest","onprogress","onabort","ontimeout","username","password","setRequestHeader","isEmpty","beforeSend","send","forEachArray","root","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","lastIndexOf","parts","parseUTCTiming","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","merge","objects","flatten","lists","mergeDiscontiguousPlaylists","_acc$name$segments","lang","formatAudioPlaylist","_attributes","periodIndex","formatVttPlaylist","_attributes2","baseUrl","sourceDuration","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","subs","organizeVttPlaylists","urlToolkit","resolveUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","segmentTime","nextS","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentTimeInfo","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","base","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","letter","shouldUseNative","symbols","toObject","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","reviver","StreamTypes","ts","parseAudioPes_","pesType","pusi","endLoop","parsePesType","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePsi_","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","ptsTime","videoBaseTimestamp","adjustTimestamp_","for","q","u","w","aa","ba","A","B","encodeURIComponent","f","framesToPop","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","refs","updater","F","G","isReactComponent","forceUpdate","H","isPureReactComponent","I","current","J","K","L","ref","__self","__source","M","defaultProps","$$typeof","_owner","N","O","P","Q","keyPrefix","R","U","T","=",":","ea","fa","V","da","W","X","Children","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","Z","ha","ia","ja","ka","ma","na","oa","pa","extractEvents","eventTypes","ra","phasedRegistrationNames","registrationName","ta","ua","dependencies","va","wa","xa","ya","la","za","Aa","Ba","Ca","_dispatchListeners","_dispatchInstances","isPersistent","release","Da","injectEventPluginOrder","injectEventPluginsByName","Ea","stateNode","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","return","Oa","dispatchConfig","Pa","_targetInst","Qa","Ra","Sa","Ta","Ua","Va","animationend","animationiteration","animationstart","transitionend","Wa","Xa","Ya","animation","transition","Za","$a","bb","db","eb","fb","gb","hb","ib","nativeEvent","Interface","isDefaultPrevented","kb","eventPool","lb","destructor","jb","getPooled","persist","eventPhase","cancelable","isTrusted","mb","nb","ob","pb","qb","documentMode","rb","sb","tb","ub","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","wb","xb","yb","detail","zb","Cb","locale","Ab","ctrlKey","altKey","metaKey","Bb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","datetime","datetime-local","email","search","tel","week","Pb","Qb","correspondingUseElement","Sb","Tb","Vb","_valueTracker","getValue","setValue","Ub","Wb","checked","Xb","Yb","Zb","$b","ac","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","displayName","nc","_debugOwner","_debugSource","fileName","lineNumber","oc","pc","qc","rc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","vc","wc","xc","tc","uc","sc","setAttributeNS","yc","zc","defaultChecked","_wrapperState","initialChecked","Ac","initialValue","controlled","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","Tc","_isInputEventSupported","Uc","Vc","Alt","Control","Meta","Shift","Wc","getModifierState","Xc","Yc","Zc","$c","ad","bd","movementX","movementY","cd","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","dd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ed","defaultView","parentWindow","alternate","fd","gd","hd","kd","effectTag","ld","nd","sibling","md","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","rd","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","119","120","121","144","145","224","ud","vd","dataTransfer","wd","targetTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Ad","Bd","Cd","isInteractive","Dd","isInteractiveTopLevelEventType","Ed","Fd","Gd","targetInst","ancestors","containerInfo","topLevelType","Hd","Id","Jd","Kd","Ld","Md","Nd","Od","Pd","Qd","Rd","Td","contentDocument","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","ae","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","be","onSelect","de","ce","ee","defaultSelected","fe","dangerouslySetInnerHTML","ge","he","ie","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","je","html","mathml","svg","ke","le","me","ne","namespaceURI","MSApp","execUnsafeLocalFunction","oe","lastChild","nodeValue","pe","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qe","re","se","setProperty","te","menuitem","area","br","col","embed","hr","img","input","keygen","link","meta","param","wbr","ue","ve","is","we","xe","ye","ze","Ae","autoFocus","Be","__html","Ce","De","Ee","unstable_scheduleCallback","Fe","unstable_cancelCallback","He","Ie","Set","Je","Ke","Le","Me","Oe","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Pe","Qe","Re","Se","getChildContext","Te","__reactInternalMemoizedMergedChildContext","Ue","Ve","We","Xe","Ze","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","$e","bf","cf","df","ef","ff","gf","pendingChildren","hf","earliestPendingTime","latestPendingTime","jf","kf","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","lf","nextExpirationTimeToWorkOn","nf","of","baseState","xf","_reactInternalFiber","pf","rf","qf","sf","tf","uf","vf","wf","yf","shouldComponentUpdate","zf","contextType","Af","Bf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Cf","Df","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ef","Ff","_stringRef","Gf","Hf","If","Jf","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","queue","baseUpdate","ug","vg","wg","dispatch","xg","eagerReducer","eagerState","yg","destroy","deps","zg","Bg","Cg","Dg","Eg","readContext","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","Sg","Tg","Ug","Vg","Wg","Xg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Yg","getDerivedStateFromError","Zg","pendingContext","$g","timedOutAt","fallback","ah","bh","mf","af","hydrate","first","observedBits","unstable_observedBits","ch","dh","eh","fh","hh","ih","jh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","kh","lh","mh","nh","oh","ph","qh","rh","stack","wh","xh","yh","zh","onClick","onclick","Ah","WeakSet","Bh","Ch","Dh","Eh","Gh","componentWillUnmount","Hh","Ih","Jh","_reactRootContainer","Kh","wasMultiple","multiple","Ge","display","Fh","oi","fi","Mh","WeakMap","Nh","Oh","Ph","componentDidCatch","Qh","componentStack","Rh","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","gi","createElementNS","hi","ii","pendingCommitExpirationTime","ji","maxDuration","pingCache","ki","finishedWork","li","ni","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","unstable_now","Bi","Ci","Di","Ei","Fi","Gi","timeoutHandle","Ii","Ji","nextScheduledRoot","Ki","Li","Mi","unstable_shouldYield","_onComplete","Oi","firstBatch","_expirationTime","_defer","rangeCount","vb","focusedElem","selectionRange","Ag","Ni","__reactInternalSnapshotBeforeUpdate","Sd","compareDocumentPosition","createRange","setStart","removeAllRanges","addRange","setEnd","qa","Rb","dj","uh","ej","jd","vh","Ne","Pi","Qi","Ri","Si","Ti","Ui","Wi","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Xi","_didCommit","_onCommit","Yi","_internalRoot","Zi","aj","legacy_renderSubtreeIntoContainer","$i","bj","Vi","form","commit","unmount","createBatch","fj","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","findFiberByHostInstance","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Ye","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","gj","hj","_r","previous","priorityLevel","_schedMock","MessageChannel","port2","port1","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","unstable_wrapCallback","unstable_getCurrentPriorityLevel","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","substr","region","alt","vals","vals0","integer","lineAlign","snapToLines","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","offsetTop","rects","getClientRects","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","decode","convertCueToDOMTree","cuetext","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","pos","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","SyntaxError","getCueAsHTML","scrollSetting","up","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","alert","confirm","prompt","isCallable","toStr","thisArg","len","forEachString","forEachObject","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","ONE_SECOND_IN_TS","m2tsStreamTypes","ExpGolomb","aacUtils","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","video_js__WEBPACK_IMPORTED_MODULE_0__","autoadvance_","setup","cancelOnPlay","playItem","isItemObject","transformPrimitiveItems","tempItem","originalValue","generatePlaylistItemId","playlistItemId_","indexInPlaylistItemIds","currentItemId","sourceEquals","source1","source2","src1","src2","indexInSources","randomize","lastIndex","rand","initialList","initialIndex","changing","newList","newIndex","previousPlaylist","nextIndex","previousIndex","currentIndex_","currentItem","currentPlaylistItemId_","repeat_","currentIndex","newItem","autoadvance","shuffle","_temp","_list","rest","factory"],"mappings":"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","file":"static/js/2.10aba8b7.chunk.js","sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n  win = window;\n} else if (typeof global !== \"undefined\") {\n  win = global;\n} else if (typeof self !== \"undefined\") {\n  win = self;\n} else {\n  win = {};\n}\n\nmodule.exports = win;","var topLevel = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {};\n\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n  doccy = document;\n} else {\n  doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n  if (!doccy) {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n  }\n}\n\nmodule.exports = doccy;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","var classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * @file m3u8/line-stream.js\n */\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n/**\n * @file m3u8/parse-stream.js\n */\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0; // strip whitespace\n\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    } // Comments\n\n\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    } // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n\n\n    line = line.replace('\\r', ''); // Tags\n\n    match = /^#EXTM3U/.exec(line);\n\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n\n      if (match[2]) {\n        event.title = match[2];\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n\n          event.attributes.RESOLUTION = resolution;\n        }\n\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-ENDLIST/.exec(line);\n\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n\n      this.trigger('data', event);\n      return;\n    } // unknown tag type\n\n\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n/**\n * @file m3u8/parser.js\n */\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _this;\n    /* eslint-enable consistent-this */\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap = void 0; // if specified, the active decryption key\n\n    var _key = void 0;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\n\nexport { LineStream, ParseStream, Parser };","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\nvar PADDING = void 0;\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n} // pre-define the padding values\n\n\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\nexport { pad, unpad, version as VERSION };","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0; // Compute double and third tables\n\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x; // Compute MixColumns\n\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  } // Compactify. Considerable speedup on Firefox.\n\n\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n\n  return tables;\n};\n\nvar aesTables = null;\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n\n    if (!aesTables) {\n      aesTables = precompute();\n    } // then make a copy of that object for use\n\n\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey]; // schedule encryption keys\n\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1]; // apply sbox\n\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    } // schedule decryption keys\n\n\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0; // key.length === 2 ?\n\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1]; // load up the tables\n\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;\n      b = b2;\n      c = c2;\n    } // Last round.\n\n\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;\n      a = b;\n      b = c;\n      c = d;\n      d = a2;\n    }\n  };\n\n  return AES;\n}();\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * @file async-stream.js\n */\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\n\n\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\n\n\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n  var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0; // iteration variable\n\n  var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n    this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    } // invoke the done() callback when everything is finished\n\n\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  /**\n   * @private\n   */\n\n\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\n\nexport { decrypt, Decrypter, AsyncStream };","/**\n * @license\n * Video.js 7.4.1 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport vtt from 'videojs-vtt.js';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport URLToolkit from 'url-toolkit';\nimport window$1 from 'global/window';\nimport { Parser } from 'm3u8-parser';\nimport document from 'global/document';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\nvar version = \"7.4.1\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom =\n/*#__PURE__*/\nObject.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\n\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + new Date().getTime();\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events =\n/*#__PURE__*/\nObject.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {Number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Make a copy of prototype.options_ to protect against overriding defaults\n\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  };\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  _proto.player = function player() {\n    return this.player_;\n  };\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  _proto.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  _proto.el = function el() {\n    return this.el_;\n  };\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  _proto.id = function id() {\n    return this.id_;\n  };\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  _proto.name = function name() {\n    return this.name_;\n  };\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  _proto.children = function children() {\n    return this.children_;\n  };\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  };\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  };\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  };\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  _proto.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  _proto.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  _proto.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  _proto.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  _proto.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  _proto.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  _proto.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  _proto.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  _proto.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n  /**\n   * Set the focus to this component\n   */\n\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  };\n  /**\n   * Remove the focus from this component\n   */\n\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  };\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  };\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  };\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  };\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  };\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this; // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  };\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  };\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  };\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\nvar browser =\n/*#__PURE__*/\nObject.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      } // Hide controls and note if they were enabled.\n\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  };\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  };\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  };\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  };\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  };\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', bind(this, function () {\n      this.queueTrigger('change');\n    }));\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @returns  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url =\n/*#__PURE__*/\nObject.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_assertThisInitialized(_this))\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  };\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  };\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  };\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  _proto.reset = function reset() {};\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  };\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  };\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  };\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  _proto.setPoster = function setPoster() {};\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  _proto.playsinline = function playsinline() {};\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  _proto.setPlaysinline = function setPlaysinline() {};\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  };\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  };\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  };\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  _proto.handleClick = function handleClick(event) {};\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  };\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  _proto.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  };\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  };\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  };\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  };\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  };\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  };\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  _proto.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  };\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  };\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  };\n  /**\n   * Dispose of the element and stop tracking\n   */\n\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  };\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  };\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  };\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  };\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {};\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  };\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  };\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack(); // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  };\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    textContent(this.el_, content);\n  };\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  };\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function (e) {\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive() && e.type !== 'ended') {\n        return;\n      }\n\n      _this2.clearInterval(_this2.updateInterval);\n    });\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    }\n\n    if (liveTracker && liveTracker.seekableEnd() === Infinity) {\n      this.disable();\n    } else {\n      this.enable();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  _proto.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\n\nSeekBar.prototype.playerEvent = 'timeupdate';\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  };\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  };\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  };\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  };\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    return _this;\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('blur', bind(this, this.handleBlur));\n    component.on(['tap', 'click'], bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton(); // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  };\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward(); // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  };\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  };\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  _proto.createItems = function createItems() {};\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  };\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  };\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  };\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (event.which !== 9) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.el_.focus();\n      } // Enter (13) or Up (38) key or Down (40) key press the 'button'\n\n    } else if (event.which === 13 || event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (event.which !== 9) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  };\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  };\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  };\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  };\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  };\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  };\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  };\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  };\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  };\n  /**\n   * Update display of text track settings\n   */\n\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange);\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  }; // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  };\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  };\n  /**\n   * start tracking live playback\n   */\n\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_);\n    this.one(this.player_, 'play', this.handlePlay); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  };\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  };\n  /**\n   * stop tracking live playback\n   */\n\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  };\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  };\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  };\n  /**\n   * Get the live time window\n   */\n\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  };\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  };\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  };\n  /**\n   * get what we expect the live current time to be\n   */\n\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  };\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  };\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  };\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  };\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  };\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  };\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  };\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  };\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  };\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n} // on the player when they happen\n\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // create logger\n\n    _this.log = createLogger$1(_this.id_); // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    } // Cache for video property values.\n\n\n    _this.cache_ = {}; // Set poster\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Set default values for lastVolume\n\n    _this.cache_.lastVolume = 1; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls'); // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Set default value for lastPlaybackRate\n\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_assertThisInitialized(_this)), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      var plugins = options.plugins;\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error(\"plugin \\\"\" + name$$1 + \"\\\" does not exist\");\n        }\n      }, _assertThisInitialized(_assertThisInitialized(_this)));\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n    // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_assertThisInitialized(_this)); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  };\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  };\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  };\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  };\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  };\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  };\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this2),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this2[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this3 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  };\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  };\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  };\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(function (e) {\n      _this4.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  };\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  };\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this5.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this5.techGet('currentSrc');\n\n            _this5.lastSource_.tech = techSrc;\n\n            _this5.updateSourceCaches_(techSrc);\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  };\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  };\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this6.currentTime()) {\n        _this6.removeClass('vjs-waiting');\n\n        _this6.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  };\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  };\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  };\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  };\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  };\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  };\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  };\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  };\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  };\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  };\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  };\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  };\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  };\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  };\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  };\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  _proto.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  _proto.play_ = function play_(callback) {\n    var _this8 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    } // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n\n\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    } // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n\n\n    if (!this.isReady_) {\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      }); // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return; // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  };\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  };\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }; //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  };\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  };\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  };\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  };\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]); // If cancelling fullscreen, remove event listener.\n\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('fullscreenchange');\n      }));\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  };\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  };\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey)); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  };\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  };\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this9 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  _proto.src = function src(source) {\n    var _this10 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this10.cache_.sources = sources;\n\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this10.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  _proto.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  };\n  /**\n   * Begin loading the src data.\n   */\n\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  };\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n\n\n  _proto.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  };\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  };\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  };\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  };\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  };\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  };\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  };\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  };\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  };\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp); // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  };\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  };\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  _proto.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  };\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  };\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  };\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  };\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  };\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  };\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  };\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  };\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  _proto.trigger = function trigger$$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  _proto.handleStateChanged = function handleStateChanged(e) {};\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  };\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\n\n\nvar _inherits$1 = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits$1(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n\n    setTextContent(style$1, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name$$1 + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = xhr;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n/**\n * @videojs/http-streaming\n * @version 1.5.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser();\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl; // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n/**\n * @file time.js\n */\n\n/**\n * Checks whether a given time is within a segment based on its start time\n * and duration. For playerTime, the requested time is in seconds, for\n * streamTime, the time is a Date object.\n *\n * @param {Date|Number} requestedTime Time to check is within a segment\n * @param {\"stream\" | \"player\"} type Whether passing in a playerTime or streamTime\n * @param {Date|Number} segmentStart The start time of the segment\n * @param {Number} duration Segment duration in seconds\n */\n\nvar timeWithinSegment = function timeWithinSegment(requestedTime, type, segmentStart, duration) {\n  var endTime = void 0;\n\n  if (type === 'stream') {\n    endTime = new Date(duration * 1000 + segmentStart.getTime());\n    var requestedTimeString = requestedTime.toISOString();\n    var segmentTimeString = segmentStart.toISOString();\n    var endTimeString = endTime.toISOString();\n    return segmentTimeString <= requestedTimeString && requestedTimeString <= endTimeString;\n  } else if (type === 'player') {\n    endTime = duration + segmentStart;\n    return segmentStart <= requestedTime && requestedTime <= endTime;\n  }\n};\n/**\n * Finds a segment that contains the time requested. This might be an estimate or\n * an accurate match.\n *\n * @param {Date|Number} time The streamTime or playerTime to find a matching segment for\n * @param {\"stream\" | \"player\"} type Either the playerTime or streamTime\n * @param {Object} playlist A playlist object\n * @return {Object} match\n * @return {Object} match.segment The matched segment from the playlist\n * @return {Date|Number} match.estimatedStart The estimated start time of the segment\n * @return {\"accurate\" | \"estimate\"} match.type Whether the match is estimated or accurate\n */\n\n\nvar findSegmentForTime = function findSegmentForTime(time, type, playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  if (type !== 'player' && type !== 'stream') {\n    return null;\n  }\n\n  var manifestTime = 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n    var estimatedEnd = manifestTime + segment.duration;\n    var segmentStart = void 0;\n    var estimatedStart = void 0;\n\n    if (type === 'player') {\n      segmentStart = segment.start;\n      estimatedStart = manifestTime;\n    } else {\n      // we can rely on the program date time being accurate\n      segmentStart = segment.dateTimeObject;\n      estimatedStart = segment.dateTimeObject;\n    }\n\n    var timeWithinSegmentEnd = typeof segment.start !== 'undefined' && typeof segment.end !== 'undefined' && timeWithinSegment(time, type, segmentStart, segment.end - segment.start);\n    var timeWithinSegmentDuration = timeWithinSegment(time, type, estimatedStart, segment.duration);\n\n    if (timeWithinSegmentEnd) {\n      return {\n        segment: segment,\n        estimatedStart: estimatedStart,\n        type: 'accurate'\n      };\n    } else if (timeWithinSegmentDuration) {\n      return {\n        segment: segment,\n        estimatedStart: estimatedStart,\n        type: 'estimate'\n      };\n    }\n\n    manifestTime = estimatedEnd;\n  }\n\n  return null;\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  // - segment.start and segment.end only come\n  //    from syncController\n  return findSegmentForTime(time, 'player', playlist);\n};\n/**\n * Finds a segment that contains the stream time give as an ISO-8601 string.\n *\n * @param {String} streamTime The ISO-8601 streamTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForStreamTime = function findSegmentForStreamTime(streamTime, playlist) {\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(streamTime);\n  } catch (e) {\n    // TODO something here?\n    return null;\n  } // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n\n\n  return findSegmentForTime(dateTimeObject, 'stream', playlist);\n};\n/**\n * Gives the offset of the comparisonTimestamp from the streamTime timestamp in seconds.\n * If the offset returned is positive, the streamTime occurs before the comparisonTimestamp.\n * If the offset is negative, the streamTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} streamTime The streamTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, streamTime) {\n  var segmentDateTime = void 0;\n  var streamDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    streamDateTime = new Date(streamTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var streamTimeEpoch = streamDateTime.getTime();\n  return (streamTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the streamTime  of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, streamTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} streamTime\n * @returns {Number} streamTime.mediaSeconds The streamTime in seconds\n * @returns {String} streamTime.programDateTime The streamTime as an ISO-8601 String\n */\n\n\nvar getStreamTime = function getStreamTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getStreamTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getStreamTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid streamTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate streamTime could not be determined. Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var streamTime = {\n    mediaSeconds: time\n  };\n\n  if (matchedSegment.segment.dateTimeObject) {\n    // TODO this is currently the time of the beginning of the\n    // segment. This still needs to be modified to be offset\n    // by the time requested.\n    streamTime.programDateTime = matchedSegment.segment.dateTimeObject.toISOString();\n  }\n\n  return callback(null, streamTime);\n};\n/**\n * Seeks in the player to a time that matches the given streamTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.streamTime A streamTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToStreamTime = function seekToStreamTime(_ref2) {\n  var streamTime = _ref2.streamTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToStreamTime: callback must be provided');\n  }\n\n  if (typeof streamTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToStreamTime: streamTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForStreamTime(streamTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: streamTime + ' was not found in the stream'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: streamTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    return seekToStreamTime({\n      streamTime: streamTime,\n      playlist: playlist,\n      retryCount: retryCount - 1,\n      seekTo: seekTo,\n      pauseAfterSeek: pauseAfterSeek,\n      tech: tech,\n      callback: callback\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, streamTime);\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream; // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2016 Brightcove\n     * All rights reserved.\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        })); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type if updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_); // TODO: are video tracks the only ones with text tracks?\n\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    }); // initialize the loader state\n\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n    _this.state = 'HAVE_METADATA';\n    _this.started = true; // we only should have one playlist so select it\n\n    _this.media(srcUrlOrPlaylist); // trigger async to mimic behavior of HLS, where it must request a playlist\n\n\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n      this.state = 'HAVE_METADATA'; // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n      this.refreshMedia_(); // trigger media change if the active media has been updated\n\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this2 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this2.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this3 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this3.request = null;\n\n        if (error) {\n          _this3.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this3.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this3.state === 'HAVE_NOTHING') {\n            _this3.started = false;\n          }\n\n          return _this3.trigger('error');\n        }\n\n        _this3.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this3.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this3.masterLoaded_ = Date.now();\n        }\n\n        _this3.syncClientServerClock_(_this3.onClientServerClockSync_.bind(_this3));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this4 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this4.clientOffset_ = _this4.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this4.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this4.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this5 = this;\n\n      this.master = this.parseMasterXml();\n      this.state = 'HAVE_MASTER';\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      } // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n\n\n      window$1.setTimeout(function () {\n        _this5.trigger('loadedmetadata');\n      }, 0); // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this6 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this6.request = null;\n\n        if (error) {\n          _this6.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this6.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return _this6.trigger('error');\n        }\n\n        _this6.masterXml_ = req.responseText;\n\n        var newMaster = _this6.parseMasterXml();\n\n        _this6.master = updateMaster$1(_this6.master, newMaster);\n        window$1.setTimeout(function () {\n          _this6.trigger('minimumUpdatePeriod');\n        }, _this6.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this7 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this7.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n  // incrementally decrypt the segment\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // Fmp4 CaptionParser\n\n    _this.captionParser_ = new CaptionParser();\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        });\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        _this6.mediaSource.duration = newDuration;\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.5.1\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.seeking() && this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToStreamTime',\n    value: function convertToStreamTime(time, callback) {\n      return getStreamTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToStreamTime',\n    value: function seekToStreamTime$$1(streamTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToStreamTime({\n        streamTime: streamTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function Stream() {\n  this.init = function () {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    this.on = function (type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n\n\n    this.off = function (type, listener) {\n      var index;\n\n      if (!listeners[type]) {\n        return false;\n      }\n\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n\n\n    this.trigger = function (type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n\n    this.dispose = function () {\n      listeners = {};\n    };\n  };\n};\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\n\n\nStream.prototype.pipe = function (destination) {\n  this.on('data', function (data) {\n    destination.push(data);\n  });\n  this.on('done', function (flushSource) {\n    destination.flush(flushSource);\n  });\n  return destination;\n}; // Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\n\n\nStream.prototype.push = function (data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function (flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\n\nvar _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n_findBox = function findBox(data, path) {\n  var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size = toUnsigned(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of data\n\n\n  return results;\n};\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\n\n\nparseType = function parseType(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\n\n\ntimescale = function timescale(init) {\n  var result = {},\n      traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n  return traks.reduce(function (result, trak) {\n    var tkhd, version, index, id, mdhd;\n    tkhd = _findBox(trak, ['tkhd'])[0];\n\n    if (!tkhd) {\n      return null;\n    }\n\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n    mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (!mdhd) {\n      return null;\n    }\n\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    return result;\n  }, result);\n};\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\n\n\nstartTime = function startTime(timescale, fragment) {\n  var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n  trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n  baseTimes = [].concat.apply([], trafs.map(function (traf) {\n    return _findBox(traf, ['tfhd']).map(function (tfhd) {\n      var id, scale, baseTime; // get the track id from the tfhd\n\n      id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n        var version, result;\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n        if (version === 1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n        }\n\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity; // convert base time to seconds\n\n      return baseTime / scale;\n    });\n  })); // return the minimum\n\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\n\n\ngetVideoTrackIds = function getVideoTrackIds(init) {\n  var traks = _findBox(init, ['moov', 'trak']);\n\n  var videoTrackIds = [];\n  traks.forEach(function (trak) {\n    var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n    var tkhds = _findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function (hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: _findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","function clean(s) {\n  return s.replace(/\\n\\r?\\s*/g, '');\n}\n\nmodule.exports = function tsml(sa) {\n  var s = '',\n      i = 0;\n\n  for (; i < arguments.length; i++) {\n    s += clean(sa[i]) + (arguments[i + 1] || '');\n  }\n\n  return s;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar mp4 = require('./mp4-generator.js');\n\nvar frameUtils = require('./frame-utils');\n\nvar audioFrameUtils = require('./audio-frame-utils');\n\nvar trackDecodeInfo = require('./track-decode-info');\n\nvar m2ts = require('../m2ts/m2ts.js');\n\nvar AdtsStream = require('../codecs/adts.js');\n\nvar H264Stream = require('../codecs/h264').H264Stream;\n\nvar AacStream = require('../aac');\n\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData; // constants\n\n\nvar AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\nvar VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\nvar _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n/**\n * Compare two arrays (even typed) for same-ness\n */\n\n\nvar arrayEquals = function arrayEquals(a, b) {\n  var i;\n\n  if (a.length !== b.length) {\n    return false;\n  } // compare the value of each element in the array\n\n\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\n_AudioSegmentStream = function AudioSegmentStream(track, options) {\n  var adtsFrames = [],\n      sequenceNumber = 0,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n  options = options || {};\n\n  _AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function (data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        track[prop] = data[prop];\n      });\n    } // buffer audio data until end() is called\n\n\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function (earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function () {\n    var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n\n    track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n    adtsFrames = [];\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    trackDecodeInfo.clearDtsInfo(track);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\n_AudioSegmentStream.prototype = new Stream();\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n_VideoSegmentStream = function VideoSegmentStream(track, options) {\n  var sequenceNumber = 0,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n  options = options || {};\n\n  _VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n  this.gopCache_ = [];\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n\n  this.push = function (nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    } // buffer video until flush() is called\n\n\n    nalUnits.push(nalUnit);\n  };\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n\n\n  this.flush = function () {\n    var frames, gopForFusion, gops, moof, mdat, boxes; // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n\n      nalUnits.shift();\n    } // Return early if no video data has been observed\n\n\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    } // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n\n\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    } // Trim gops to align with gopsToAlignWith\n\n\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n\n\n      trackDecodeInfo.clearDtsInfo(track);\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n\n    track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    this.trigger('processedGopsInfo', gops.map(function (gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    })); // save all the nals in the last GOP into the gop cache\n\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    }); // Keep a maximum of 6 GOPs in the cache\n\n    this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n    nalUnits = [];\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n    moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.resetStream_(); // Continue with the flush process now\n\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function () {\n    trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n\n    config = undefined;\n    pps = undefined;\n  }; // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n\n\n  this.getGopForFusion_ = function (nalUnit) {\n    var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n    allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n    nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      } // The distance between the end of the gop and the start of the nalUnit\n\n\n      dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n\n      if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj || nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n\n    return null;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n\n\n  this.alignGopsAtStart_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      } // current gop starts before the current gop we want to align on. so increment gop\n      // index\n\n\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n\n\n  this.alignGopsAtEnd_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function (total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, {\n      byteLength: 0,\n      duration: 0,\n      nalCount: 0\n    });\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function (newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\n_VideoSegmentStream.prototype = new Stream();\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\n\n_CoalesceStream = function CoalesceStream(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n  this.push = function (output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    } // buffer incoming id3 tags until the final flush\n\n\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    } // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n\n\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\n_CoalesceStream.prototype = new Stream();\n\n_CoalesceStream.prototype.flush = function (flushSource) {\n  var offset = 0,\n      event = {\n    captions: [],\n    captionStreams: {},\n    metadata: [],\n    info: {}\n  },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n  initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n  event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n  // and track definitions\n\n  event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n  event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  } // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n\n\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = caption.startPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n\n    caption.startTime /= 90e3;\n    caption.endTime = caption.endPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  } // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n\n\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = id3.pts;\n\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  } // We add this to every single emitted segment even though we only need\n  // it for the first\n\n\n  event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0; // Emit the built segment\n\n  this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\n\n\n_Transmuxer = function Transmuxer(options) {\n  var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n\n  _Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n    pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n    pipeline.metadataStream.on('timestamp', function (frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n    pipeline.aacStream.on('data', function (data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n    pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n\n    pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n    pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n    pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n    pipeline.elementaryStream.on('data', function (data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length; // scan the tracks listed in the metadata\n\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        } // hook up the video segment stream to the first track with h264 data\n\n\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n          pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n            // When video emits timelineStartInfo data after a flush, we forward that\n            // info to the AudioSegmentStream, if it exists, because video timeline\n            // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n          pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          }); // Set up the final part of the video pipeline\n\n          pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n        }\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  }; // hook up the segment streams once track metadata is delivered\n\n\n  this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function (gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  }; // feed incoming data to the front of the parsing pipeline\n\n\n  this.push = function (data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n\n      hasFlushed = false;\n    }\n\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  }; // flush any buffered data\n\n\n  this.flush = function () {\n    hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n    this.transmuxPipeline_.headOfPipeline.flush();\n  }; // Caption data has to be reset when seeking outside buffered range\n\n\n  this.resetCaptions = function () {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n};\n\n_Transmuxer.prototype = new Stream();\nmodule.exports = {\n  Transmuxer: _Transmuxer,\n  VideoSegmentStream: _VideoSegmentStream,\n  AudioSegmentStream: _AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\nvar isLikelyAacData = function isLikelyAacData(data) {\n  if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n    return true;\n  }\n\n  return false;\n};\n\nvar parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n}; // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\nvar percentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n}; // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\n\n\nvar parseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n  var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n  var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n  return highTwo | middle | lowThree;\n};\n\nvar parseType = function parseType(header, byteIndex) {\n  if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n    return 'timed-metadata';\n  } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n    return 'audio';\n  }\n\n  return null;\n};\n\nvar parseSampleRate = function parseSampleRate(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function parseAacTimestamp(packet) {\n  var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n  frameStart = 10;\n\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  } // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n    if (frameSize < 1) {\n      return null;\n    }\n\n    frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            return size;\n          }\n\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function () {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function () {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar isFunction = require(\"is-function\");\n\nvar parseHeaders = require(\"parse-headers\");\n\nvar xtend = require(\"xtend\");\n\nmodule.exports = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = xtend(options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  if (xhr.responseType === \"document\") {\n    return xhr.responseXML;\n  }\n\n  var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n  if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n    return xhr.responseXML;\n  }\n\n  return null;\n}\n\nfunction noop() {}","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function (root) {\n  /* jshint ignore:end */\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n  var URLToolkit = {\n    // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n      opts = opts || {}; // remove any remaining space and CRLF\n\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n\n      var baseParts = URLToolkit.parseURL(baseURL);\n\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function parseURL(url) {\n      var parts = URL_REGEX.exec(url);\n\n      if (!parts) {\n        return null;\n      }\n\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function normalizePath(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function buildURLFromParts(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n  /* jshint ignore:start */\n\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = URLToolkit;else if (typeof define === 'function' && define.amd) define([], function () {\n    return URLToolkit;\n  });else if (typeof exports === 'object') exports[\"URLToolkit\"] = URLToolkit;else root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */","/*! @name mpd-parser @version 0.7.0 @license Apache-2.0 */\nimport window$1 from 'global/window';\nvar version = \"0.7.0\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n      playlist.segments[0].discontinuity = true;\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + \" (\" + role + \")\";\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n  // see https://tools.ietf.org/html/rfc1808\n\n  /* jshint ignore:start */\n  (function (root) {\n    /* jshint ignore:end */\n    var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n    var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n    var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n    var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n    var URLToolkit = {\n      // jshint ignore:line\n      // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n      // E.g\n      // With opts.alwaysNormalize = false (default, spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n      // With opts.alwaysNormalize = true (not spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n      buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n        opts = opts || {}; // remove any remaining space and CRLF\n\n        baseURL = baseURL.trim();\n        relativeURL = relativeURL.trim();\n\n        if (!relativeURL) {\n          // 2a) If the embedded URL is entirely empty, it inherits the\n          // entire base URL (i.e., is set equal to the base URL)\n          // and we are done.\n          if (!opts.alwaysNormalize) {\n            return baseURL;\n          }\n\n          var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n          if (!basePartsForNormalise) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n          return URLToolkit.buildURLFromParts(basePartsForNormalise);\n        }\n\n        var relativeParts = URLToolkit.parseURL(relativeURL);\n\n        if (!relativeParts) {\n          throw new Error('Error trying to parse relative URL.');\n        }\n\n        if (relativeParts.scheme) {\n          // 2b) If the embedded URL starts with a scheme name, it is\n          // interpreted as an absolute URL and we are done.\n          if (!opts.alwaysNormalize) {\n            return relativeURL;\n          }\n\n          relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n          return URLToolkit.buildURLFromParts(relativeParts);\n        }\n\n        var baseParts = URLToolkit.parseURL(baseURL);\n\n        if (!baseParts) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n          // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n          // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n          var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n          baseParts.netLoc = pathParts[1];\n          baseParts.path = pathParts[2];\n        }\n\n        if (baseParts.netLoc && !baseParts.path) {\n          baseParts.path = '/';\n        }\n\n        var builtParts = {\n          // 2c) Otherwise, the embedded URL inherits the scheme of\n          // the base URL.\n          scheme: baseParts.scheme,\n          netLoc: relativeParts.netLoc,\n          path: null,\n          params: relativeParts.params,\n          query: relativeParts.query,\n          fragment: relativeParts.fragment\n        };\n\n        if (!relativeParts.netLoc) {\n          // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n          // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n          // (if any) of the base URL.\n          builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n          // path is not relative and we skip to Step 7.\n\n          if (relativeParts.path[0] !== '/') {\n            if (!relativeParts.path) {\n              // 5) If the embedded URL path is empty (and not preceded by a\n              // slash), then the embedded URL inherits the base URL path\n              builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <params> of the base\n              // URL (if any) and\n\n              if (!relativeParts.params) {\n                builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <query> of the base\n                // URL (if any) and we skip to step 7.\n\n                if (!relativeParts.query) {\n                  builtParts.query = baseParts.query;\n                }\n              }\n            } else {\n              // 6) The last segment of the base URL's path (anything\n              // following the rightmost slash \"/\", or the entire path if no\n              // slash is present) is removed and the embedded URL's path is\n              // appended in its place.\n              var baseURLPath = baseParts.path;\n              var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n              builtParts.path = URLToolkit.normalizePath(newPath);\n            }\n          }\n        }\n\n        if (builtParts.path === null) {\n          builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n        }\n\n        return URLToolkit.buildURLFromParts(builtParts);\n      },\n      parseURL: function parseURL(url) {\n        var parts = URL_REGEX.exec(url);\n\n        if (!parts) {\n          return null;\n        }\n\n        return {\n          scheme: parts[1] || '',\n          netLoc: parts[2] || '',\n          path: parts[3] || '',\n          params: parts[4] || '',\n          query: parts[5] || '',\n          fragment: parts[6] || ''\n        };\n      },\n      normalizePath: function normalizePath(path) {\n        // The following operations are\n        // then applied, in order, to the new path:\n        // 6a) All occurrences of \"./\", where \".\" is a complete path\n        // segment, are removed.\n        // 6b) If the path ends with \".\" as a complete path segment,\n        // that \".\" is removed.\n        path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n        // complete path segment not equal to \"..\", are removed.\n        // Removal of these path segments is performed iteratively,\n        // removing the leftmost matching pattern on each iteration,\n        // until no matching pattern remains.\n        // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n        // complete path segment not equal to \"..\", that\n        // \"<segment>/..\" is removed.\n\n        while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n        return path.split('').reverse().join('');\n      },\n      buildURLFromParts: function buildURLFromParts(parts) {\n        return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n      }\n    };\n    /* jshint ignore:start */\n\n    module.exports = URLToolkit;\n  })(commonjsGlobal);\n  /* jshint ignore:end */\n\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range;\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\n\n\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    range: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return {\n      attributes: attributes\n    };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n(function () {\n  var i;\n  types = {\n    avc1: [],\n    // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [],\n    // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n  AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // entry_count\n  0x00, 0x00, 0x00, 0x0c, // entry_size\n  0x75, 0x72, 0x6c, 0x20, // 'url' type\n  0x00, // version 0\n  0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, // balance, 0 means centered\n  0x00, 0x00 // reserved\n  ]);\n  STCO = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // sample_size\n  0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x01, // flags\n  0x00, 0x00, // graphicsmode\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n  ]);\n})();\n\nbox = function box(type) {\n  var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length; // calculate the total size we need to allocate\n\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4); // copy the payload into the result\n\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n\n  return result;\n};\n\ndinf = function dinf() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function esds(track) {\n  return box(types.esds, new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  // ES_Descriptor\n  0x03, // tag, ES_DescrTag\n  0x19, // length\n  0x00, 0x00, // ES_ID\n  0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n  // DecoderConfigDescriptor\n  0x04, // tag, DecoderConfigDescrTag\n  0x11, // length\n  0x40, // object type\n  0x15, // streamType\n  0x00, 0x06, 0x00, // bufferSizeDB\n  0x00, 0x00, 0xda, 0xc0, // maxBitrate\n  0x00, 0x00, 0xda, 0xc0, // avgBitrate\n  // DecoderSpecificInfo\n  0x05, // tag, DecoderSpecificInfoTag\n  0x02, // length\n  // ISO/IEC 14496-3, AudioSpecificConfig\n  // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n  track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function ftyp() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function hdlr(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\n\nmdat = function mdat(data) {\n  return box(types.mdat, data);\n};\n\nmdhd = function mdhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x02, // creation_time\n  0x00, 0x00, 0x00, 0x03, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n  0x55, 0xc4, // 'und' language (undetermined)\n  0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n\n  if (track.samplerate) {\n    result[12] = track.samplerate >>> 24 & 0xFF;\n    result[13] = track.samplerate >>> 16 & 0xFF;\n    result[14] = track.samplerate >>> 8 & 0xFF;\n    result[15] = track.samplerate & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\n\nmdia = function mdia(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\n\nmfhd = function mfhd(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n  (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n  ]));\n};\n\nminf = function minf(track) {\n  return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n};\n\nmoof = function moof(sequenceNumber, tracks) {\n  var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n\n  return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\n\n\nmoov = function moov(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\n\nmvex = function mvex(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n\n  return box.apply(null, [types.mvex].concat(boxes));\n};\n\nmvhd = function mvhd(duration) {\n  var bytes = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // creation_time\n  0x00, 0x00, 0x00, 0x02, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n  0x00, 0x01, 0x00, 0x00, // 1.0 rate\n  0x01, 0x00, // 1.0 volume\n  0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n  0xff, 0xff, 0xff, 0xff // next_track_ID\n  ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function sdtp(track) {\n  var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n  // write the sample table\n\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n    bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n  }\n\n  return box(types.sdtp, bytes);\n};\n\nstbl = function stbl(track) {\n  return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n};\n\n(function () {\n  var videoSample, audioSample;\n\n  stsd = function stsd(track) {\n    return box(types.stsd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function videoSample(track) {\n    var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i; // assemble the SPSs\n\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    } // assemble the PPSs\n\n\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push(pps[i].byteLength & 0xFF);\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    (track.width & 0xff00) >> 8, track.width & 0xff, // width\n    (track.height & 0xff00) >> 8, track.height & 0xff, // height\n    0x00, 0x48, 0x00, 0x00, // horizresolution\n    0x00, 0x48, 0x00, 0x00, // vertresolution\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // frame_count\n    0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n    0x00, 0x18, // depth = 24\n    0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n    track.profileIdc, // AVCProfileIndication\n    track.profileCompatibility, // profile_compatibility\n    track.levelIdc, // AVCLevelIndication\n    0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n    box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n    0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n    0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n    );\n  };\n\n  audioSample = function audioSample(track) {\n    return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    // AudioSampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n    (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n    // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n})();\n\ntkhd = function tkhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x07, // flags\n  0x00, 0x00, 0x00, 0x00, // creation_time\n  0x00, 0x00, 0x00, 0x00, // modification_time\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x00, // reserved\n  (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, // layer\n  0x00, 0x00, // alternate_group\n  0x01, 0x00, // non-audio track volume\n  0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n  (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n  ]);\n  return box(types.tkhd, result);\n};\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\n\n\ntraf = function traf(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x3a, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x00, 0x00, 0x00 // default_sample_flags\n  ]));\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n  0x00, 0x00, 0x00, // flags\n  // baseMediaDecodeTime\n  upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n\n  dataOffset = 32 + // tfhd\n  20 + // tfdt\n  8 + // traf header\n  16 + // mfhd\n  8 + // moof header\n  8; // mdat header\n  // audio tracks require less metadata\n\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n  } // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n\n\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n  return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n};\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\n\n\ntrak = function trak(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak, tkhd(track), mdia(track));\n};\n\ntrex = function trex(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]); // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function () {\n  var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n  trunHeader = function trunHeader(samples, offset) {\n    var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [0x00, // version 0\n    0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n    (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n    (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function videoTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 16 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n      sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n      (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function audioTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 8 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function trun(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n})();\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function initSegment(tracks) {\n    var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\n\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function CaptionStream() {\n  CaptionStream.prototype.init.call(this);\n  this.captionPackets_ = [];\n  this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n  this.reset(); // forward data and done events from CCs to this CaptionStream\n\n  this.ccStreams_.forEach(function (cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n};\n\nCaptionStream.prototype = new Stream();\n\nCaptionStream.prototype.push = function (event) {\n  var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  } // parse the sei\n\n\n  sei = cea708Parser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  } // parse out the user data payload\n\n\n  userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n  if (!userData) {\n    return;\n  } // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n\n\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n    this.numSameDts_--;\n\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n\n    return;\n  } // parse out CC data packets and save them for later\n\n\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function () {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function (cc) {\n      cc.flush();\n    }, this);\n    return;\n  } // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n\n\n  this.captionPackets_.forEach(function (elem, idx) {\n    elem.presortIndex = idx;\n  }); // sort caption byte-pairs based on their PTS values\n\n  this.captionPackets_.sort(function (a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n\n    return a.pts - b.pts;\n  });\n  this.captionPackets_.forEach(function (packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    } // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n\n  }, this);\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function (cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function () {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function (ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function (packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1000;\n};\n\nCaptionStream.prototype.setsChannel2Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1800;\n}; // ----------------------\n// Session to Application\n// ----------------------\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\n\n\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,\n  // á\n  0x5c: 0xe9,\n  // é\n  0x5e: 0xed,\n  // í\n  0x5f: 0xf3,\n  // ó\n  0x60: 0xfa,\n  // ú\n  0x7b: 0xe7,\n  // ç\n  0x7c: 0xf7,\n  // ÷\n  0x7d: 0xd1,\n  // Ñ\n  0x7e: 0xf1,\n  // ñ\n  0x7f: 0x2588,\n  // █\n  0x0130: 0xae,\n  // ®\n  0x0131: 0xb0,\n  // °\n  0x0132: 0xbd,\n  // ½\n  0x0133: 0xbf,\n  // ¿\n  0x0134: 0x2122,\n  // ™\n  0x0135: 0xa2,\n  // ¢\n  0x0136: 0xa3,\n  // £\n  0x0137: 0x266a,\n  // ♪\n  0x0138: 0xe0,\n  // à\n  0x0139: 0xa0,\n  //\n  0x013a: 0xe8,\n  // è\n  0x013b: 0xe2,\n  // â\n  0x013c: 0xea,\n  // ê\n  0x013d: 0xee,\n  // î\n  0x013e: 0xf4,\n  // ô\n  0x013f: 0xfb,\n  // û\n  0x0220: 0xc1,\n  // Á\n  0x0221: 0xc9,\n  // É\n  0x0222: 0xd3,\n  // Ó\n  0x0223: 0xda,\n  // Ú\n  0x0224: 0xdc,\n  // Ü\n  0x0225: 0xfc,\n  // ü\n  0x0226: 0x2018,\n  // ‘\n  0x0227: 0xa1,\n  // ¡\n  0x0228: 0x2a,\n  // *\n  0x0229: 0x27,\n  // '\n  0x022a: 0x2014,\n  // —\n  0x022b: 0xa9,\n  // ©\n  0x022c: 0x2120,\n  // ℠\n  0x022d: 0x2022,\n  // •\n  0x022e: 0x201c,\n  // “\n  0x022f: 0x201d,\n  // ”\n  0x0230: 0xc0,\n  // À\n  0x0231: 0xc2,\n  // Â\n  0x0232: 0xc7,\n  // Ç\n  0x0233: 0xc8,\n  // È\n  0x0234: 0xca,\n  // Ê\n  0x0235: 0xcb,\n  // Ë\n  0x0236: 0xeb,\n  // ë\n  0x0237: 0xce,\n  // Î\n  0x0238: 0xcf,\n  // Ï\n  0x0239: 0xef,\n  // ï\n  0x023a: 0xd4,\n  // Ô\n  0x023b: 0xd9,\n  // Ù\n  0x023c: 0xf9,\n  // ù\n  0x023d: 0xdb,\n  // Û\n  0x023e: 0xab,\n  // «\n  0x023f: 0xbb,\n  // »\n  0x0320: 0xc3,\n  // Ã\n  0x0321: 0xe3,\n  // ã\n  0x0322: 0xcd,\n  // Í\n  0x0323: 0xcc,\n  // Ì\n  0x0324: 0xec,\n  // ì\n  0x0325: 0xd2,\n  // Ò\n  0x0326: 0xf2,\n  // ò\n  0x0327: 0xd5,\n  // Õ\n  0x0328: 0xf5,\n  // õ\n  0x0329: 0x7b,\n  // {\n  0x032a: 0x7d,\n  // }\n  0x032b: 0x5c,\n  // \\\n  0x032c: 0x5e,\n  // ^\n  0x032d: 0x5f,\n  // _\n  0x032e: 0x7c,\n  // |\n  0x032f: 0x7e,\n  // ~\n  0x0330: 0xc4,\n  // Ä\n  0x0331: 0xe4,\n  // ä\n  0x0332: 0xd6,\n  // Ö\n  0x0333: 0xf6,\n  // ö\n  0x0334: 0xdf,\n  // ß\n  0x0335: 0xa5,\n  // ¥\n  0x0336: 0xa4,\n  // ¤\n  0x0337: 0x2502,\n  // │\n  0x0338: 0xc5,\n  // Å\n  0x0339: 0xe5,\n  // å\n  0x033a: 0xd8,\n  // Ø\n  0x033b: 0xf8,\n  // ø\n  0x033c: 0x250c,\n  // ┌\n  0x033d: 0x2510,\n  // ┐\n  0x033e: 0x2514,\n  // └\n  0x033f: 0x2518 // ┘\n\n};\n\nvar getCharFromCode = function getCharFromCode(code) {\n  if (code === null) {\n    return '';\n  }\n\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n}; // the index of the last row in a CEA-608 display buffer\n\n\nvar BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\n\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\n\nvar createDisplayBuffer = function createDisplayBuffer() {\n  var result = [],\n      i = BOTTOM_ROW + 1;\n\n  while (i--) {\n    result.push('');\n  }\n\n  return result;\n};\n\nvar Cea608Stream = function Cea608Stream(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n  this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n  this.setConstants();\n  this.reset();\n\n  this.push = function (packet) {\n    var data, swap, char0, char1, text; // remove the parity bits\n\n    data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    } // Store control codes\n\n\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n      this.flushDisplayed(packet.pts); // flip memory\n\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n      this.startPts_ = packet.pts;\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts; // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      } // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n\n\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      } // Detect offset control codes and adjust cursor\n\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      } // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n\n\n      if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      } // We have a normal character in char0, and possibly one in char1\n\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n    } // finish data processing\n\n  };\n};\n\nCea608Stream.prototype = new Stream(); // Trigger a cue point that captures the current state of the\n// display buffer\n\nCea608Stream.prototype.flushDisplayed = function (pts) {\n  var content = this.displayed_ // remove spaces from the start and end of the string\n  .map(function (row) {\n    try {\n      return row.trim();\n    } catch (e) {\n      // Ordinarily, this shouldn't happen. However, caption\n      // parsing errors should not throw exceptions and\n      // break playback.\n      // eslint-disable-next-line no-console\n      console.error('Skipping malformed caption.');\n      return '';\n    }\n  }) // combine all text rows to display in one cue\n  .join('\\n') // and remove blank rows from the start and end, but not the middle\n  .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n/**\n * Zero out the data, used for startup and on seek\n */\n\n\nCea608Stream.prototype.reset = function () {\n  this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n  this.formatting_ = [];\n};\n/**\n * Sets up control code and related constants for this instance\n */\n\n\nCea608Stream.prototype.setConstants = function () {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_ = 0x10;\n    this.EXT_ = 0x11;\n    this.CONTROL_ = (0x14 | this.field_) << 8;\n    this.OFFSET_ = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_ = 0x18;\n    this.EXT_ = 0x19;\n    this.CONTROL_ = (0x1c | this.field_) << 8;\n    this.OFFSET_ = 0x1f;\n  } // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n\n\n  this.PADDING_ = 0x0000; // Pop-on Mode\n\n  this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n  this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n  this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n  this.BACKSPACE_ = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\n\n\nCea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\n\n\nCea608Stream.prototype.isExtCharacter = function (char0, char1) {\n  return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\n\n\nCea608Stream.prototype.isMidRowCode = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n};\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\n\n\nCea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n  return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n};\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\n\n\nCea608Stream.prototype.isPAC = function (char0, char1) {\n  return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n};\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\n\n\nCea608Stream.prototype.isColorPAC = function (char1) {\n  return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n};\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\n\n\nCea608Stream.prototype.isNormalChar = function (char) {\n  return char >= 0x20 && char <= 0x7f;\n};\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\n\n\nCea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n}; // Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\n\n\nCea608Stream.prototype.addFormatting = function (pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function (text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n}; // Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\n\n\nCea608Stream.prototype.clearFormatting = function (pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n\n  var text = this.formatting_.reverse().reduce(function (text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n}; // Mode Implementations\n\n\nCea608Stream.prototype.popOn = function (pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function () {\n  var i; // clear out inactive rows\n\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  } // shift displayed rows up\n\n\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  } // clear out the bottom row\n\n\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n}; // exports\n\n\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\n\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\n\nvar parseSei = function parseSei(bytes) {\n  var i = 0,\n      result = {\n    payloadType: -1,\n    payloadSize: 0\n  },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    } // Parse payload type\n\n\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n\n    payloadType += bytes[i++]; // Parse payload size\n\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n\n    payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    } // skip the payload and parse the next message\n\n\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n}; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\nvar parseUserData = function parseUserData(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n  if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n    return null;\n  } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n  if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n    return null;\n  } // finally, user_data_type_code should be 0x03 for caption data\n\n\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  } // return the user_data_type_structure and strip the trailing\n  // marker bits\n\n\n  return sei.payload.subarray(8, sei.payload.length - 1);\n}; // see CEA-708-D, section 4.4\n\n\nvar parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n  var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n  if (!(userData[0] & 0x40)) {\n    return results;\n  } // parse out the cc_data_1 and cc_data_2 fields\n\n\n  count = userData[0] & 0x1f;\n\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    }; // capture cc data when cc_valid is 1\n\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n      results.push(data);\n    }\n  }\n\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n  var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n  while (i < length - 2) {\n    if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n      emulationPreventionBytesPositions.push(i + 2);\n      i += 2;\n    } else {\n      i++;\n    }\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (emulationPreventionBytesPositions.length === 0) {\n    return data;\n  } // Create a new array to hold the NAL unit data\n\n\n  newLength = length - emulationPreventionBytesPositions.length;\n  newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === emulationPreventionBytesPositions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      emulationPreventionBytesPositions.shift();\n    }\n\n    newData[i] = data[sourceIndex];\n  }\n\n  return newData;\n}; // exports\n\n\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function handleRollover(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n\n\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += direction * MAX_TS;\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function TimestampRolloverStream(type) {\n  var lastDTS, referenceDTS;\n  TimestampRolloverStream.prototype.init.call(this);\n  this.type_ = type;\n\n  this.push = function (data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n    lastDTS = data.dts;\n    this.trigger('data', data);\n  };\n\n  this.flush = function () {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function () {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n};\n\nTimestampRolloverStream.prototype = new Stream();\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","module.exports = SafeParseTuple;\n\nfunction SafeParseTuple(obj, reviver) {\n  var json;\n  var error = null;\n\n  try {\n    json = JSON.parse(obj, reviver);\n  } catch (err) {\n    error = err;\n  }\n\n  return [error, json];\n}","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\n\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\n\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\nvar PES_TIMESCALE = 90000,\n    MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\n\nvar parsePsi_ = function parsePsi_(bytes, pmt) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n\n          break;\n\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n\n          break;\n\n        default:\n          break;\n      } // Found the pat and pmt, we can stop walking the segment\n\n\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\n\n\nvar parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n  var endLoop = false; // Start walking from start of segment to get first audio packet\n\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last audio packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\n\n\nvar parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n  var endLoop = false;\n  var currentFrame = {\n    data: [],\n    size: 0\n  }; // Start walking from start of segment to get first video packet\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n\n                  currentFrame.size = 0;\n                }\n              }\n\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last video packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'video';\n              result.video.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\n\n\nvar adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n\n    segmentInfo.audio.forEach(function (info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n\n    segmentInfo.video.forEach(function (info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n/**\n * inspects the aac data stream for start and end time information\n */\n\n\nvar inspectAac_ = function inspectAac_(bytes) {\n  var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n\n        byteIndex += frameSize;\n        break;\n\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n\n      default:\n        byteIndex++;\n        break;\n    }\n\n    if (endLoop) {\n      return null;\n    }\n  }\n\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n  var result = {\n    audio: [{\n      type: 'audio',\n      dts: timestamp,\n      pts: timestamp\n    }, {\n      type: 'audio',\n      dts: timestamp + audioCount * 1024 * audioTimescale,\n      pts: timestamp + audioCount * 1024 * audioTimescale\n    }]\n  };\n  return result;\n};\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\n\n\nvar inspectTs_ = function inspectTs_(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n  var result = {};\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n\n          break;\n\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\n\n\nvar inspect = function inspect(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || !result.audio && !result.video) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};","/** @license React v16.8.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"307\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.1\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.1\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    p = require(\"object-assign\"),\n    ba = require(\"scheduler\");\n\nfunction ca(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction t(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : t(\"227\");\n\nfunction da(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar ea = !1,\n    fa = null,\n    ha = !1,\n    ia = null,\n    ja = {\n  onError: function onError(a) {\n    ea = !0;\n    fa = a;\n  }\n};\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ea = !1;\n  fa = null;\n  da.apply(ja, arguments);\n}\n\nfunction la(a, b, c, d, e, f, g, h, l) {\n  ka.apply(this, arguments);\n\n  if (ea) {\n    if (ea) {\n      var k = fa;\n      ea = !1;\n      fa = null;\n    } else t(\"198\"), k = void 0;\n\n    ha || (ha = !0, ia = k);\n  }\n}\n\nvar ma = null,\n    na = {};\n\nfunction oa() {\n  if (ma) for (var a in na) {\n    var b = na[a],\n        c = ma.indexOf(a);\n    -1 < c ? void 0 : t(\"96\", a);\n\n    if (!pa[c]) {\n      b.extractEvents ? void 0 : t(\"97\", a);\n      pa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        ra.hasOwnProperty(h) ? t(\"99\", h) : void 0;\n        ra[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && sa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (sa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : t(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction sa(a, b, c) {\n  ta[a] ? t(\"100\", a) : void 0;\n  ta[a] = b;\n  ua[a] = b.eventTypes[c].dependencies;\n}\n\nvar pa = [],\n    ra = {},\n    ta = {},\n    ua = {},\n    va = null,\n    wa = null,\n    xa = null;\n\nfunction ya(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = xa(c);\n  la(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction za(a, b) {\n  null == b ? t(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction Aa(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar Ba = null;\n\nfunction Ca(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      ya(a, b[d], c[d]);\n    } else b && ya(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Da = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    ma ? t(\"101\") : void 0;\n    ma = Array.prototype.slice.call(a);\n    oa();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        na.hasOwnProperty(c) && na[c] === d || (na[c] ? t(\"102\", c) : void 0, na[c] = d, b = !0);\n      }\n    }\n\n    b && oa();\n  }\n};\n\nfunction Ea(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = va(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? t(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Fa(a) {\n  null !== a && (Ba = za(Ba, a));\n  a = Ba;\n  Ba = null;\n  if (a && (Aa(a, Ca), Ba ? t(\"95\") : void 0, ha)) throw a = ia, ha = !1, ia = null, a;\n}\n\nvar Ga = Math.random().toString(36).slice(2),\n    Ha = \"__reactInternalInstance$\" + Ga,\n    Ia = \"__reactEventHandlers$\" + Ga;\n\nfunction Ja(a) {\n  if (a[Ha]) return a[Ha];\n\n  for (; !a[Ha];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Ha];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ka(a) {\n  a = a[Ha];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction La(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  t(\"33\");\n}\n\nfunction Ma(a) {\n  return a[Ia] || null;\n}\n\nfunction Na(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Oa(a, b, c) {\n  if (b = Ea(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = za(c._dispatchListeners, b), c._dispatchInstances = za(c._dispatchInstances, a);\n}\n\nfunction Pa(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = Na(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Oa(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Oa(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Qa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ea(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = za(c._dispatchListeners, b), c._dispatchInstances = za(c._dispatchInstances, a));\n}\n\nfunction Ra(a) {\n  a && a.dispatchConfig.registrationName && Qa(a._targetInst, null, a);\n}\n\nfunction Sa(a) {\n  Aa(a, Pa);\n}\n\nvar Ta = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Ua(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Va = {\n  animationend: Ua(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Ua(\"Animation\", \"AnimationIteration\"),\n  animationstart: Ua(\"Animation\", \"AnimationStart\"),\n  transitionend: Ua(\"Transition\", \"TransitionEnd\")\n},\n    Wa = {},\n    Xa = {};\nTa && (Xa = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Va.animationend.animation, delete Va.animationiteration.animation, delete Va.animationstart.animation), \"TransitionEvent\" in window || delete Va.transitionend.transition);\n\nfunction Ya(a) {\n  if (Wa[a]) return Wa[a];\n  if (!Va[a]) return a;\n  var b = Va[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Xa) return Wa[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Za = Ya(\"animationend\"),\n    $a = Ya(\"animationiteration\"),\n    ab = Ya(\"animationstart\"),\n    bb = Ya(\"transitionend\"),\n    cb = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    db = null,\n    eb = null,\n    fb = null;\n\nfunction gb() {\n  if (fb) return fb;\n  var a,\n      b = eb,\n      c = b.length,\n      d,\n      e = \"value\" in db ? db.value : db.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return fb = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction hb() {\n  return !0;\n}\n\nfunction ib() {\n  return !1;\n}\n\nfunction A(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? hb : ib;\n  this.isPropagationStopped = ib;\n  return this;\n}\n\np(A.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = hb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = hb);\n  },\n  persist: function persist() {\n    this.isPersistent = hb;\n  },\n  isPersistent: ib,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = ib;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\nA.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\nA.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  p(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = p({}, d.Interface, a);\n  c.extend = d.extend;\n  jb(c);\n  return c;\n};\n\njb(A);\n\nfunction kb(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction lb(a) {\n  a instanceof this ? void 0 : t(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction jb(a) {\n  a.eventPool = [];\n  a.getPooled = kb;\n  a.release = lb;\n}\n\nvar mb = A.extend({\n  data: null\n}),\n    nb = A.extend({\n  data: null\n}),\n    ob = [9, 13, 27, 32],\n    pb = Ta && \"CompositionEvent\" in window,\n    qb = null;\nTa && \"documentMode\" in document && (qb = document.documentMode);\nvar rb = Ta && \"TextEvent\" in window && !qb,\n    sb = Ta && (!pb || qb && 8 < qb && 11 >= qb),\n    tb = String.fromCharCode(32),\n    ub = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== ob.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction yb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar zb = !1;\n\nfunction Ab(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return yb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      wb = !0;\n      return tb;\n\n    case \"textInput\":\n      return a = b.data, a === tb && wb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction Bb(a, b) {\n  if (zb) return \"compositionend\" === a || !pb && xb(a, b) ? (a = gb(), fb = eb = db = null, zb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return sb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar Cb = {\n  eventTypes: ub,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (pb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = ub.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = ub.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = ub.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else zb ? xb(a, c) && (e = ub.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = ub.compositionStart);\n    e ? (sb && \"ko\" !== c.locale && (zb || e !== ub.compositionStart ? e === ub.compositionEnd && zb && (f = gb()) : (db = d, eb = \"value\" in db ? db.value : db.textContent, zb = !0)), e = mb.getPooled(e, b, c, d), f ? e.data = f : (f = yb(c), null !== f && (e.data = f)), Sa(e), f = e) : f = null;\n    (a = rb ? Ab(a, c) : Bb(a, c)) ? (b = nb.getPooled(ub.beforeInput, b, c, d), b.data = a, Sa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Db = null,\n    Eb = null,\n    Fb = null;\n\nfunction Gb(a) {\n  if (a = wa(a)) {\n    \"function\" !== typeof Db ? t(\"280\") : void 0;\n    var b = va(a.stateNode);\n    Db(a.stateNode, a.type, b);\n  }\n}\n\nfunction Hb(a) {\n  Eb ? Fb ? Fb.push(a) : Fb = [a] : Eb = a;\n}\n\nfunction Ib() {\n  if (Eb) {\n    var a = Eb,\n        b = Fb;\n    Fb = Eb = null;\n    Gb(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Gb(b[a]);\n    }\n  }\n}\n\nfunction Jb(a, b) {\n  return a(b);\n}\n\nfunction Kb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Lb() {}\n\nvar Mb = !1;\n\nfunction Nb(a, b) {\n  if (Mb) return a(b);\n  Mb = !0;\n\n  try {\n    return Jb(a, b);\n  } finally {\n    if (Mb = !1, null !== Eb || null !== Fb) Lb(), Ib();\n  }\n}\n\nvar Ob = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Pb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Ob[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Qb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Sb(a) {\n  if (!Ta) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Tb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Ub(a) {\n  var b = Tb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Vb(a) {\n  a._valueTracker || (a._valueTracker = Ub(a));\n}\n\nfunction Wb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Tb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Xb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nXb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Xb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Yb = /^(.*)[\\\\\\/]/,\n    D = \"function\" === typeof Symbol && Symbol.for,\n    Zb = D ? Symbol.for(\"react.element\") : 60103,\n    $b = D ? Symbol.for(\"react.portal\") : 60106,\n    ac = D ? Symbol.for(\"react.fragment\") : 60107,\n    bc = D ? Symbol.for(\"react.strict_mode\") : 60108,\n    cc = D ? Symbol.for(\"react.profiler\") : 60114,\n    dc = D ? Symbol.for(\"react.provider\") : 60109,\n    ec = D ? Symbol.for(\"react.context\") : 60110,\n    fc = D ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    gc = D ? Symbol.for(\"react.forward_ref\") : 60112,\n    hc = D ? Symbol.for(\"react.suspense\") : 60113,\n    ic = D ? Symbol.for(\"react.memo\") : 60115,\n    jc = D ? Symbol.for(\"react.lazy\") : 60116,\n    kc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction lc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = kc && a[kc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction mc(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case fc:\n      return \"ConcurrentMode\";\n\n    case ac:\n      return \"Fragment\";\n\n    case $b:\n      return \"Portal\";\n\n    case cc:\n      return \"Profiler\";\n\n    case bc:\n      return \"StrictMode\";\n\n    case hc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ec:\n      return \"Context.Consumer\";\n\n    case dc:\n      return \"Context.Provider\";\n\n    case gc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ic:\n      return mc(a.type);\n\n    case jc:\n      if (a = 1 === a._status ? a._result : null) return mc(a);\n  }\n  return null;\n}\n\nfunction nc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = mc(a.type);\n        c = null;\n        d && (c = mc(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Yb, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar oc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    pc = Object.prototype.hasOwnProperty,\n    qc = {},\n    rc = {};\n\nfunction sc(a) {\n  if (pc.call(rc, a)) return !0;\n  if (pc.call(qc, a)) return !1;\n  if (oc.test(a)) return rc[a] = !0;\n  qc[a] = !0;\n  return !1;\n}\n\nfunction tc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction uc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || tc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction F(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar G = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  G[a] = new F(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  G[b] = new F(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  G[a] = new F(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  G[a] = new F(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  G[a] = new F(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  G[a] = new F(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  G[a] = new F(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  G[a] = new F(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  G[a] = new F(a, 5, !1, a.toLowerCase(), null);\n});\nvar vc = /[\\-:]([a-z])/g;\n\nfunction wc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(vc, wc);\n  G[b] = new F(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(vc, wc);\n  G[b] = new F(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(vc, wc);\n  G[b] = new F(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\nG.tabIndex = new F(\"tabIndex\", 1, !1, \"tabindex\", null);\n\nfunction xc(a, b, c, d) {\n  var e = G.hasOwnProperty(b) ? G[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (uc(b, c, e, d) && (c = null), d || null === e ? sc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction yc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction zc(a, b) {\n  var c = b.checked;\n  return p({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction Ac(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = yc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction Bc(a, b) {\n  b = b.checked;\n  null != b && xc(a, \"checked\", b, !1);\n}\n\nfunction Cc(a, b) {\n  Bc(a, b);\n  var c = yc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? Dc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && Dc(a, b.type, yc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ec(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction Dc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Fc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Gc(a, b, c) {\n  a = A.getPooled(Fc.change, a, b, c);\n  a.type = \"change\";\n  Hb(c);\n  Sa(a);\n  return a;\n}\n\nvar Hc = null,\n    Ic = null;\n\nfunction Jc(a) {\n  Fa(a);\n}\n\nfunction Kc(a) {\n  var b = La(a);\n  if (Wb(b)) return a;\n}\n\nfunction Lc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Mc = !1;\nTa && (Mc = Sb(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Nc() {\n  Hc && (Hc.detachEvent(\"onpropertychange\", Oc), Ic = Hc = null);\n}\n\nfunction Oc(a) {\n  \"value\" === a.propertyName && Kc(Ic) && (a = Gc(Ic, a, Qb(a)), Nb(Jc, a));\n}\n\nfunction Pc(a, b, c) {\n  \"focus\" === a ? (Nc(), Hc = b, Ic = c, Hc.attachEvent(\"onpropertychange\", Oc)) : \"blur\" === a && Nc();\n}\n\nfunction Qc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Kc(Ic);\n}\n\nfunction Rc(a, b) {\n  if (\"click\" === a) return Kc(b);\n}\n\nfunction Sc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Kc(b);\n}\n\nvar Tc = {\n  eventTypes: Fc,\n  _isInputEventSupported: Mc,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? La(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Lc : Pb(e) ? Mc ? f = Sc : (f = Qc, g = Pc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Rc);\n    if (f && (f = f(a, b))) return Gc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && Dc(e, \"number\", e.value);\n  }\n},\n    Uc = A.extend({\n  view: null,\n  detail: null\n}),\n    Vc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Wc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Vc[a]) ? !!b[a] : !1;\n}\n\nfunction Xc() {\n  return Wc;\n}\n\nvar Yc = 0,\n    Zc = 0,\n    $c = !1,\n    ad = !1,\n    bd = Uc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Xc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Yc;\n    Yc = a.screenX;\n    return $c ? \"mousemove\" === a.type ? a.screenX - b : 0 : ($c = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Zc;\n    Zc = a.screenY;\n    return ad ? \"mousemove\" === a.type ? a.screenY - b : 0 : (ad = !0, 0);\n  }\n}),\n    cd = bd.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    dd = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ed = {\n  eventTypes: dd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ja(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = bd, h = dd.mouseLeave, l = dd.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = cd, h = dd.pointerLeave, l = dd.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : La(f);\n    e = null == b ? e : La(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = Na(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = Na(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = Na(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = Na(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = Na(b);\n        e = Na(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = Na(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = Na(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Qa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Qa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction fd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar gd = Object.prototype.hasOwnProperty;\n\nfunction hd(a, b) {\n  if (fd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!gd.call(b, c[d]) || !fd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction kd(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction ld(a) {\n  2 !== kd(a) ? t(\"188\") : void 0;\n}\n\nfunction md(a) {\n  var b = a.alternate;\n  if (!b) return b = kd(a), 3 === b ? t(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return ld(e), a;\n        if (g === d) return ld(e), b;\n        g = g.sibling;\n      }\n\n      t(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : t(\"189\");\n      }\n    }\n    c.alternate !== d ? t(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? t(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction nd(a) {\n  a = md(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar od = A.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    pd = A.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    qd = Uc.extend({\n  relatedTarget: null\n});\n\nfunction rd(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar sd = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    td = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    ud = Uc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = sd[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = rd(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? td[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Xc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? rd(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? rd(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    vd = bd.extend({\n  dataTransfer: null\n}),\n    wd = Uc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Xc\n}),\n    xd = A.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    yd = bd.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    zd = [[\"abort\", \"abort\"], [Za, \"animationEnd\"], [$a, \"animationIteration\"], [ab, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [bb, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    Ad = {},\n    Bd = {};\n\nfunction Cd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  Ad[a] = b;\n  Bd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  Cd(a, !0);\n});\nzd.forEach(function (a) {\n  Cd(a, !1);\n});\nvar Dd = {\n  eventTypes: Ad,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = Bd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = Bd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === rd(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = ud;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = qd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = bd;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = vd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = wd;\n        break;\n\n      case Za:\n      case $a:\n      case ab:\n        a = od;\n        break;\n\n      case bb:\n        a = xd;\n        break;\n\n      case \"scroll\":\n        a = Uc;\n        break;\n\n      case \"wheel\":\n        a = yd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = pd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = cd;\n        break;\n\n      default:\n        a = A;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Sa(b);\n    return b;\n  }\n},\n    Ed = Dd.isInteractiveTopLevelEventType,\n    Fd = [];\n\nfunction Gd(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ja(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Qb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < pa.length; h++) {\n      var l = pa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = za(g, l));\n    }\n\n    Fa(g);\n  }\n}\n\nvar Hd = !0;\n\nfunction H(a, b) {\n  if (!b) return null;\n  var c = (Ed(a) ? Id : Jd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Kd(a, b) {\n  if (!b) return null;\n  var c = (Ed(a) ? Id : Jd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Id(a, b) {\n  Kb(Jd, a, b);\n}\n\nfunction Jd(a, b) {\n  if (Hd) {\n    var c = Qb(b);\n    c = Ja(c);\n    null === c || \"number\" !== typeof c.tag || 2 === kd(c) || (c = null);\n\n    if (Fd.length) {\n      var d = Fd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Nb(Gd, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > Fd.length && Fd.push(a);\n    }\n  }\n}\n\nvar Ld = {},\n    Md = 0,\n    Nd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Od(a) {\n  Object.prototype.hasOwnProperty.call(a, Nd) || (a[Nd] = Md++, Ld[a[Nd]] = {});\n  return Ld[a[Nd]];\n}\n\nfunction Pd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Qd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Rd(a, b) {\n  var c = Qd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Qd(c);\n  }\n}\n\nfunction Sd(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Sd(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Td() {\n  for (var a = window, b = Pd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      a = b.contentDocument.defaultView;\n    } catch (c) {\n      break;\n    }\n\n    b = Pd(a.document);\n  }\n\n  return b;\n}\n\nfunction Ud(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nvar Vd = Ta && \"documentMode\" in document && 11 >= document.documentMode,\n    Wd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Xd = null,\n    Yd = null,\n    Zd = null,\n    $d = !1;\n\nfunction ae(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if ($d || null == Xd || Xd !== Pd(c)) return null;\n  c = Xd;\n  \"selectionStart\" in c && Ud(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Zd && hd(Zd, c) ? null : (Zd = c, a = A.getPooled(Wd.select, Yd, a, b), a.type = \"select\", a.target = Xd, Sa(a), a);\n}\n\nvar be = {\n  eventTypes: Wd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Od(e);\n        f = ua.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? La(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Pb(e) || \"true\" === e.contentEditable) Xd = e, Yd = b, Zd = null;\n        break;\n\n      case \"blur\":\n        Zd = Yd = Xd = null;\n        break;\n\n      case \"mousedown\":\n        $d = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return $d = !1, ae(c, d);\n\n      case \"selectionchange\":\n        if (Vd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return ae(c, d);\n    }\n\n    return null;\n  }\n};\nDa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nva = Ma;\nwa = Ka;\nxa = La;\nDa.injectEventPluginsByName({\n  SimpleEventPlugin: Dd,\n  EnterLeaveEventPlugin: ed,\n  ChangeEventPlugin: Tc,\n  SelectEventPlugin: be,\n  BeforeInputEventPlugin: Cb\n});\n\nfunction ce(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction de(a, b) {\n  a = p({\n    children: void 0\n  }, b);\n  if (b = ce(b.children)) a.children = b;\n  return a;\n}\n\nfunction ee(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + yc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction fe(a, b) {\n  null != b.dangerouslySetInnerHTML ? t(\"91\") : void 0;\n  return p({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ge(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? t(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : t(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: yc(c)\n  };\n}\n\nfunction he(a, b) {\n  var c = yc(b.value),\n      d = yc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ie(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar je = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ke(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction le(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ke(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar me = void 0,\n    ne = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== je.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    me = me || document.createElement(\"div\");\n    me.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = me.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction oe(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar pe = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    qe = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(pe).forEach(function (a) {\n  qe.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    pe[b] = pe[a];\n  });\n});\n\nfunction re(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || pe.hasOwnProperty(a) && pe[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction se(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = re(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar te = p({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction ue(a, b) {\n  b && (te[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? t(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? t(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : t(\"61\")), null != b.style && \"object\" !== typeof b.style ? t(\"62\", \"\") : void 0);\n}\n\nfunction ve(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction we(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Od(a);\n  b = ua[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Kd(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Kd(\"focus\", a);\n          Kd(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Sb(e) && Kd(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === cb.indexOf(e) && H(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction xe() {}\n\nvar ye = null,\n    ze = null;\n\nfunction Ae(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction Be(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar Ce = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    De = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ee = ba.unstable_scheduleCallback,\n    Fe = ba.unstable_cancelCallback;\n\nfunction Ge(a, b, c, d, e) {\n  a[Ia] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && Bc(a, e);\n  ve(c, d);\n  d = ve(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? se(a, h) : \"dangerouslySetInnerHTML\" === g ? ne(a, h) : \"children\" === g ? oe(a, h) : xc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      Cc(a, e);\n      break;\n\n    case \"textarea\":\n      he(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ee(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ee(a, !!e.multiple, e.defaultValue, !0) : ee(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction He(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ie(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Je = [],\n    Ke = -1;\n\nfunction I(a) {\n  0 > Ke || (a.current = Je[Ke], Je[Ke] = null, Ke--);\n}\n\nfunction J(a, b) {\n  Ke++;\n  Je[Ke] = a.current;\n  a.current = b;\n}\n\nvar Le = {},\n    K = {\n  current: Le\n},\n    L = {\n  current: !1\n},\n    Me = Le;\n\nfunction Oe(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return Le;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction M(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Pe(a) {\n  I(L, a);\n  I(K, a);\n}\n\nfunction Qe(a) {\n  I(L, a);\n  I(K, a);\n}\n\nfunction Re(a, b, c) {\n  K.current !== Le ? t(\"168\") : void 0;\n  J(K, b, a);\n  J(L, c, a);\n}\n\nfunction Se(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : t(\"108\", mc(b) || \"Unknown\", e);\n  }\n\n  return p({}, c, d);\n}\n\nfunction Te(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || Le;\n  Me = K.current;\n  J(K, b, a);\n  J(L, L.current, a);\n  return !0;\n}\n\nfunction Ue(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : t(\"169\");\n  c ? (b = Se(a, b, Me), d.__reactInternalMemoizedMergedChildContext = b, I(L, a), I(K, a), J(K, b, a)) : I(L, a);\n  J(L, c, a);\n}\n\nvar Ve = null,\n    We = null;\n\nfunction Xe(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Ye(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Ve = Xe(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    We = Xe(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ze(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction N(a, b, c, d) {\n  return new Ze(a, b, c, d);\n}\n\nfunction $e(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction af(a) {\n  if (\"function\" === typeof a) return $e(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === gc) return 11;\n    if (a === ic) return 14;\n  }\n\n  return 2;\n}\n\nfunction bf(a, b) {\n  var c = a.alternate;\n  null === c ? (c = N(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction cf(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) $e(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case ac:\n      return df(c.children, e, f, b);\n\n    case fc:\n      return ef(c, e | 3, f, b);\n\n    case bc:\n      return ef(c, e | 2, f, b);\n\n    case cc:\n      return a = N(12, c, b, e | 4), a.elementType = cc, a.type = cc, a.expirationTime = f, a;\n\n    case hc:\n      return a = N(13, c, b, e), a.elementType = hc, a.type = hc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case dc:\n          g = 10;\n          break a;\n\n        case ec:\n          g = 9;\n          break a;\n\n        case gc:\n          g = 11;\n          break a;\n\n        case ic:\n          g = 14;\n          break a;\n\n        case jc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      t(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = N(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction df(a, b, c, d) {\n  a = N(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction ef(a, b, c, d) {\n  a = N(8, a, d, b);\n  b = 0 === (b & 1) ? bc : fc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction ff(a, b, c) {\n  a = N(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction gf(a, b, c) {\n  b = N(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction hf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  jf(b, a);\n}\n\nfunction kf(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  jf(b, a);\n}\n\nfunction lf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction jf(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction P(a, b) {\n  if (a && a.defaultProps) {\n    b = p({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction mf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar nf = new aa.Component().refs;\n\nfunction of(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : p({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar xf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === kd(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = pf();\n    d = qf(d, a);\n    var e = rf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    sf();\n    tf(a, e);\n    uf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = pf();\n    d = qf(d, a);\n    var e = rf(d);\n    e.tag = vf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    sf();\n    tf(a, e);\n    uf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = pf();\n    c = qf(c, a);\n    var d = rf(c);\n    d.tag = wf;\n    void 0 !== b && null !== b && (d.callback = b);\n    sf();\n    tf(a, d);\n    uf(a, c);\n  }\n};\n\nfunction yf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !hd(c, d) || !hd(e, f) : !0;\n}\n\nfunction zf(a, b, c) {\n  var d = !1,\n      e = Le;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = Af(f) : (e = M(b) ? Me : K.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Oe(a, e) : Le);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = xf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction Bf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && xf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction Cf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = nf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = Af(f) : (f = M(b) ? Me : K.current, e.context = Oe(a, f));\n  f = a.updateQueue;\n  null !== f && (Df(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (of(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && xf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (Df(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar Ef = Array.isArray;\n\nfunction Ff(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? t(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : t(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === nf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? t(\"284\") : void 0;\n    c._owner ? void 0 : t(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Gf(a, b) {\n  \"textarea\" !== a.type && t(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Hf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = bf(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = ff(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Ff(a, b, c), d.return = a, d;\n    d = cf(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Ff(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = gf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = df(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function q(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = ff(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Zb:\n          return c = cf(b.type, b.key, b.props, null, a.mode, c), c.ref = Ff(a, null, b), c.return = a, c;\n\n        case $b:\n          return b = gf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (Ef(b) || lc(b)) return b = df(b, a.mode, c, null), b.return = a, b;\n      Gf(a, b);\n    }\n\n    return null;\n  }\n\n  function x(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Zb:\n          return c.key === e ? c.type === ac ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case $b:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (Ef(c) || lc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Gf(a, c);\n    }\n\n    return null;\n  }\n\n  function C(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Zb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === ac ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case $b:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (Ef(d) || lc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Gf(b, d);\n    }\n\n    return null;\n  }\n\n  function w(e, g, h, k) {\n    for (var l = null, m = null, n = g, u = g = 0, r = null; null !== n && u < h.length; u++) {\n      n.index > u ? (r = n, n = null) : r = n.sibling;\n      var v = x(e, n, h[u], k);\n\n      if (null === v) {\n        null === n && (n = r);\n        break;\n      }\n\n      a && n && null === v.alternate && b(e, n);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      n = r;\n    }\n\n    if (u === h.length) return c(e, n), l;\n\n    if (null === n) {\n      for (; u < h.length; u++) {\n        if (n = q(e, h[u], k)) g = f(n, g, u), null === m ? l = n : m.sibling = n, m = n;\n      }\n\n      return l;\n    }\n\n    for (n = d(e, n); u < h.length; u++) {\n      if (r = C(n, e, u, h[u], k)) a && null !== r.alternate && n.delete(null === r.key ? u : r.key), g = f(r, g, u), null === m ? l = r : m.sibling = r, m = r;\n    }\n\n    a && n.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function E(e, g, h, k) {\n    var l = lc(h);\n    \"function\" !== typeof l ? t(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? t(\"151\") : void 0;\n\n    for (var m = l = null, n = g, u = g = 0, r = null, v = h.next(); null !== n && !v.done; u++, v = h.next()) {\n      n.index > u ? (r = n, n = null) : r = n.sibling;\n      var z = x(e, n, v.value, k);\n\n      if (null === z) {\n        n || (n = r);\n        break;\n      }\n\n      a && n && null === z.alternate && b(e, n);\n      g = f(z, g, u);\n      null === m ? l = z : m.sibling = z;\n      m = z;\n      n = r;\n    }\n\n    if (v.done) return c(e, n), l;\n\n    if (null === n) {\n      for (; !v.done; u++, v = h.next()) {\n        v = q(e, v.value, k), null !== v && (g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);\n      }\n\n      return l;\n    }\n\n    for (n = d(e, n); !v.done; u++, v = h.next()) {\n      v = C(n, e, u, v.value, k), null !== v && (a && null !== v.alternate && n.delete(null === v.key ? u : v.key), g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);\n    }\n\n    a && n.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === ac && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Zb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === ac : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === ac ? f.props.children : f.props, h);\n                d.ref = Ff(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === ac ? (d = df(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = cf(f.type, f.key, f.props, null, a.mode, h), h.ref = Ff(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case $b:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = gf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = ff(f, a.mode, h), d.return = a, a = d), g(a);\n    if (Ef(f)) return w(a, d, f, h);\n    if (lc(f)) return E(a, d, f, h);\n    l && Gf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, t(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar If = Hf(!0),\n    Jf = Hf(!1),\n    Kf = {},\n    Lf = {\n  current: Kf\n},\n    Mf = {\n  current: Kf\n},\n    Nf = {\n  current: Kf\n};\n\nfunction Of(a) {\n  a === Kf ? t(\"174\") : void 0;\n  return a;\n}\n\nfunction Pf(a, b) {\n  J(Nf, b, a);\n  J(Mf, a, a);\n  J(Lf, Kf, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : le(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = le(b, c);\n  }\n\n  I(Lf, a);\n  J(Lf, b, a);\n}\n\nfunction Qf(a) {\n  I(Lf, a);\n  I(Mf, a);\n  I(Nf, a);\n}\n\nfunction Rf(a) {\n  Of(Nf.current);\n  var b = Of(Lf.current);\n  var c = le(b, a.type);\n  b !== c && (J(Mf, a, a), J(Lf, c, a));\n}\n\nfunction Sf(a) {\n  Mf.current === a && (I(Lf, a), I(Mf, a));\n}\n\nvar Tf = 0,\n    Uf = 2,\n    Vf = 4,\n    Wf = 8,\n    Xf = 16,\n    Yf = 32,\n    Zf = 64,\n    $f = 128,\n    ag = Xb.ReactCurrentDispatcher,\n    bg = 0,\n    cg = null,\n    Q = null,\n    dg = null,\n    eg = null,\n    R = null,\n    fg = null,\n    gg = 0,\n    hg = null,\n    ig = 0,\n    jg = !1,\n    kg = null,\n    lg = 0;\n\nfunction mg() {\n  t(\"307\");\n}\n\nfunction ng(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!fd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction og(a, b, c, d, e, f) {\n  bg = f;\n  cg = b;\n  dg = null !== a ? a.memoizedState : null;\n  ag.current = null === dg ? pg : qg;\n  b = c(d, e);\n\n  if (jg) {\n    do {\n      jg = !1, lg += 1, dg = null !== a ? a.memoizedState : null, fg = eg, hg = R = Q = null, ag.current = qg, b = c(d, e);\n    } while (jg);\n\n    kg = null;\n    lg = 0;\n  }\n\n  ag.current = rg;\n  a = cg;\n  a.memoizedState = eg;\n  a.expirationTime = gg;\n  a.updateQueue = hg;\n  a.effectTag |= ig;\n  a = null !== Q && null !== Q.next;\n  bg = 0;\n  fg = R = eg = dg = Q = cg = null;\n  gg = 0;\n  hg = null;\n  ig = 0;\n  a ? t(\"300\") : void 0;\n  return b;\n}\n\nfunction sg() {\n  ag.current = rg;\n  bg = 0;\n  fg = R = eg = dg = Q = cg = null;\n  gg = 0;\n  hg = null;\n  ig = 0;\n  jg = !1;\n  kg = null;\n  lg = 0;\n}\n\nfunction tg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === R ? eg = R = a : R = R.next = a;\n  return R;\n}\n\nfunction ug() {\n  if (null !== fg) R = fg, fg = R.next, Q = dg, dg = null !== Q ? Q.next : null;else {\n    null === dg ? t(\"310\") : void 0;\n    Q = dg;\n    var a = {\n      memoizedState: Q.memoizedState,\n      baseState: Q.baseState,\n      queue: Q.queue,\n      baseUpdate: Q.baseUpdate,\n      next: null\n    };\n    R = null === R ? eg = a : R.next = a;\n    dg = Q.next;\n  }\n  return R;\n}\n\nfunction vg(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction wg(a) {\n  var b = ug(),\n      c = b.queue;\n  null === c ? t(\"311\") : void 0;\n\n  if (0 < lg) {\n    var d = c.dispatch;\n\n    if (null !== kg) {\n      var e = kg.get(c);\n\n      if (void 0 !== e) {\n        kg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        fd(f, b.memoizedState) || (xg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < bg ? (k || (k = !0, h = g, e = f), m > gg && (gg = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    fd(f, b.memoizedState) || (xg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.eagerReducer = a;\n    c.eagerState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction yg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === hg ? (hg = {\n    lastEffect: null\n  }, hg.lastEffect = a.next = a) : (b = hg.lastEffect, null === b ? hg.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, hg.lastEffect = a));\n  return a;\n}\n\nfunction zg(a, b, c, d) {\n  var e = tg();\n  ig |= a;\n  e.memoizedState = yg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction Bg(a, b, c, d) {\n  var e = ug();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== Q) {\n    var g = Q.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && ng(d, g.deps)) {\n      yg(Tf, c, f, d);\n      return;\n    }\n  }\n\n  ig |= a;\n  e.memoizedState = yg(b, c, f, d);\n}\n\nfunction Cg(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction Dg() {}\n\nfunction Eg(a, b, c) {\n  25 > lg ? void 0 : t(\"301\");\n  var d = a.alternate;\n  if (a === cg || null !== d && d === cg) {\n    if (jg = !0, a = {\n      expirationTime: bg,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === kg && (kg = new Map()), c = kg.get(b), void 0 === c) kg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    sf();\n    var e = pf();\n    e = qf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.eagerReducer, null !== d)) try {\n      var l = b.eagerState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (fd(k, l)) return;\n    } catch (m) {} finally {}\n    uf(a, e);\n  }\n}\n\nvar rg = {\n  readContext: Af,\n  useCallback: mg,\n  useContext: mg,\n  useEffect: mg,\n  useImperativeHandle: mg,\n  useLayoutEffect: mg,\n  useMemo: mg,\n  useReducer: mg,\n  useRef: mg,\n  useState: mg,\n  useDebugValue: mg\n},\n    pg = {\n  readContext: Af,\n  useCallback: function useCallback(a, b) {\n    tg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: Af,\n  useEffect: function useEffect(a, b) {\n    return zg(516, $f | Zf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : [a];\n    return zg(4, Vf | Yf, Cg.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return zg(4, Vf | Yf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = tg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = tg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      eagerReducer: a,\n      eagerState: b\n    };\n    a = a.dispatch = Eg.bind(null, cg, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = tg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = tg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      eagerReducer: vg,\n      eagerState: a\n    };\n    a = a.dispatch = Eg.bind(null, cg, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: Dg\n},\n    qg = {\n  readContext: Af,\n  useCallback: function useCallback(a, b) {\n    var c = ug();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && ng(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: Af,\n  useEffect: function useEffect(a, b) {\n    return Bg(516, $f | Zf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : [a];\n    return Bg(4, Vf | Yf, Cg.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return Bg(4, Vf | Yf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ug();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && ng(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: wg,\n  useRef: function useRef() {\n    return ug().memoizedState;\n  },\n  useState: function useState(a) {\n    return wg(vg, a);\n  },\n  useDebugValue: Dg\n},\n    Fg = null,\n    Gg = null,\n    Hg = !1;\n\nfunction Ig(a, b) {\n  var c = N(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Jg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Kg(a) {\n  if (Hg) {\n    var b = Gg;\n\n    if (b) {\n      var c = b;\n\n      if (!Jg(a, b)) {\n        b = He(c);\n\n        if (!b || !Jg(a, b)) {\n          a.effectTag |= 2;\n          Hg = !1;\n          Fg = a;\n          return;\n        }\n\n        Ig(Fg, c);\n      }\n\n      Fg = a;\n      Gg = Ie(b);\n    } else a.effectTag |= 2, Hg = !1, Fg = a;\n  }\n}\n\nfunction Lg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag;) {\n    a = a.return;\n  }\n\n  Fg = a;\n}\n\nfunction Mg(a) {\n  if (a !== Fg) return !1;\n  if (!Hg) return Lg(a), Hg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !Be(b, a.memoizedProps)) for (b = Gg; b;) {\n    Ig(a, b), b = He(b);\n  }\n  Lg(a);\n  Gg = Fg ? He(a.stateNode) : null;\n  return !0;\n}\n\nfunction Ng() {\n  Gg = Fg = null;\n  Hg = !1;\n}\n\nvar Og = Xb.ReactCurrentOwner,\n    xg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Jf(b, null, c, d) : If(b, a.child, c, d);\n}\n\nfunction Pg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Qg(b, e);\n  d = og(a, b, c, d, f, e);\n  if (null !== a && !xg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Rg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Sg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !$e(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Tg(a, b, g, d, e, f);\n    a = cf(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : hd, c(e, d) && a.ref === b.ref)) return Rg(a, b, f);\n  b.effectTag |= 1;\n  a = bf(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Tg(a, b, c, d, e, f) {\n  return null !== a && hd(a.memoizedProps, d) && a.ref === b.ref && (xg = !1, e < f) ? Rg(a, b, f) : Ug(a, b, c, d, f);\n}\n\nfunction Vg(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Ug(a, b, c, d, e) {\n  var f = M(c) ? Me : K.current;\n  f = Oe(b, f);\n  Qg(b, e);\n  c = og(a, b, c, d, f, e);\n  if (null !== a && !xg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Rg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Wg(a, b, c, d, e) {\n  if (M(c)) {\n    var f = !0;\n    Te(b);\n  } else f = !1;\n\n  Qg(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), zf(b, c, d, e), Cf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = Af(k) : (k = M(c) ? Me : K.current, k = Oe(b, k));\n    var m = c.getDerivedStateFromProps,\n        q = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    q || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && Bf(b, g, d, k);\n    Xg = !1;\n    var x = b.memoizedState;\n    l = g.state = x;\n    var C = b.updateQueue;\n    null !== C && (Df(b, C, d, g, e), l = b.memoizedState);\n    h !== d || x !== l || L.current || Xg ? (\"function\" === typeof m && (of(b, c, m, d), l = b.memoizedState), (h = Xg || yf(b, c, h, d, x, l, k)) ? (q || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : P(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = Af(k) : (k = M(c) ? Me : K.current, k = Oe(b, k)), m = c.getDerivedStateFromProps, (q = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && Bf(b, g, d, k), Xg = !1, l = b.memoizedState, x = g.state = l, C = b.updateQueue, null !== C && (Df(b, C, d, g, e), x = b.memoizedState), h !== d || l !== x || L.current || Xg ? (\"function\" === typeof m && (of(b, c, m, d), x = b.memoizedState), (m = Xg || yf(b, c, h, d, l, x, k)) ? (q || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, x, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, x, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = x), g.props = d, g.state = x, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Yg(a, b, c, d, f, e);\n}\n\nfunction Yg(a, b, c, d, e, f) {\n  Vg(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Ue(b, c, !1), Rg(a, b, f);\n  d = b.stateNode;\n  Og.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = If(b, a.child, null, f), b.child = If(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Ue(b, c, !0);\n  return b.child;\n}\n\nfunction Zg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Re(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Re(a, b.context, !1);\n  Pf(a, b.containerInfo);\n}\n\nfunction $g(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = df(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = df(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Jf(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = bf(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = bf(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = If(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = df(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = df(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = If(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Rg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? t(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = bf(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = bf(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction ah(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || L.current) xg = !0;else {\n      if (d < c) {\n        xg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Zg(b);\n            Ng();\n            break;\n\n          case 5:\n            Rf(b);\n            break;\n\n          case 1:\n            M(b.type) && Te(b);\n            break;\n\n          case 4:\n            Pf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            bh(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return $g(a, b, c);\n              b = Rg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Rg(a, b, c);\n      }\n    }\n  } else xg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Oe(b, K.current);\n      Qg(b, c);\n      e = og(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        sg();\n\n        if (M(d)) {\n          var f = !0;\n          Te(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && of(b, d, g, a);\n        e.updater = xf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        Cf(b, d, a, c);\n        b = Yg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = mf(e);\n      b.type = a;\n      e = b.tag = af(a);\n      f = P(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Ug(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Wg(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Pg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Sg(null, b, a, P(a.type, f), d, c);\n          break;\n\n        default:\n          t(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), Ug(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), Wg(a, b, d, e, c);\n\n    case 3:\n      Zg(b);\n      d = b.updateQueue;\n      null === d ? t(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      Df(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Ng(), b = Rg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) Gg = Ie(b.stateNode.containerInfo), Fg = b, e = Hg = !0;\n        e ? (b.effectTag |= 2, b.child = Jf(b, null, d, c)) : (S(a, b, d, c), Ng());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Rf(b), null === a && Kg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Be(d, e) ? g = null : null !== f && Be(d, f) && (b.effectTag |= 16), Vg(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Kg(b), null;\n\n    case 13:\n      return $g(a, b, c);\n\n    case 4:\n      return Pf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = If(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), Pg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        bh(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = fd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !L.current) {\n              b = Rg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = rf(c), k.tag = wf, tf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n\n                  for (var m = h.return; null !== m;) {\n                    k = m.alternate;\n                    if (m.childExpirationTime < c) m.childExpirationTime = c, null !== k && k.childExpirationTime < c && (k.childExpirationTime = c);else if (null !== k && k.childExpirationTime < c) k.childExpirationTime = c;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Qg(b, c), e = Af(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = P(e, b.pendingProps), f = P(e.type, f), Sg(a, b, e, f, d, c);\n\n    case 15:\n      return Tg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, M(d) ? (a = !0, Te(b)) : a = !1, Qg(b, c), zf(b, d, e, c), Cf(b, d, e, c), Yg(null, b, d, !0, a, c);\n\n    default:\n      t(\"156\");\n  }\n}\n\nvar ch = {\n  current: null\n},\n    dh = null,\n    eh = null,\n    fh = null;\n\nfunction bh(a, b) {\n  var c = a.type._context;\n  J(ch, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction gh(a) {\n  var b = ch.current;\n  I(ch, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Qg(a, b) {\n  dh = a;\n  fh = eh = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (xg = !0);\n  a.contextDependencies = null;\n}\n\nfunction Af(a, b) {\n  if (fh !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) fh = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === eh ? (null === dh ? t(\"308\") : void 0, eh = b, dh.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : eh = eh.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar hh = 0,\n    vf = 1,\n    wf = 2,\n    ih = 3,\n    Xg = !1;\n\nfunction jh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction kh(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction rf(a) {\n  return {\n    expirationTime: a,\n    tag: hh,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction lh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction tf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = jh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = jh(a.memoizedState), e = c.updateQueue = jh(c.memoizedState)) : d = a.updateQueue = kh(e) : null === e && (e = c.updateQueue = kh(d));\n\n  null === e || d === e ? lh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (lh(d, b), lh(e, b)) : (lh(d, b), e.lastUpdate = b);\n}\n\nfunction mh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = jh(a.memoizedState) : nh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction nh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = kh(b));\n  return b;\n}\n\nfunction oh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case vf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ih:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case hh:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return p({}, d, e);\n\n    case wf:\n      Xg = !0;\n  }\n\n  return d;\n}\n\nfunction Df(a, b, c, d, e) {\n  Xg = !1;\n  b = nh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = oh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var q = l.expirationTime;\n    q < e ? (null === m && (m = l, null === g && (f = k)), h < q && (h = q)) : (k = oh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction ph(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  qh(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  qh(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction qh(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? t(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction rh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: nc(b)\n  };\n}\n\nfunction sh(a) {\n  a.effectTag |= 4;\n}\n\nvar wh = void 0,\n    xh = void 0,\n    yh = void 0,\n    zh = void 0;\n\nwh = function wh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nxh = function xh() {};\n\nyh = function yh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    Of(Lf.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = zc(g, f);\n        d = zc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = de(g, f);\n        d = de(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = p({}, f, {\n          value: void 0\n        });\n        d = p({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = fe(g, f);\n        d = fe(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = xe);\n    }\n\n    ue(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ta.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ta.hasOwnProperty(c) ? (null != k && we(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && sh(b);\n  }\n};\n\nzh = function zh(a, b, c, d) {\n  c !== d && sh(b);\n};\n\nvar Ah = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction Bh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = nc(c));\n  null !== c && mc(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && mc(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction Ch(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    Dh(a, c);\n  } else b.current = null;\n}\n\nfunction Eh(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Tf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Tf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction Fh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = re(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction Gh(a) {\n  \"function\" === typeof We && We(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              Dh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      Ch(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        Dh(a, f);\n      }\n      break;\n\n    case 5:\n      Ch(a);\n      break;\n\n    case 4:\n      Hh(a);\n  }\n}\n\nfunction Ih(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction Jh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (Ih(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    t(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      t(\"161\");\n  }\n\n  c.effectTag & 16 && (oe(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || Ih(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = xe)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction Hh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? t(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (Gh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag ? (d = b.stateNode.containerInfo, e = !0) : Gh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction Kh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      Eh(Vf, Wf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ge(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? t(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = pf()));\n      null !== a && Fh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new Ah());\n        c.forEach(function (a) {\n          var c = Lh.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      t(\"163\");\n  }\n}\n\nvar Mh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Nh(a, b, c) {\n  c = rf(c);\n  c.tag = ih;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Oh(d);\n    Bh(a, b);\n  };\n\n  return c;\n}\n\nfunction Ph(a, b, c) {\n  c = rf(c);\n  c.tag = ih;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Qh ? Qh = new Set([this]) : Qh.add(this));\n    var c = b.value,\n        e = b.stack;\n    Bh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Rh(a) {\n  switch (a.tag) {\n    case 1:\n      M(a.type) && Pe(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Qf(a), Qe(a), b = a.effectTag, 0 !== (b & 64) ? t(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Sf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 4:\n      return Qf(a), null;\n\n    case 10:\n      return gh(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Sh = Xb.ReactCurrentDispatcher,\n    Th = Xb.ReactCurrentOwner,\n    Uh = 1073741822,\n    Vh = 0,\n    Wh = !1,\n    T = null,\n    Xh = null,\n    U = 0,\n    Yh = -1,\n    Zh = !1,\n    V = null,\n    $h = !1,\n    ai = null,\n    bi = null,\n    ci = null,\n    Qh = null;\n\nfunction di() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Pe(b);\n        break;\n\n      case 3:\n        Qf(b);\n        Qe(b);\n        break;\n\n      case 5:\n        Sf(b);\n        break;\n\n      case 4:\n        Qf(b);\n        break;\n\n      case 10:\n        gh(b);\n    }\n\n    a = a.return;\n  }\n  Xh = null;\n  U = 0;\n  Yh = -1;\n  Zh = !1;\n  T = null;\n}\n\nfunction ei(a, b) {\n  ci = bi = ai = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        Eh($f, Tf, f);\n        Eh(Tf, Zf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && Dh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && fi(a, c);\n}\n\nfunction sf() {\n  null !== bi && Fe(bi);\n  null !== ci && ci();\n}\n\nfunction gi(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            M(b.type) && Pe(b);\n            break;\n\n          case 3:\n            Qf(b);\n            Qe(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Mg(b), b.effectTag &= -3;\n            xh(b);\n            break;\n\n          case 5:\n            Sf(b);\n            var h = Of(Nf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) yh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = Of(Lf.current);\n\n              if (Mg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    q = h;\n                e[Ha] = g;\n                e[Ia] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    H(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < cb.length; k++) {\n                      H(cb[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    H(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    H(\"error\", e);\n                    H(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    H(\"reset\", e);\n                    H(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    H(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    Ac(e, m);\n                    H(\"invalid\", e);\n                    we(q, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    H(\"invalid\", e);\n                    we(q, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ge(e, m), H(\"invalid\", e), we(q, \"onChange\");\n                }\n\n                ue(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ta.hasOwnProperty(f) && null != l && we(q, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Vb(e);\n                    Ec(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Vb(e);\n                    ie(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = xe);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && sh(b);\n              } else {\n                m = b;\n                e = f;\n                q = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === je.html && (l = ke(e));\n                l === je.html ? \"script\" === e ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof q.is ? k = k.createElement(e, {\n                  is: q.is\n                }) : (k = k.createElement(e), \"select\" === e && q.multiple && (k.multiple = !0)) : k = k.createElementNS(l, e);\n                e = k;\n                e[Ha] = m;\n                e[Ia] = g;\n                wh(e, b, !1, !1);\n                q = e;\n                k = f;\n                m = g;\n                var x = h,\n                    C = ve(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    H(\"load\", q);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < cb.length; h++) {\n                      H(cb[h], q);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    H(\"error\", q);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    H(\"error\", q);\n                    H(\"load\", q);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    H(\"reset\", q);\n                    H(\"submit\", q);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    H(\"toggle\", q);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    Ac(q, m);\n                    h = zc(q, m);\n                    H(\"invalid\", q);\n                    we(x, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = de(q, m);\n                    break;\n\n                  case \"select\":\n                    q._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = p({}, m, {\n                      value: void 0\n                    });\n                    H(\"invalid\", q);\n                    we(x, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ge(q, m);\n                    h = fe(q, m);\n                    H(\"invalid\", q);\n                    we(x, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                ue(k, h);\n                l = void 0;\n                var w = k,\n                    E = q,\n                    v = h;\n\n                for (l in v) {\n                  if (v.hasOwnProperty(l)) {\n                    var n = v[l];\n                    \"style\" === l ? se(E, n) : \"dangerouslySetInnerHTML\" === l ? (n = n ? n.__html : void 0, null != n && ne(E, n)) : \"children\" === l ? \"string\" === typeof n ? (\"textarea\" !== w || \"\" !== n) && oe(E, n) : \"number\" === typeof n && oe(E, \"\" + n) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ta.hasOwnProperty(l) ? null != n && we(x, l) : null != n && xc(E, l, n, C));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Vb(q);\n                    Ec(q, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Vb(q);\n                    ie(q, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && q.setAttribute(\"value\", \"\" + yc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = q;\n                    h.multiple = !!m.multiple;\n                    q = m.value;\n                    null != q ? ee(h, !!m.multiple, q, !1) : null != m.defaultValue && ee(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (q.onclick = xe);\n                }\n\n                (g = Ae(f, g)) && sh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? t(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? zh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? t(\"166\") : void 0), e = Of(Nf.current), Of(Lf.current), Mg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Ha] = g, (g = f.nodeValue !== e) && sh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Ha] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Qf(b);\n            xh(b);\n            break;\n\n          case 10:\n            gh(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            M(b.type) && Pe(b);\n            break;\n\n          default:\n            t(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Rh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction hi(a) {\n  var b = ah(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = gi(a));\n  Th.current = null;\n  return b;\n}\n\nfunction ii(a, b) {\n  Wh ? t(\"243\") : void 0;\n  sf();\n  Wh = !0;\n  var c = Sh.current;\n  Sh.current = rg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Xh || null === T) di(), Xh = a, U = d, T = bf(Xh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !ji();) {\n        T = hi(T);\n      } else for (; null !== T;) {\n        T = hi(T);\n      }\n    } catch (E) {\n      if (fh = eh = dh = null, sg(), null === T) e = !0, Oh(E);else {\n        null === T ? t(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Oh(E);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = E;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var q = m;\n              m = l;\n              var x = -1,\n                  C = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var w = m.alternate;\n\n                  if (null !== w && (w = w.memoizedState, null !== w)) {\n                    C = 10 * (1073741822 - w.timedOutAt);\n                    break;\n                  }\n\n                  w = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof w) if (0 >= w) x = 0;else if (-1 === x || w < x) x = w;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (w = 13 === m.tag) w = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (w) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(q), m.updateQueue = l) : l.add(q);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = rf(1073741823), g.tag = wf, tf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h.pingCache;\n                  null === k ? (k = h.pingCache = new Mh(), l = new Set(), k.set(q, l)) : (l = k.get(q), void 0 === l && (l = new Set(), k.set(q, l)));\n                  l.has(g) || (l.add(g), k = ki.bind(null, h, q, g), q.then(k, k));\n                  -1 === x ? h = 1073741823 : (-1 === C && (C = 10 * (1073741822 - lf(h, g)) - 5E3), h = C + x);\n                  0 <= h && Yh < h && (Yh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((mc(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + nc(k));\n            }\n\n            Zh = !0;\n            m = rh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Nh(h, m, g);\n                  mh(h, g);\n                  break a;\n\n                case 1:\n                  if (q = m, x = h.type, C = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof x.getDerivedStateFromError || null !== C && \"function\" === typeof C.componentDidCatch && (null === Qh || !Qh.has(C)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Ph(h, q, g);\n                    mh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = gi(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Wh = !1;\n  Sh.current = c;\n  fh = eh = dh = null;\n  sg();\n  if (e) Xh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? t(\"281\") : void 0;\n    Xh = null;\n\n    if (Zh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        kf(a, d);\n        li(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        li(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Yh ? (kf(a, d), b = 10 * (1073741822 - lf(a, d)), b < Yh && (Yh = b), b = 10 * (1073741822 - pf()), b = Yh - b, li(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction Dh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Qh || !Qh.has(d))) {\n          a = rh(b, a);\n          a = Ph(c, a, 1073741823);\n          tf(c, a);\n          uf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = rh(b, a);\n        a = Nh(c, a, 1073741823);\n        tf(c, a);\n        uf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = rh(b, a), c = Nh(a, c, 1073741823), tf(a, c), uf(a, 1073741823));\n}\n\nfunction qf(a, b) {\n  0 !== Vh ? a = Vh : Wh ? a = $h ? 1073741823 : U : b.mode & 1 ? (a = mi ? 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1) : 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1), null !== Xh && a === U && --a) : a = 1073741823;\n  mi && (0 === ni || a < ni) && (ni = a);\n  return a;\n}\n\nfunction ki(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Xh && U === c) Xh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    jf(c, a);\n    c = a.expirationTime;\n    0 !== c && fi(a, c);\n  }\n}\n\nfunction Lh(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = pf();\n  b = qf(b, a);\n  a = oi(a, b);\n  null !== a && (hf(a, b), b = a.expirationTime, 0 !== b && fi(a, b));\n}\n\nfunction oi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction uf(a, b) {\n  a = oi(a, b);\n  null !== a && (!Wh && 0 !== U && b > U && di(), hf(a, b), Wh && !$h && Xh === a || fi(a, a.expirationTime), pi > qi && (pi = 0, t(\"185\")));\n}\n\nfunction ri(a, b, c, d, e) {\n  var f = Vh;\n  Vh = 1073741823;\n\n  try {\n    return a(b, c, d, e);\n  } finally {\n    Vh = f;\n  }\n}\n\nvar si = null,\n    X = null,\n    ti = 0,\n    ui = void 0,\n    W = !1,\n    vi = null,\n    Y = 0,\n    ni = 0,\n    wi = !1,\n    xi = null,\n    Z = !1,\n    yi = !1,\n    mi = !1,\n    zi = null,\n    Ai = ba.unstable_now(),\n    Bi = 1073741822 - (Ai / 10 | 0),\n    Ci = Bi,\n    qi = 50,\n    pi = 0,\n    Di = null;\n\nfunction Ei() {\n  Bi = 1073741822 - ((ba.unstable_now() - Ai) / 10 | 0);\n}\n\nfunction Fi(a, b) {\n  if (0 !== ti) {\n    if (b < ti) return;\n    null !== ui && ba.unstable_cancelCallback(ui);\n  }\n\n  ti = b;\n  a = ba.unstable_now() - Ai;\n  ui = ba.unstable_scheduleCallback(Gi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction li(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || ji() ? 0 < e && (a.timeoutHandle = Ce(Hi.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Hi(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  Ei();\n  Ci = Bi;\n  Ii(a, c);\n}\n\nfunction pf() {\n  if (W) return Ci;\n  Ji();\n  if (0 === Y || 1 === Y) Ei(), Ci = Bi;\n  return Ci;\n}\n\nfunction fi(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === X ? (si = X = a, a.nextScheduledRoot = a) : (X = X.nextScheduledRoot = a, X.nextScheduledRoot = si)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (Z ? yi && (vi = a, Y = 1073741823, Ki(a, 1073741823, !1)) : 1073741823 === b ? Li(1073741823, !1) : Fi(a, b));\n}\n\nfunction Ji() {\n  var a = 0,\n      b = null;\n  if (null !== X) for (var c = X, d = si; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === X ? t(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        si = X = d.nextScheduledRoot = null;\n        break;\n      } else if (d === si) si = e = d.nextScheduledRoot, X.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === X) {\n        X = c;\n        X.nextScheduledRoot = si;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === X) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  vi = b;\n  Y = a;\n}\n\nvar Mi = !1;\n\nfunction ji() {\n  return Mi ? !0 : ba.unstable_shouldYield() ? Mi = !0 : !1;\n}\n\nfunction Gi() {\n  try {\n    if (!ji() && null !== si) {\n      Ei();\n      var a = si;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && Bi <= b && (a.nextExpirationTimeToWorkOn = Bi);\n        a = a.nextScheduledRoot;\n      } while (a !== si);\n    }\n\n    Li(0, !0);\n  } finally {\n    Mi = !1;\n  }\n}\n\nfunction Li(a, b) {\n  Ji();\n  if (b) for (Ei(), Ci = Bi; null !== vi && 0 !== Y && a <= Y && !(Mi && Bi > Y);) {\n    Ki(vi, Y, Bi > Y), Ji(), Ei(), Ci = Bi;\n  } else for (; null !== vi && 0 !== Y && a <= Y;) {\n    Ki(vi, Y, !1), Ji();\n  }\n  b && (ti = 0, ui = null);\n  0 !== Y && Fi(vi, Y);\n  pi = 0;\n  Di = null;\n  if (null !== zi) for (a = zi, zi = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      wi || (wi = !0, xi = d);\n    }\n  }\n  if (wi) throw a = xi, xi = null, wi = !1, a;\n}\n\nfunction Ii(a, b) {\n  W ? t(\"253\") : void 0;\n  vi = a;\n  Y = b;\n  Ki(a, b, !1);\n  Li(1073741823, !1);\n}\n\nfunction Ki(a, b, c) {\n  W ? t(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Oi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, De(d)), ii(a, c), d = a.finishedWork, null !== d && (ji() ? a.finishedWork = d : Oi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Oi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, De(d)), ii(a, c), d = a.finishedWork, null !== d && Oi(a, d, b));\n\n  W = !1;\n}\n\nfunction Oi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === zi ? zi = [d] : zi.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === Di ? pi++ : (Di = a, pi = 0);\n  $h = Wh = !0;\n  a.current === b ? t(\"177\") : void 0;\n  c = a.pendingCommitExpirationTime;\n  0 === c ? t(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  d = b.expirationTime;\n  var e = b.childExpirationTime;\n  d = e > d ? e : d;\n  a.didError = !1;\n  0 === d ? (a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0) : (d < a.latestPingedTime && (a.latestPingedTime = 0), e = a.latestPendingTime, 0 !== e && (e > d ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > d && (a.earliestPendingTime = a.latestPendingTime)), e = a.earliestSuspendedTime, 0 === e ? hf(a, d) : d < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, hf(a, d)) : d > e && hf(a, d));\n  jf(0, a);\n  Th.current = null;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ye = Hd;\n  e = Td();\n\n  if (Ud(e)) {\n    if (\"selectionStart\" in e) var f = {\n      start: e.selectionStart,\n      end: e.selectionEnd\n    };else a: {\n      f = (f = e.ownerDocument) && f.defaultView || window;\n      var g = f.getSelection && f.getSelection();\n\n      if (g && 0 !== g.rangeCount) {\n        f = g.anchorNode;\n        var h = g.anchorOffset,\n            l = g.focusNode;\n        g = g.focusOffset;\n\n        try {\n          f.nodeType, l.nodeType;\n        } catch (vb) {\n          f = null;\n          break a;\n        }\n\n        var k = 0,\n            m = -1,\n            q = -1,\n            x = 0,\n            C = 0,\n            w = e,\n            E = null;\n\n        b: for (;;) {\n          for (var v;;) {\n            w !== f || 0 !== h && 3 !== w.nodeType || (m = k + h);\n            w !== l || 0 !== g && 3 !== w.nodeType || (q = k + g);\n            3 === w.nodeType && (k += w.nodeValue.length);\n            if (null === (v = w.firstChild)) break;\n            E = w;\n            w = v;\n          }\n\n          for (;;) {\n            if (w === e) break b;\n            E === f && ++x === h && (m = k);\n            E === l && ++C === g && (q = k);\n            if (null !== (v = w.nextSibling)) break;\n            w = E;\n            E = w.parentNode;\n          }\n\n          w = v;\n        }\n\n        f = -1 === m || -1 === q ? null : {\n          start: m,\n          end: q\n        };\n      } else f = null;\n    }\n    f = f || {\n      start: 0,\n      end: 0\n    };\n  } else f = null;\n\n  ze = {\n    focusedElem: e,\n    selectionRange: f\n  };\n  Hd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      for (; null !== V;) {\n        if (V.effectTag & 256) a: {\n          var n = V.alternate;\n          h = V;\n\n          switch (h.tag) {\n            case 0:\n            case 11:\n            case 15:\n              Eh(Uf, Tf, h);\n              break a;\n\n            case 1:\n              if (h.effectTag & 256 && null !== n) {\n                var u = n.memoizedProps,\n                    z = n.memoizedState,\n                    Ag = h.stateNode,\n                    Ni = Ag.getSnapshotBeforeUpdate(h.elementType === h.type ? u : P(h.type, u), z);\n                Ag.__reactInternalSnapshotBeforeUpdate = Ni;\n              }\n\n              break a;\n\n            case 3:\n            case 5:\n            case 6:\n            case 4:\n            case 17:\n              break a;\n\n            default:\n              t(\"163\");\n          }\n        }\n        V = V.nextEffect;\n      }\n    } catch (vb) {\n      e = !0, f = vb;\n    }\n\n    e && (null === V ? t(\"178\") : void 0, Dh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    n = !1;\n    u = void 0;\n\n    try {\n      for (; null !== V;) {\n        var y = V.effectTag;\n        y & 16 && oe(V.stateNode, \"\");\n\n        if (y & 128) {\n          var B = V.alternate;\n\n          if (null !== B) {\n            var r = B.ref;\n            null !== r && (\"function\" === typeof r ? r(null) : r.current = null);\n          }\n        }\n\n        switch (y & 14) {\n          case 2:\n            Jh(V);\n            V.effectTag &= -3;\n            break;\n\n          case 6:\n            Jh(V);\n            V.effectTag &= -3;\n            Kh(V.alternate, V);\n            break;\n\n          case 4:\n            Kh(V.alternate, V);\n            break;\n\n          case 8:\n            z = V;\n            Hh(z);\n            z.return = null;\n            z.child = null;\n            z.memoizedState = null;\n            z.updateQueue = null;\n            var O = z.alternate;\n            null !== O && (O.return = null, O.child = null, O.memoizedState = null, O.updateQueue = null);\n        }\n\n        V = V.nextEffect;\n      }\n    } catch (vb) {\n      n = !0, u = vb;\n    }\n\n    n && (null === V ? t(\"178\") : void 0, Dh(V, u), null !== V && (V = V.nextEffect));\n  }\n\n  r = ze;\n  B = Td();\n  y = r.focusedElem;\n  n = r.selectionRange;\n\n  if (B !== y && y && y.ownerDocument && Sd(y.ownerDocument.documentElement, y)) {\n    null !== n && Ud(y) && (B = n.start, r = n.end, void 0 === r && (r = B), \"selectionStart\" in y ? (y.selectionStart = B, y.selectionEnd = Math.min(r, y.value.length)) : (r = (B = y.ownerDocument || document) && B.defaultView || window, r.getSelection && (r = r.getSelection(), u = y.textContent.length, O = Math.min(n.start, u), n = void 0 === n.end ? O : Math.min(n.end, u), !r.extend && O > n && (u = n, n = O, O = u), u = Rd(y, O), z = Rd(y, n), u && z && (1 !== r.rangeCount || r.anchorNode !== u.node || r.anchorOffset !== u.offset || r.focusNode !== z.node || r.focusOffset !== z.offset) && (B = B.createRange(), B.setStart(u.node, u.offset), r.removeAllRanges(), O > n ? (r.addRange(B), r.extend(z.node, z.offset)) : (B.setEnd(z.node, z.offset), r.addRange(B))))));\n    B = [];\n\n    for (r = y; r = r.parentNode;) {\n      1 === r.nodeType && B.push({\n        element: r,\n        left: r.scrollLeft,\n        top: r.scrollTop\n      });\n    }\n\n    \"function\" === typeof y.focus && y.focus();\n\n    for (y = 0; y < B.length; y++) {\n      r = B[y], r.element.scrollLeft = r.left, r.element.scrollTop = r.top;\n    }\n  }\n\n  ze = null;\n  Hd = !!ye;\n  ye = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    y = !1;\n    B = void 0;\n\n    try {\n      for (r = a, O = c; null !== V;) {\n        var qa = V.effectTag;\n\n        if (qa & 36) {\n          var Rb = V.alternate;\n          n = V;\n          u = O;\n\n          switch (n.tag) {\n            case 0:\n            case 11:\n            case 15:\n              Eh(Xf, Yf, n);\n              break;\n\n            case 1:\n              var id = n.stateNode;\n              if (n.effectTag & 4) if (null === Rb) id.componentDidMount();else {\n                var dj = n.elementType === n.type ? Rb.memoizedProps : P(n.type, Rb.memoizedProps);\n                id.componentDidUpdate(dj, Rb.memoizedState, id.__reactInternalSnapshotBeforeUpdate);\n              }\n              var th = n.updateQueue;\n              null !== th && ph(n, th, id, u);\n              break;\n\n            case 3:\n              var uh = n.updateQueue;\n\n              if (null !== uh) {\n                z = null;\n                if (null !== n.child) switch (n.child.tag) {\n                  case 5:\n                    z = n.child.stateNode;\n                    break;\n\n                  case 1:\n                    z = n.child.stateNode;\n                }\n                ph(n, uh, z, u);\n              }\n\n              break;\n\n            case 5:\n              var ej = n.stateNode;\n              null === Rb && n.effectTag & 4 && Ae(n.type, n.memoizedProps) && ej.focus();\n              break;\n\n            case 6:\n              break;\n\n            case 4:\n              break;\n\n            case 12:\n              break;\n\n            case 13:\n              break;\n\n            case 17:\n              break;\n\n            default:\n              t(\"163\");\n          }\n        }\n\n        if (qa & 128) {\n          var jd = V.ref;\n\n          if (null !== jd) {\n            var vh = V.stateNode;\n\n            switch (V.tag) {\n              case 5:\n                var Ne = vh;\n                break;\n\n              default:\n                Ne = vh;\n            }\n\n            \"function\" === typeof jd ? jd(Ne) : jd.current = Ne;\n          }\n        }\n\n        qa & 512 && (ai = r);\n        V = V.nextEffect;\n      }\n    } catch (vb) {\n      y = !0, B = vb;\n    }\n\n    y && (null === V ? t(\"178\") : void 0, Dh(V, B), null !== V && (V = V.nextEffect));\n  }\n\n  null !== d && null !== ai && (qa = ei.bind(null, a, d), bi = Ee(qa), ci = qa);\n  Wh = $h = !1;\n  \"function\" === typeof Ve && Ve(b.stateNode);\n  qa = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > qa ? b : qa;\n  0 === b && (Qh = null);\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction Oh(a) {\n  null === vi ? t(\"246\") : void 0;\n  vi.expirationTime = 0;\n  wi || (wi = !0, xi = a);\n}\n\nfunction Pi(a, b) {\n  var c = Z;\n  Z = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (Z = c) || W || Li(1073741823, !1);\n  }\n}\n\nfunction Qi(a, b) {\n  if (Z && !yi) {\n    yi = !0;\n\n    try {\n      return a(b);\n    } finally {\n      yi = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ri(a, b, c) {\n  if (mi) return a(b, c);\n  Z || W || 0 === ni || (Li(ni, !1), ni = 0);\n  var d = mi,\n      e = Z;\n  Z = mi = !0;\n\n  try {\n    return a(b, c);\n  } finally {\n    mi = d, (Z = e) || W || Li(1073741823, !1);\n  }\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === kd(c) && 1 === c.tag ? void 0 : t(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (M(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      t(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (M(h)) {\n        c = Se(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = Le;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = rf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  sf();\n  tf(f, e);\n  uf(f, d);\n  return d;\n}\n\nfunction Ti(a, b, c, d) {\n  var e = b.current,\n      f = pf();\n  e = qf(f, e);\n  return Si(a, b, c, e, d);\n}\n\nfunction Ui(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Vi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: $b,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nDb = function Db(a, b, c) {\n  switch (b) {\n    case \"input\":\n      Cc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ma(d);\n            e ? void 0 : t(\"90\");\n            Wb(d);\n            Cc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      he(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ee(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Wi(a) {\n  var b = 1073741822 - 25 * (((1073741822 - pf() + 500) / 25 | 0) + 1);\n  b >= Uh && (b = Uh - 1);\n  this._expirationTime = Uh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nWi.prototype.render = function (a) {\n  this._defer ? void 0 : t(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Xi();\n  Si(a, b, null, c, d._onCommit);\n  return d;\n};\n\nWi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nWi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : t(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? t(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Ii(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nWi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Xi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nXi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nXi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? t(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Yi(a, b, c) {\n  b = N(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nYi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Xi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ti(a, c, null, d._onCommit);\n  return d;\n};\n\nYi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Xi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ti(null, b, null, c._onCommit);\n  return c;\n};\n\nYi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Xi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ti(b, d, a, e._onCommit);\n  return e;\n};\n\nYi.prototype.createBatch = function () {\n  var a = new Wi(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Zi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nJb = Pi;\nKb = Ri;\n\nLb = function Lb() {\n  W || 0 === ni || (Li(ni, !1), ni = 0);\n};\n\nfunction $i(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Yi(a, !1, b);\n}\n\nfunction aj(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Ui(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = $i(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Ui(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Qi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Ui(f._internalRoot);\n}\n\nfunction bj(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Zi(b) ? void 0 : t(\"200\");\n  return Vi(a, b, null, c);\n}\n\nvar fj = {\n  createPortal: bj,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? t(\"188\") : t(\"268\", Object.keys(a)));\n    a = nd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Zi(b) ? void 0 : t(\"200\");\n    return aj(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Zi(b) ? void 0 : t(\"200\");\n    return aj(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Zi(c) ? void 0 : t(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? t(\"38\") : void 0;\n    return aj(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Zi(a) ? void 0 : t(\"40\");\n    return a._reactRootContainer ? (Qi(function () {\n      aj(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return bj.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Pi,\n  unstable_interactiveUpdates: Ri,\n  flushSync: function flushSync(a, b) {\n    W ? t(\"187\") : void 0;\n    var c = Z;\n    Z = !0;\n\n    try {\n      return ri(a, b);\n    } finally {\n      Z = c, Li(1073741823, !1);\n    }\n  },\n  unstable_createRoot: cj,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = Z;\n    Z = !0;\n\n    try {\n      ri(a);\n    } finally {\n      (Z = b) || W || Li(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ka, La, Ma, Da.injectEventPluginsByName, ra, Sa, function (a) {\n      Aa(a, Ra);\n    }, Hb, Ib, Jd, Fa]\n  }\n};\n\nfunction cj(a, b) {\n  Zi(a) ? void 0 : t(\"299\", \"unstable_createRoot\");\n  return new Yi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Ye(p({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Xb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = nd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ja,\n  bundleType: 0,\n  version: \"16.8.1\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar gj = {\n  default: fj\n},\n    hj = gj && fj || gj;\nmodule.exports = hj.default || hj;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar c = null,\n    f = !1,\n    h = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = c.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = c,\n      b = c.next;\n  if (c === b) c = null;else {\n    var d = c.previous;\n    c = d.next = b;\n    b.previous = d;\n  }\n  a.next = a.previous = null;\n  d = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var e = h,\n      Q = l;\n  h = a;\n  l = b;\n\n  try {\n    var g = d();\n  } finally {\n    h = e, l = Q;\n  }\n\n  if (\"function\" === typeof g) if (g = {\n    callback: g,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === c) c = g.next = g.previous = g;else {\n    d = null;\n    a = c;\n\n    do {\n      if (a.expirationTime >= b) {\n        d = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== c);\n\n    null === d ? d = c : d === c && (c = g, p());\n    b = d.previous;\n    b.next = d.previous = g;\n    g.next = d;\n    g.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== c && 1 === c.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== c && 1 === c.priorityLevel);\n    } finally {\n      m = !1, null !== c ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = f;\n  f = a;\n\n  try {\n    if (a) for (; null !== c;) {\n      var d = exports.unstable_now();\n\n      if (c.expirationTime <= d) {\n        do {\n          u();\n        } while (null !== c && c.expirationTime <= d);\n      } else break;\n    } else if (null !== c) {\n      do {\n        u();\n      } while (null !== c && !w());\n    }\n  } finally {\n    m = !1, f = b, null !== c ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var d = exports.unstable_now(),\n        e = !1;\n    if (0 >= P - d) if (-1 !== b && b <= d) e = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(e);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var d = h,\n      e = k;\n  h = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    h = d, k = e, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var d = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = d + b.timeout;else switch (h) {\n    case 1:\n      b = d + -1;\n      break;\n\n    case 2:\n      b = d + 250;\n      break;\n\n    case 5:\n      b = d + 1073741823;\n      break;\n\n    case 4:\n      b = d + 1E4;\n      break;\n\n    default:\n      b = d + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: h,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === c) c = a.next = a.previous = a, p();else {\n    d = null;\n    var e = c;\n\n    do {\n      if (e.expirationTime > b) {\n        d = e;\n        break;\n      }\n\n      e = e.next;\n    } while (e !== c);\n\n    null === d ? d = c : d === c && (c = a, p());\n    b = d.previous;\n    b.next = d.previous = a;\n    a.next = d;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) c = null;else {\n      a === c && (c = b);\n      var d = a.previous;\n      d.next = b;\n      b.previous = d;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = h;\n  return function () {\n    var d = h,\n        e = k;\n    h = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      h = d, k = e, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return h;\n};\n\nexports.unstable_shouldYield = function () {\n  return !f && (null !== c && c.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== c && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return c;\n};","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || function () {\n  function F() {}\n\n  return function (o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n\n    F.prototype = o;\n    return new F();\n  };\n}(); // Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\n\n\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\n\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n}; // Try to parse input as a time stamp.\n\nfunction parseTimeStamp(input) {\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0, m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n} // A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\n\n\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function set(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function get(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function has(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function alt(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function integer(k, v) {\n    if (/^-?\\d+$/.test(v)) {\n      // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function percent(k, v) {\n    var m;\n\n    if (m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n      v = parseFloat(v);\n\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n\n    return false;\n  }\n}; // Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\n\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n\n    var kv = groups[i].split(keyValueDelim);\n\n    if (kv.length !== 2) {\n      continue;\n    }\n\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input; // 4.1 WebVTT timestamp\n\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n    } // Remove time stamp from input.\n\n\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  } // 4.4.2 WebVTT cue settings\n\n\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n    parseOptions(input, function (k, v) {\n      switch (k) {\n        case \"region\":\n          // Find the last region we parsed with the same region id.\n          for (var i = regionList.length - 1; i >= 0; i--) {\n            if (regionList[i].id === v) {\n              settings.set(k, regionList[i].region);\n              break;\n            }\n          }\n\n          break;\n\n        case \"vertical\":\n          settings.alt(k, v, [\"rl\", \"lr\"]);\n          break;\n\n        case \"line\":\n          var vals = v.split(\",\"),\n              vals0 = vals[0];\n          settings.integer(k, vals0);\n          settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n          settings.alt(k, vals0, [\"auto\"]);\n\n          if (vals.length === 2) {\n            settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"position\":\n          vals = v.split(\",\");\n          settings.percent(k, vals[0]);\n\n          if (vals.length === 2) {\n            settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"size\":\n          settings.percent(k, v);\n          break;\n\n        case \"align\":\n          settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n          break;\n      }\n    }, /:/, /\\s/); // Apply default values for any missing fields.\n\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  } // 4.1 WebVTT cue timings.\n\n\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n  skipWhitespace();\n\n  if (input.substr(0, 3) !== \"-->\") {\n    // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n  }\n\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n  // 4.1 WebVTT cue settings list.\n\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200E\",\n  \"&rlm;\": \"\\u200F\",\n  \"&nbsp;\": \"\\xA0\"\n};\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n}; // Parse content into a document fragment.\n\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    } // Consume 'n' characters from the input.\n\n\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n\n    return consume(m[1] ? m[1] : m[2]);\n  } // Unescape a string 's'.\n\n\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n\n  function unescape(s) {\n    while (m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)) {\n      s = s.replace(m[0], unescape1);\n    }\n\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n  } // Create an element for this tag.\n\n\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n\n    if (!tagName) {\n      return null;\n    }\n\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        } // Otherwise just ignore the end tag.\n\n\n        continue;\n      }\n\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n      if (!m) {\n        continue;\n      } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n      node = createElement(m[1], m[3]);\n\n      if (!node) {\n        continue;\n      } // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n\n\n      if (!shouldAdd(current, node)) {\n        continue;\n      } // Set the class list (as a list of classes, separated by space).\n\n\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      } // Append the node to the current node, and enter the scope of the new\n      // node.\n\n\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    } // Text nodes are leaf nodes.\n\n\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n} // This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n\n      return text;\n    }\n\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n\n  while (text = nextTextNode(nodeStack)) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n    return cue.line;\n  }\n\n  if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n\n  return ++count * -1;\n}\n\nfunction StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\n\n\nStyleBox.prototype.applyStyles = function (styles, div) {\n  div = div || this.div;\n\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function (val, unit) {\n  return val === 0 ? 0 : val + unit;\n}; // Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\n\n\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n  this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n\n  var textPos = 0;\n\n  switch (cue.positionAlign) {\n    case \"start\":\n      textPos = cue.position;\n      break;\n\n    case \"middle\":\n      textPos = cue.position - cue.size / 2;\n      break;\n\n    case \"end\":\n      textPos = cue.position - cue.size;\n      break;\n  } // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n\n\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left: this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    }); // Vertical box orientation; textPos is the distance from the top edge of the\n    // area to the top edge of the box and cue.size is the height extending\n    // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function (box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\n\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\n\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n\n    lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n  }\n\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || top + (obj.height || height);\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n} // Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\n\n\nBoxPosition.prototype.move = function (axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n  switch (axis) {\n    case \"+x\":\n      this.left += toMove;\n      this.right += toMove;\n      break;\n\n    case \"-x\":\n      this.left -= toMove;\n      this.right -= toMove;\n      break;\n\n    case \"+y\":\n      this.top += toMove;\n      this.bottom += toMove;\n      break;\n\n    case \"-y\":\n      this.top -= toMove;\n      this.bottom -= toMove;\n      break;\n  }\n}; // Check if this box overlaps another box, b2.\n\n\nBoxPosition.prototype.overlaps = function (b2) {\n  return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n}; // Check if this box overlaps any other boxes in boxes.\n\n\nBoxPosition.prototype.overlapsAny = function (boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // Check if this box is within another box.\n\n\nBoxPosition.prototype.within = function (container) {\n  return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n}; // Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\n\n\nBoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n  switch (axis) {\n    case \"+x\":\n      return this.left < container.left;\n\n    case \"-x\":\n      return this.right > container.right;\n\n    case \"+y\":\n      return this.top < container.top;\n\n    case \"-y\":\n      return this.bottom > container.bottom;\n  }\n}; // Find the percentage of the area that this box is overlapping with another\n// box.\n\n\nBoxPosition.prototype.intersectPercentage = function (b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n}; // Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\n\n\nBoxPosition.prototype.toCSSCompatValues = function (reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n}; // Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\nBoxPosition.getSimpleBoxPosition = function (obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n  obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || top + (obj.height || height),\n    width: obj.width || width\n  };\n  return ret;\n}; // Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\n\n\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n        b.move(axis[i]);\n      } // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n\n\n      if (b.within(containerBox)) {\n        return b;\n      }\n\n      var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      } // Reset the box position to the specified position.\n\n\n      b = new BoxPosition(specifiedPosition);\n    }\n\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = []; // If we have a line number to align the cue to.\n\n  if (cue.snapToLines) {\n    var size;\n\n    switch (cue.vertical) {\n      case \"\":\n        axis = [\"+y\", \"-y\"];\n        size = \"height\";\n        break;\n\n      case \"rl\":\n        axis = [\"+x\", \"-x\"];\n        size = \"width\";\n        break;\n\n      case \"lr\":\n        axis = [\"-x\", \"+x\"];\n        size = \"width\";\n        break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    } // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n\n\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    } // Move the box to the specified position. This may not be its best\n    // position.\n\n\n    boxPosition.move(initialAxis, position);\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n    switch (cue.lineAlign) {\n      case \"middle\":\n        linePos -= calculatedPercentage / 2;\n        break;\n\n      case \"end\":\n        linePos -= calculatedPercentage;\n        break;\n    } // Apply initial line position to the cue box.\n\n\n    switch (cue.vertical) {\n      case \"\":\n        styleBox.applyStyles({\n          top: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"rl\":\n        styleBox.applyStyles({\n          left: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"lr\":\n        styleBox.applyStyles({\n          right: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n    }\n\n    axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n    // to it.\n\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {} // Nothing\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\nWebVTT.StringDecoder = function () {\n  return {\n    decode: function decode(data) {\n      if (!data) {\n        return \"\";\n      }\n\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function (window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\n\nWebVTT.processCues = function (window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  } // Remove all previous children.\n\n\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n\n    return false;\n  } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function () {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n\n      cue.displayState = styleBox.div;\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function (window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function reportOrThrowError(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function parse(data) {\n    var self = this; // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {\n        stream: true\n      });\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n\n      var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n\n      self.buffer = buffer.substr(pos);\n      return line;\n    } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n    function parseRegion(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"id\":\n            settings.set(k, v);\n            break;\n\n          case \"width\":\n            settings.percent(k, v);\n            break;\n\n          case \"lines\":\n            settings.integer(k, v);\n            break;\n\n          case \"regionanchor\":\n          case \"viewportanchor\":\n            var xy = v.split(',');\n\n            if (xy.length !== 2) {\n              break;\n            } // We have to make sure both x and y parse, so use a temporary\n            // settings object here.\n\n\n            var anchor = new Settings();\n            anchor.percent(\"x\", xy[0]);\n            anchor.percent(\"y\", xy[1]);\n\n            if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n              break;\n            }\n\n            settings.set(k + \"X\", anchor.get(\"x\"));\n            settings.set(k + \"Y\", anchor.get(\"y\"));\n            break;\n\n          case \"scroll\":\n            settings.alt(k, v, [\"up\"]);\n            break;\n        }\n      }, /=/, /\\s/); // Create the region, using default values for any values that were not\n      // specified.\n\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n        self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    } // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n\n\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"MPEGT\":\n            settings.integer(k + 'S', v);\n            break;\n\n          case \"LOCA\":\n            settings.set(k + 'L', parseTimeStamp(v));\n            break;\n        }\n      }, /[^\\d]:/, /,/);\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    } // 3.2 WebVTT metadata header syntax\n\n\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"X-TIMESTAMP-MAP\":\n              parseTimestampMap(v);\n              break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"Region\":\n              // 3.3 WebVTT region metadata header syntax\n              parseRegion(v);\n              break;\n          }\n        }, /:/);\n      }\n    } // 5.1 WebVTT file parsing.\n\n\n    try {\n      var line;\n\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n          case \"HEADER\":\n            // 13-18 - Allow a header (metadata) under the WEBVTT line.\n            if (/:/.test(line)) {\n              parseHeader(line);\n            } else if (!line) {\n              // An empty line terminates the header and starts the body (cues).\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"NOTE\":\n            // Ignore NOTE blocks.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"ID\":\n            // Check for the start of NOTE blocks.\n            if (/^NOTE($|[ \\t])/.test(line)) {\n              self.state = \"NOTE\";\n              break;\n            } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n            if (!line) {\n              continue;\n            }\n\n            self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n            self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n            if (line.indexOf(\"-->\") === -1) {\n              self.cue.id = line;\n              continue;\n            }\n\n          // Process line as start of a cue.\n\n          /*falls through*/\n\n          case \"CUE\":\n            // 40 - Collect cue timings and settings.\n            try {\n              parseCue(line, self.cue, self.regionList);\n            } catch (e) {\n              self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n              self.cue = null;\n              self.state = \"BADCUE\";\n              continue;\n            }\n\n            self.state = \"CUETEXT\";\n            continue;\n\n          case \"CUETEXT\":\n            var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n            // 35 - If we have the special substring '-->' then report the cue,\n            // but do not collect the line as we need to process the current\n            // one as a new cue.\n\n            if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n              // We are done parsing self cue.\n              self.oncue && self.oncue(self.cue);\n              self.cue = null;\n              self.state = \"ID\";\n              continue;\n            }\n\n            if (self.cue.text) {\n              self.cue.text += \"\\n\";\n            }\n\n            self.cue.text += line;\n            continue;\n\n          case \"BADCUE\":\n            // BADCUE\n            // 54-62 - Collect and discard the remaining cue.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n\n      self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n\n    return this;\n  },\n  flush: function flush() {\n    var self = this;\n\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      } // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n\n\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n    }\n\n    self.onflush && self.onflush();\n    return this;\n  }\n};\nmodule.exports = WebVTT;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function get() {\n        return _id;\n      },\n      set: function set(value) {\n        _id = \"\" + value;\n      }\n    },\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function get() {\n        return _pauseOnExit;\n      },\n      set: function set(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n    \"startTime\": {\n      enumerable: true,\n      get: function get() {\n        return _startTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"endTime\": {\n      enumerable: true,\n      get: function get() {\n        return _endTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"text\": {\n      enumerable: true,\n      get: function get() {\n        return _text;\n      },\n      set: function set(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"region\": {\n      enumerable: true,\n      get: function get() {\n        return _region;\n      },\n      set: function set(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"vertical\": {\n      enumerable: true,\n      get: function get() {\n        return _vertical;\n      },\n      set: function set(value) {\n        var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"snapToLines\": {\n      enumerable: true,\n      get: function get() {\n        return _snapToLines;\n      },\n      set: function set(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"line\": {\n      enumerable: true,\n      get: function get() {\n        return _line;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"lineAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _lineAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"position\": {\n      enumerable: true,\n      get: function get() {\n        return _position;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"positionAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _positionAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"size\": {\n      enumerable: true,\n      get: function get() {\n        return _size;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"align\": {\n      enumerable: true,\n      get: function get() {\n        return _align;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n  /**\n   * Other <track> spec defined properties\n   */\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n  this.displayState = undefined;\n}\n/**\n * VTTCue methods\n */\n\n\nVTTCue.prototype.getCueAsHTML = function () {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && value >= 0 && value <= 100;\n} // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function get() {\n        return _width;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function get() {\n        return _lines;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function get() {\n        return _scroll;\n      },\n      set: function set(value) {\n        var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;","module.exports = isFunction;\nvar toString = Object.prototype.toString;\n\nfunction isFunction(fn) {\n  var string = toString.call(fn);\n  return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n  fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n}\n\n;","var trim = require('trim'),\n    forEach = require('for-each'),\n    isArray = function isArray(arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nmodule.exports = function (headers) {\n  if (!headers) return {};\n  var result = {};\n  forEach(trim(headers).split('\\n'), function (row) {\n    var index = row.indexOf(':'),\n        key = trim(row.slice(0, index)).toLowerCase(),\n        value = trim(row.slice(index + 1));\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};","exports = module.exports = trim;\n\nfunction trim(str) {\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function (str) {\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function (str) {\n  return str.replace(/\\s*$/, '');\n};","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (hasOwnProperty.call(array, i)) {\n      if (receiver == null) {\n        iterator(array[i], i, array);\n      } else {\n        iterator.call(receiver, array[i], i, array);\n      }\n    }\n  }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n  for (var i = 0, len = string.length; i < len; i++) {\n    // no such thing as a sparse string.\n    if (receiver == null) {\n      iterator(string.charAt(i), i, string);\n    } else {\n      iterator.call(receiver, string.charAt(i), i, string);\n    }\n  }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n  for (var k in object) {\n    if (hasOwnProperty.call(object, k)) {\n      if (receiver == null) {\n        iterator(object[k], k, object);\n      } else {\n        iterator.call(receiver, object[k], k, object);\n      }\n    }\n  }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n  if (!isCallable(iterator)) {\n    throw new TypeError('iterator must be a function');\n  }\n\n  var receiver;\n\n  if (arguments.length >= 3) {\n    receiver = thisArg;\n  }\n\n  if (toStr.call(list) === '[object Array]') {\n    forEachArray(list, iterator, receiver);\n  } else if (typeof list === 'string') {\n    forEachString(list, iterator, receiver);\n  } else {\n    forEachObject(list, iterator, receiver);\n  }\n};\n\nmodule.exports = forEach;","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar constructorRegex = /^\\s*class\\b/;\n\nvar isES6ClassFn = function isES6ClassFunction(value) {\n  try {\n    var fnStr = fnToStr.call(value);\n    return constructorRegex.test(fnStr);\n  } catch (e) {\n    return false; // not a function\n  }\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n  try {\n    if (isES6ClassFn(value)) {\n      return false;\n    }\n\n    fnToStr.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (typeof value !== 'function' && typeof value !== 'object') {\n    return false;\n  }\n\n  if (typeof value === 'function' && !value.prototype) {\n    return true;\n  }\n\n  if (hasToStringTag) {\n    return tryFunctionObject(value);\n  }\n\n  if (isES6ClassFn(value)) {\n    return false;\n  }\n\n  var strClass = toStr.call(value);\n  return strClass === fnClass || strClass === genClass;\n};","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","var toUnsigned = function toUnsigned(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n  var i,\n      currentNal,\n      currentFrame = [],\n      frames = [];\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  } // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n\n\n  if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  } // Push the final frame\n\n\n  frames.push(currentFrame);\n  return frames;\n}; // Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\n\n\nvar groupFramesIntoGops = function groupFramesIntoGops(frames) {\n  var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration; // push the final Gop\n\n  gops.push(currentGop);\n  return gops;\n};\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\n\n\nvar extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\n\n\nvar createDefaultSample = function createDefaultSample() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\n\n\nvar sampleForFrame = function sampleForFrame(frame, dataOffset) {\n  var sample = createDefaultSample();\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n}; // generate the track's sample table from an array of gops\n\n\nvar generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n  var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n      sample = sampleForFrame(currentFrame, dataOffset);\n      dataOffset += sample.size;\n      samples.push(sample);\n    }\n  }\n\n  return samples;\n}; // generate the track's raw mdat data from an array of gops\n\n\nvar concatenateNalData = function concatenateNalData(gops) {\n  var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h]; // For each Frame..\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i]; // For each NAL..\n\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};","var coneOfSilence = require('../data/silence');\n\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\n\nvar sumFrameByteLengths = function sumFrameByteLengths(array) {\n  var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n}; // Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\n\n\nvar prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n  var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  } // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n\n\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n}; // If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\n\n\nvar trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  } // We will need to recalculate the earliest segment Dts\n\n\n  track.minSegmentDts = Infinity;\n  return adtsFrames.filter(function (currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    } // Otherwise, discard it\n\n\n    return false;\n  });\n}; // generate the track's raw mdat data from an array of frames\n\n\nvar generateSampleTable = function generateSampleTable(frames) {\n  var i,\n      currentFrame,\n      samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n    });\n  }\n\n  return samples;\n}; // generate the track's sample table from an array of frames\n\n\nvar concatenateFrameData = function concatenateFrameData(frames) {\n  var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\nvar zeroFill = function zeroFill(count) {\n  var a = [];\n\n  while (count--) {\n    a.push(0);\n  }\n\n  return a;\n};\n\nvar makeTable = function makeTable(metaTable) {\n  return Object.keys(metaTable).reduce(function (obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n}; // Frames-of-silence to use for filling in missing AAC frames\n\n\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\nmodule.exports = makeTable(coneOfSilence);","var ONE_SECOND_IN_TS = 90000,\n    // 90kHz clock\nsecondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs;\n\nsecondsToVideoTs = function secondsToVideoTs(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function videoTsToSeconds(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\n\nvar collectDtsInfo = function collectDtsInfo(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\n\n\nvar clearDtsInfo = function clearDtsInfo(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\nvar calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n  var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n\n\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n  baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js'),\n    CaptionStream = require('./caption-stream'),\n    StreamTypes = require('./stream-types'),\n    TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js'); // object types\n\n\nvar _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\nvar MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\n\n_TransportPacketStream = function TransportPacketStream() {\n  var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n      bytesInBuffer = 0;\n\n  _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n\n\n  this.push = function (bytes) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    } // While we have enough data for a packet\n\n\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n\n\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n\n\n  this.flush = function () {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n\n    this.trigger('done');\n  };\n};\n\n_TransportPacketStream.prototype = new Stream();\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\n\n_TransportParseStream = function TransportParseStream() {\n  var parsePsi, parsePat, parsePmt, self;\n\n  _TransportParseStream.prototype.init.call(this);\n\n  self = this;\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function parsePsi(payload, psi) {\n    var offset = 0; // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function parsePat(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n    // skip the PSI header and parse the first PMT entry\n\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n\n\n  parsePmt = function parsePmt(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(payload[5] & 0x01)) {\n      return;\n    } // overwrite any existing program map table\n\n\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    }; // the mapping table ends at the end of the current section\n\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n    offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n\n      if (streamType === StreamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      } // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    } // record the map on the packet as well\n\n\n    pmt.programMapTable = self.programMapTable;\n  };\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n\n\n  this.push = function (packet) {\n    var result = {},\n        offset = 4;\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[offset] + 1;\n    } // parse the rest of the packet based on the type\n\n\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function (packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n    this.trigger('data', result);\n  };\n};\n\n_TransportParseStream.prototype = new Stream();\n_TransportParseStream.STREAM_TYPES = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\n\n_ElementaryStream = function ElementaryStream() {\n  var self = this,\n      // PES packet fragments\n  video = {\n    data: [],\n    size: 0\n  },\n      audio = {\n    data: [],\n    size: 0\n  },\n      timedMetadata = {\n    data: [],\n    size: 0\n  },\n      parsePes = function parsePes(payload, pes) {\n    var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n    pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n    pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n      pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    } // the data section starts immediately after the PES header.\n    // pes_header_data_length specifies the number of header bytes\n    // that follow the last byte of the field.\n\n\n    pes.data = payload.subarray(9 + payload[8]);\n  },\n\n  /**\n    * Pass completely parsed PES packets to the next stream in the pipeline\n   **/\n  flushStream = function flushStream(stream, type, forceFlush) {\n    var packetData = new Uint8Array(stream.size),\n        event = {\n      type: type\n    },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment; // do nothing if there is not enough buffered data for a complete\n    // PES header\n\n    if (!stream.data.length || stream.size < 9) {\n      return;\n    }\n\n    event.trackId = stream.data[0].pid; // reassemble the packet\n\n    for (i = 0; i < stream.data.length; i++) {\n      fragment = stream.data[i];\n      packetData.set(fragment.data, offset);\n      offset += fragment.data.byteLength;\n    } // parse assembled packet's PES header\n\n\n    parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n    // check that there is enough stream data to fill the packet\n\n    packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n    if (forceFlush || packetFlushable) {\n      stream.size = 0;\n      stream.data.length = 0;\n    } // only emit packets that are complete. this is to avoid assembling\n    // incomplete PES packets due to poor segmentation\n\n\n    if (packetFlushable) {\n      self.trigger('data', event);\n    }\n  };\n\n  _ElementaryStream.prototype.init.call(this);\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n\n\n  this.push = function (data) {\n    ({\n      pat: function pat() {// we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function pes() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n          case StreamTypes.H264_STREAM_TYPE:\n          case m2tsStreamTypes.H264_STREAM_TYPE:\n            stream = video;\n            streamType = 'video';\n            break;\n\n          case StreamTypes.ADTS_STREAM_TYPE:\n            stream = audio;\n            streamType = 'audio';\n            break;\n\n          case StreamTypes.METADATA_STREAM_TYPE:\n            stream = timedMetadata;\n            streamType = 'timed-metadata';\n            break;\n\n          default:\n            // ignore unknown stream types\n            return;\n        } // if a new packet is starting, we can flush the completed\n        // packet\n\n\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        } // buffer this fragment until we are sure we've received the\n        // complete payload\n\n\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function pmt() {\n        var event = {\n          type: 'metadata',\n          tracks: []\n        },\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n\n\n  this.flush = function () {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\n\n_ElementaryStream.prototype = new Stream();\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: _TransportPacketStream,\n  TransportParseStream: _TransportParseStream,\n  ElementaryStream: _ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\n\nvar Stream = require('../utils/stream'),\n    StreamTypes = require('./stream-types'),\n    // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\npercentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n},\n    // return the string representation of the specified byte range,\n// interpreted as UTf-8.\nparseUtf8 = function parseUtf8(bytes, start, end) {\n  return decodeURIComponent(percentEncode(bytes, start, end));\n},\n    // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nparseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n},\n    parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n},\n    tagParsers = {\n  TXXX: function TXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the text fields\n        tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n        tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n        break;\n      }\n    }\n\n    tag.data = tag.value;\n  },\n  WXXX: function WXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.description = parseUtf8(tag.data, 1, i);\n        tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n        break;\n      }\n    }\n  },\n  PRIV: function PRIV(tag) {\n    var i;\n\n    for (i = 0; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.owner = parseIso88591(tag.data, 0, i);\n        break;\n      }\n    }\n\n    tag.privateData = tag.data.subarray(i + 1);\n    tag.data = tag.privateData;\n  }\n},\n    _MetadataStream;\n\n_MetadataStream = function MetadataStream(options) {\n  var settings = {\n    debug: !!(options && options.debug),\n    // the bytes of the program-level descriptor field in MP2T\n    // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n    // program element descriptors\"\n    descriptor: options && options.descriptor\n  },\n      // the total size in bytes of the ID3 tag being parsed\n  tagSize = 0,\n      // tag data that is not complete enough to be parsed\n  buffer = [],\n      // the total number of bytes currently in the buffer\n  bufferSize = 0,\n      i;\n\n  _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function (chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    } // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n\n\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    } // ignore events that don't look like ID3 data\n\n\n    if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n\n      return;\n    } // add this chunk to the data we've collected so far\n\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n\n      tagSize += 10;\n    } // if the entire frame has not arrived, wait for more data\n\n\n    if (bufferSize < tagSize) {\n      return;\n    } // collect the entire frame so it can be parsed\n\n\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    } // find the start of the first frame and the end of the tag\n\n\n    frameStart = 10;\n\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n\n      frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n              size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n\n          this.trigger('timestamp', frame);\n        }\n      }\n\n      tag.frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n\n    this.trigger('data', tag);\n  };\n};\n\n_MetadataStream.prototype = new Stream();\nmodule.exports = _MetadataStream;","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar _AdtsStream;\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\n\n_AdtsStream = function AdtsStream() {\n  var buffer;\n\n  _AdtsStream.prototype.init.call(this);\n\n  this.push = function (packet) {\n    var i = 0,\n        frameNum = 0,\n        frameLength,\n        protectionSkipBytes,\n        frameEnd,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    } // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n\n\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    } // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n    while (i + 5 < buffer.length) {\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n\n\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n\n      frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n      frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n\n      if (buffer.byteLength < frameEnd) {\n        return;\n      } // Otherwise, deliver the complete AAC frame\n\n\n      this.trigger('data', {\n        pts: packet.pts + frameNum * adtsFrameDuration,\n        dts: packet.dts + frameNum * adtsFrameDuration,\n        sampleCount: sampleCount,\n        audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n        channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      }); // If the buffer is empty, clear it and return\n\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++; // Remove the finished frame from the buffer and start the process again\n\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n\n  this.flush = function () {\n    this.trigger('done');\n  };\n};\n\n_AdtsStream.prototype = new Stream();\nmodule.exports = _AdtsStream;","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar _H264Stream, _NalByteStream;\n\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\n\n_NalByteStream = function NalByteStream() {\n  var syncPoint = 0,\n      i,\n      buffer;\n\n  _NalByteStream.prototype.init.call(this);\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n\n\n  this.push = function (data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    } // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n    // advance the sync point to a NAL start, if necessary\n\n\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n        case 0:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0) {\n            i += 2;\n            break;\n          } else if (buffer[i - 2] !== 0) {\n            i++;\n            break;\n          } // deliver the NAL unit if it isn't empty\n\n\n          if (syncPoint + 3 !== i - 2) {\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          } // drop trailing zeroes\n\n\n          do {\n            i++;\n          } while (buffer[i] !== 1 && i < buffer.length);\n\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n            i += 3;\n            break;\n          } // deliver the NAL unit\n\n\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          i += 3;\n          break;\n      }\n    } // filter out the NAL units that were delivered\n\n\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function () {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    } // reset the stream state\n\n\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\n\n_NalByteStream.prototype = new Stream(); // values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\n\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\n\n_H264Stream = function H264Stream() {\n  var nalByteStream = new _NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n\n  _H264Stream.prototype.init.call(this);\n\n  self = this;\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n\n  this.push = function (packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n    nalByteStream.push(packet);\n  };\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n\n\n  nalByteStream.on('data', function (data) {\n    var event = {\n      trackId: trackId,\n      pts: currentPts,\n      dts: currentDts,\n      data: data\n    };\n\n    switch (data[0] & 0x1f) {\n      case 0x05:\n        event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n        break;\n\n      case 0x06:\n        event.nalUnitType = 'sei_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        break;\n\n      case 0x07:\n        event.nalUnitType = 'seq_parameter_set_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        event.config = readSequenceParameterSet(event.escapedRBSP);\n        break;\n\n      case 0x08:\n        event.nalUnitType = 'pic_parameter_set_rbsp';\n        break;\n\n      case 0x09:\n        event.nalUnitType = 'access_unit_delimiter_rbsp';\n        break;\n\n      default:\n        break;\n    } // This triggers data on the H264Stream\n\n\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function () {\n    self.trigger('done');\n  });\n\n  this.flush = function () {\n    nalByteStream.flush();\n  };\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n\n\n  skipScalingList = function skipScalingList(count, expGolombDecoder) {\n    var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = nextScale === 0 ? lastScale : nextScale;\n    }\n  };\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n\n  discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n\n\n  readSequenceParameterSet = function readSequenceParameterSet(data) {\n    var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        sarScale = 1,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio,\n        aspectRatioIdc,\n        i;\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // seq_scaling_matrix_present_flag\n        scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n    if (expGolombDecoder.readBoolean()) {\n      // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n        switch (aspectRatioIdc) {\n          case 1:\n            sarRatio = [1, 1];\n            break;\n\n          case 2:\n            sarRatio = [12, 11];\n            break;\n\n          case 3:\n            sarRatio = [10, 11];\n            break;\n\n          case 4:\n            sarRatio = [16, 11];\n            break;\n\n          case 5:\n            sarRatio = [40, 33];\n            break;\n\n          case 6:\n            sarRatio = [24, 11];\n            break;\n\n          case 7:\n            sarRatio = [20, 11];\n            break;\n\n          case 8:\n            sarRatio = [32, 11];\n            break;\n\n          case 9:\n            sarRatio = [80, 33];\n            break;\n\n          case 10:\n            sarRatio = [18, 11];\n            break;\n\n          case 11:\n            sarRatio = [15, 11];\n            break;\n\n          case 12:\n            sarRatio = [64, 33];\n            break;\n\n          case 13:\n            sarRatio = [160, 99];\n            break;\n\n          case 14:\n            sarRatio = [4, 3];\n            break;\n\n          case 15:\n            sarRatio = [3, 2];\n            break;\n\n          case 16:\n            sarRatio = [2, 1];\n            break;\n\n          case 255:\n            {\n              sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n              break;\n            }\n        }\n\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n    };\n  };\n};\n\n_H264Stream.prototype = new Stream();\nmodule.exports = {\n  H264Stream: _H264Stream,\n  NalByteStream: _NalByteStream\n};","'use strict';\n\nvar ExpGolomb;\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\n\nExpGolomb = function ExpGolomb(workingData) {\n  var // the number of bytes left to examine in workingData\n  workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n  workingWord = 0,\n      // :uint\n  // the number of bits left to examine in the current word\n  workingBitsAvailable = 0; // :uint;\n  // ():uint\n\n  this.length = function () {\n    return 8 * workingBytesAvailable;\n  }; // ():uint\n\n\n  this.bitsAvailable = function () {\n    return 8 * workingBytesAvailable + workingBitsAvailable;\n  }; // ():void\n\n\n  this.loadWord = function () {\n    var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position, position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  }; // (count:int):void\n\n\n  this.skipBits = function (count) {\n    var skipBytes; // :int\n\n    if (workingBitsAvailable > count) {\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n      count -= skipBytes * 8;\n      workingBytesAvailable -= skipBytes;\n      this.loadWord();\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  }; // (size:int):uint\n\n\n  this.readBits = function (size) {\n    var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n    valu = workingWord >>> 32 - bits; // :uint\n    // if size > 31, handle error\n\n    workingBitsAvailable -= bits;\n\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n\n    return valu;\n  }; // ():uint\n\n\n  this.skipLeadingZeros = function () {\n    var leadingZeroCount; // :uint\n\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    } // we exhausted workingWord and still have not found a 1\n\n\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  }; // ():void\n\n\n  this.skipUnsignedExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():void\n\n\n  this.skipExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():uint\n\n\n  this.readUnsignedExpGolomb = function () {\n    var clz = this.skipLeadingZeros(); // :uint\n\n    return this.readBits(clz + 1) - 1;\n  }; // ():int\n\n\n  this.readExpGolomb = function () {\n    var valu = this.readUnsignedExpGolomb(); // :int\n\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n    }\n\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  }; // Some convenience functions\n  // :Boolean\n\n\n  this.readBoolean = function () {\n    return this.readBits(1) === 1;\n  }; // ():int\n\n\n  this.readUnsignedByte = function () {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar aacUtils = require('./utils'); // Constants\n\n\nvar _AacStream;\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\n\n_AacStream = function AacStream() {\n  var everything = new Uint8Array(),\n      timeStamp = 0;\n\n  _AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function (timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function (bytes) {\n    var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        } // check framesize\n\n\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n\n      byteIndex++;\n    }\n\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\n_AacStream.prototype = new Stream();\nmodule.exports = _AacStream;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\n\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\n\nvar probe = require('./probe');\n\nvar inspect = require('../tools/mp4-inspector');\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar mapToSample = function mapToSample(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\n\n\nvar findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // Bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x06:\n        var data = avcStream.subarray(i + 1, i + 1 + length);\n        var matchingSample = mapToSample(i, samples);\n        seiNal = {\n          nalUnitType: 'sei_rbsp',\n          size: length,\n          data: data,\n          escapedRBSP: discardEmulationPreventionBytes(data),\n          trackId: trackId\n        };\n\n        if (matchingSample) {\n          seiNal.pts = matchingSample.pts;\n          seiNal.dts = matchingSample.dts;\n          lastMatchedSample = matchingSample;\n        } else {\n          // If a matching sample cannot be found, use the last\n          // sample's values as they should be as close as possible\n          seiNal.pts = lastMatchedSample.pts;\n          seiNal.dts = lastMatchedSample.dts;\n        }\n\n        result.push(seiNal);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return result;\n};\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n  truns.forEach(function (trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n    samples.forEach(function (sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n\n      sample.pts = currentDts + sample.compositionTimeOffset;\n      currentDts += sample.duration;\n    });\n    allSamples = allSamples.concat(samples);\n  });\n  return allSamples;\n};\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\n\n\nvar parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n  mdats.forEach(function (mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n  mdatTrafPairs.forEach(function (pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n    var baseMediaDecodeTime = tfdt.length > 0 ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals; // Only parse video data for the chosen video track\n\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n  return captionNals;\n};\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\n\n\nvar parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\n\n\nvar CaptionParser = function CaptionParser() {\n  var isInitialized = false;\n  var captionStream; // Stores segments seen before trackId and timescale are set\n\n  var segmentCache; // Stores video track ID of the track being parsed\n\n  var trackId; // Stores the timescale of the track being parsed\n\n  var timescale; // Stores captions parsed so far\n\n  var parsedCaptions;\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n\n  this.isInitialized = function () {\n    return isInitialized;\n  };\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n\n\n  this.init = function () {\n    captionStream = new CaptionStream();\n    isInitialized = true; // Collect dispatched captions\n\n    captionStream.on('data', function (event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n\n\n  this.isNewInit = function (videoTrackIds, timescales) {\n    if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n  };\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.parse = function (segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null; // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n      // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    } // Now that a timescale and trackId is set, parse cached segments\n\n\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n    this.flushStream();\n    return parsedCaptions;\n  };\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n\n\n  this.pushNals = function (nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function (nal) {\n      captionStream.push(nal);\n    });\n  };\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.flushStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n  /**\n    * Reset caption buckets for new data\n   **/\n\n\n  this.clearParsedCaptions = function () {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.resetCaptionStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.clearAllCaptions = function () {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n  /**\n    * Reset caption parser\n   **/\n\n\n  this.reset = function () {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar inspectMp4,\n    _textifyMp,\n    parseType = require('../mp4/probe').parseType,\n    parseMp4Date = function parseMp4Date(seconds) {\n  return new Date(seconds * 1000 - 2082844800000);\n},\n    parseSampleFlags = function parseSampleFlags(flags) {\n  return {\n    isLeading: (flags[0] & 0x0c) >>> 2,\n    dependsOn: flags[0] & 0x03,\n    isDependedOn: (flags[1] & 0xc0) >>> 6,\n    hasRedundancy: (flags[1] & 0x30) >>> 4,\n    paddingValue: (flags[1] & 0x0e) >>> 1,\n    isNonSyncSample: flags[1] & 0x01,\n    degradationPriority: flags[2] << 8 | flags[3]\n  };\n},\n    nalParse = function nalParse(avcStream) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n    }\n  }\n\n  return result;\n},\n    // registry of handlers for individual mp4 box types\nparse = {\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  avc1: function avc1(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      dataReferenceIndex: view.getUint16(6),\n      width: view.getUint16(24),\n      height: view.getUint16(26),\n      horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n      vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n      frameCount: view.getUint16(40),\n      depth: view.getUint16(74),\n      config: inspectMp4(data.subarray(78, data.byteLength))\n    };\n  },\n  avcC: function avcC(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      configurationVersion: data[0],\n      avcProfileIndication: data[1],\n      profileCompatibility: data[2],\n      avcLevelIndication: data[3],\n      lengthSizeMinusOne: data[4] & 0x03,\n      sps: [],\n      pps: []\n    },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i; // iterate past any SPSs\n\n    offset = 6;\n\n    for (i = 0; i < numOfSequenceParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    } // iterate past any PPSs\n\n\n    numOfPictureParameterSets = data[offset];\n    offset++;\n\n    for (i = 0; i < numOfPictureParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    }\n\n    return result;\n  },\n  btrt: function btrt(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      bufferSizeDB: view.getUint32(0),\n      maxBitrate: view.getUint32(4),\n      avgBitrate: view.getUint32(8)\n    };\n  },\n  esds: function esds(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      esId: data[6] << 8 | data[7],\n      streamPriority: data[8] & 0x1f,\n      decoderConfig: {\n        objectProfileIndication: data[11],\n        streamType: data[12] >>> 2 & 0x3f,\n        bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n        maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n        avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n        decoderConfigDescriptor: {\n          tag: data[24],\n          length: data[25],\n          audioObjectType: data[26] >>> 3 & 0x1f,\n          samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n          channelConfiguration: data[27] >>> 3 & 0x0f\n        }\n      }\n    };\n  },\n  ftyp: function ftyp(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      majorBrand: parseType(data.subarray(0, 4)),\n      minorVersion: view.getUint32(4),\n      compatibleBrands: []\n    },\n        i = 8;\n\n    while (i < data.byteLength) {\n      result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n      i += 4;\n    }\n\n    return result;\n  },\n  dinf: function dinf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  dref: function dref(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      dataReferences: inspectMp4(data.subarray(8))\n    };\n  },\n  hdlr: function hdlr(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      handlerType: parseType(data.subarray(8, 12)),\n      name: ''\n    },\n        i = 8; // parse out the name field\n\n    for (i = 24; i < data.byteLength; i++) {\n      if (data[i] === 0x00) {\n        // the name field is null-terminated\n        i++;\n        break;\n      }\n\n      result.name += String.fromCharCode(data[i]);\n    } // decode UTF-8 to javascript's internal representation\n    // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n    result.name = decodeURIComponent(escape(result.name));\n    return result;\n  },\n  mdat: function mdat(data) {\n    return {\n      byteLength: data.byteLength,\n      nals: nalParse(data)\n    };\n  },\n  mdhd: function mdhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      language: ''\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n    // each field is the packed difference between its ASCII value and 0x60\n\n    language = view.getUint16(i);\n    result.language += String.fromCharCode((language >> 10) + 0x60);\n    result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n    result.language += String.fromCharCode((language & 0x1f) + 0x60);\n    return result;\n  },\n  mdia: function mdia(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mfhd: function mfhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n  },\n  minf: function minf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  mp4a: function mp4a(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      // 6 bytes reserved\n      dataReferenceIndex: view.getUint16(6),\n      // 4 + 4 bytes reserved\n      channelcount: view.getUint16(16),\n      samplesize: view.getUint16(18),\n      // 2 bytes pre_defined\n      // 2 bytes reserved\n      samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n    }; // if there are more bytes to process, assume this is an ISO/IEC\n    // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n    if (data.byteLength > 28) {\n      result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n    }\n\n    return result;\n  },\n  moof: function moof(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  moov: function moov(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvex: function mvex(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvhd: function mvhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // convert fixed-point, base 16 back to a number\n\n    result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    i += 2 * 4;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    i += 6 * 4;\n    result.nextTrackId = view.getUint32(i);\n    return result;\n  },\n  pdin: function pdin(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      rate: view.getUint32(4),\n      initialDelay: view.getUint32(8)\n    };\n  },\n  sdtp: function sdtp(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        i;\n\n    for (i = 4; i < data.byteLength; i++) {\n      result.samples.push({\n        dependsOn: (data[i] & 0x30) >> 4,\n        isDependedOn: (data[i] & 0x0c) >> 2,\n        hasRedundancy: data[i] & 0x03\n      });\n    }\n\n    return result;\n  },\n  sidx: function sidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8),\n      earliestPresentationTime: view.getUint32(12),\n      firstOffset: view.getUint32(16)\n    },\n        referenceCount = view.getUint16(22),\n        i;\n\n    for (i = 24; referenceCount; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  },\n  smhd: function smhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      balance: data[4] + data[5] / 256\n    };\n  },\n  stbl: function stbl(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  stco: function stco(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      chunkOffsets: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 4, entryCount--) {\n      result.chunkOffsets.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stsc: function stsc(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleToChunks: []\n    },\n        i;\n\n    for (i = 8; entryCount; i += 12, entryCount--) {\n      result.sampleToChunks.push({\n        firstChunk: view.getUint32(i),\n        samplesPerChunk: view.getUint32(i + 4),\n        sampleDescriptionIndex: view.getUint32(i + 8)\n      });\n    }\n\n    return result;\n  },\n  stsd: function stsd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleDescriptions: inspectMp4(data.subarray(8))\n    };\n  },\n  stsz: function stsz(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleSize: view.getUint32(4),\n      entries: []\n    },\n        i;\n\n    for (i = 12; i < data.byteLength; i += 4) {\n      result.entries.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stts: function stts(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      timeToSamples: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 8, entryCount--) {\n      result.timeToSamples.push({\n        sampleCount: view.getUint32(i),\n        sampleDelta: view.getUint32(i + 4)\n      });\n    }\n\n    return result;\n  },\n  styp: function styp(data) {\n    return parse.ftyp(data);\n  },\n  tfdt: function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime *= Math.pow(2, 32);\n      result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n    }\n\n    return result;\n  },\n  tfhd: function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  },\n  tkhd: function tkhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4;\n    i += 2 * 4;\n    result.layer = view.getUint16(i);\n    i += 2;\n    result.alternateGroup = view.getUint16(i);\n    i += 2; // convert fixed-point, base 16 back to a number\n\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    return result;\n  },\n  traf: function traf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trak: function trak(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trex: function trex(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4),\n      defaultSampleDescriptionIndex: view.getUint32(8),\n      defaultSampleDuration: view.getUint32(12),\n      defaultSampleSize: view.getUint32(16),\n      sampleDependsOn: data[20] & 0x03,\n      sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n      sampleHasRedundancy: (data[21] & 0x30) >> 4,\n      samplePaddingValue: (data[21] & 0x0e) >> 1,\n      sampleIsDifferenceSample: !!(data[21] & 0x01),\n      sampleDegradationPriority: view.getUint16(22)\n    };\n  },\n  trun: function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  },\n  'url ': function url(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n  },\n  vmhd: function vmhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      graphicsmode: view.getUint16(4),\n      opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n    };\n  }\n};\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\n\n\ninspectMp4 = function inspectMp4(data) {\n  var i = 0,\n      result = [],\n      view,\n      size,\n      type,\n      end,\n      box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n\n  for (var z = 0; z < data.length; ++z) {\n    v[z] = data[z];\n  }\n\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n    box = (parse[type] || function (data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n\n    box.size = size;\n    box.type = type; // store this box and move to the next\n\n    result.push(box);\n    i = end;\n  }\n\n  return result;\n};\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\n\n\n_textifyMp = function textifyMp4(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n  return inspectedMp4.map(function (box, index) {\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n    Object.keys(box).filter(function (key) {\n      return key !== 'type' && key !== 'boxes'; // output all the box properties\n    }).map(function (key) {\n      var prefix = indent + '  ' + key + ': ',\n          value = box[key]; // print out raw bytes as hexademical\n\n      if (value instanceof Uint8Array || value instanceof Uint32Array) {\n        var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n          return ' ' + ('00' + byte.toString(16)).slice(-2);\n        }).join('').match(/.{1,24}/g);\n\n        if (!bytes) {\n          return prefix + '<>';\n        }\n\n        if (bytes.length === 1) {\n          return prefix + '<' + bytes.join('').slice(1) + '>';\n        }\n\n        return prefix + '<\\n' + bytes.map(function (line) {\n          return indent + '  ' + line;\n        }).join('\\n') + '\\n' + indent + '  >';\n      } // stringify generic objects\n\n\n      return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n        if (index === 0) {\n          return line;\n        }\n\n        return indent + '  ' + line;\n      }).join('\\n');\n    }).join('\\n') + ( // recursively textify the child boxes\n    box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: _textifyMp,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function parsePid(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function parseAdaptionField(packet) {\n  var offset = 0; // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n\n  if ((packet[3] & 0x30) >>> 4 > 0x01) {\n    offset += packet[4] + 1;\n  }\n\n  return offset;\n};\n\nvar parseType = function parseType(packet, pmtPid) {\n  var pid = parsePid(packet);\n\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n\n  return null;\n};\n\nvar parsePat = function parsePat(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function parsePmt(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  } // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n\n\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n  var offset = 12 + programInfoLength;\n\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n\n  return programMapTable;\n};\n\nvar parsePesType = function parsePesType(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function parsePesTime(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n\n  ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n\n  if (ptsDtsFlags & 0xC0) {\n    pes = {}; // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n    pes.pts *= 4; // Left shift by 2\n\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n    pes.dts = pes.pts;\n\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n\n  return pes;\n};\n\nvar parseNalUnitType = function parseNalUnitType(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n\n    case 0x06:\n      return 'sei_rbsp';\n\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType; // advance the sync point to a NAL start, if necessary\n\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n      case 0:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0) {\n          frameI += 2;\n          break;\n        } else if (frameBuffer[frameI - 2] !== 0) {\n          frameI++;\n          break;\n        }\n\n        if (frameSyncPoint + 3 !== frameI - 2) {\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n        } // drop trailing zeroes\n\n\n        do {\n          frameI++;\n        } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      case 1:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n          frameI += 3;\n          break;\n        }\n\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        frameI += 3;\n        break;\n    }\n  }\n\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0; // parse the final nal\n\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};","/*! @name videojs-playlist @version 4.3.0 @license Apache-2.0 */\nimport videojs from 'video.js';\n/**\n * Validates a number of seconds to use as the auto-advance delay.\n *\n * @private\n * @param   {number} s\n *          The number to check\n *\n * @return  {boolean}\n *          Whether this is a valid second or not\n */\n\nvar validSeconds = function validSeconds(s) {\n  return typeof s === 'number' && !isNaN(s) && s >= 0 && s < Infinity;\n};\n/**\n * Resets the auto-advance behavior of a player.\n *\n * @param {Player} player\n *        The player to reset the behavior on\n */\n\n\nvar reset = function reset(player) {\n  var aa = player.playlist.autoadvance_;\n\n  if (aa.timeout) {\n    player.clearTimeout(aa.timeout);\n  }\n\n  if (aa.trigger) {\n    player.off('ended', aa.trigger);\n  }\n\n  aa.timeout = null;\n  aa.trigger = null;\n};\n/**\n * Sets up auto-advance behavior on a player.\n *\n * @param  {Player} player\n *         the current player\n *\n * @param  {number} delay\n *         The number of seconds to wait before each auto-advance.\n *\n * @return {undefined}\n *         Used to short circuit function logic\n */\n\n\nvar setup = function setup(player, delay) {\n  reset(player); // Before queuing up new auto-advance behavior, check if `seconds` was\n  // called with a valid value.\n\n  if (!validSeconds(delay)) {\n    player.playlist.autoadvance_.delay = null;\n    return;\n  }\n\n  player.playlist.autoadvance_.delay = delay;\n\n  player.playlist.autoadvance_.trigger = function () {\n    // This calls setup again, which will reset the existing auto-advance and\n    // set up another auto-advance for the next \"ended\" event.\n    var cancelOnPlay = function cancelOnPlay() {\n      return setup(player, delay);\n    }; // If there is a \"play\" event while we're waiting for an auto-advance,\n    // we need to cancel the auto-advance. This could mean the user seeked\n    // back into the content or restarted the content. This is reproducible\n    // with an auto-advance > 0.\n\n\n    player.one('play', cancelOnPlay);\n    player.playlist.autoadvance_.timeout = player.setTimeout(function () {\n      reset(player);\n      player.off('play', cancelOnPlay);\n      player.playlist.next();\n    }, delay * 1000);\n  };\n\n  player.one('ended', player.playlist.autoadvance_.trigger);\n};\n/**\n * Removes all remote text tracks from a player.\n *\n * @param  {Player} player\n *         The player to clear tracks on\n */\n\n\nvar clearTracks = function clearTracks(player) {\n  var tracks = player.remoteTextTracks();\n  var i = tracks && tracks.length || 0; // This uses a `while` loop rather than `forEach` because the\n  // `TextTrackList` object is a live DOM list (not an array).\n\n  while (i--) {\n    player.removeRemoteTextTrack(tracks[i]);\n  }\n};\n/**\n * Plays an item on a player's playlist.\n *\n * @param  {Player} player\n *         The player to play the item on\n *\n * @param  {Object} item\n *         A source from the playlist.\n *\n * @return {Player}\n *         The player that is now playing the item\n */\n\n\nvar playItem = function playItem(player, item) {\n  var replay = !player.paused() || player.ended();\n  player.trigger('beforeplaylistitem', item);\n  player.poster(item.poster || '');\n  player.src(item.sources);\n  clearTracks(player);\n  player.ready(function () {\n    (item.textTracks || []).forEach(player.addRemoteTextTrack.bind(player));\n    player.trigger('playlistitem', item);\n\n    if (replay) {\n      var playPromise = player.play(); // silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, function (e) {});\n      }\n    }\n\n    setup(player, player.playlist.autoadvance_.delay);\n  });\n  return player;\n};\n/**\n * Returns whether a playlist item is an object of any kind, excluding null.\n *\n * @private\n *\n * @param {Object}\n *         value to be checked\n *\n * @return {boolean}\n *          The result\n */\n\n\nvar isItemObject = function isItemObject(value) {\n  return !!value && typeof value === 'object';\n};\n/**\n * Look through an array of playlist items and transform any primitive\n * as well as null values to objects. This method also adds a property\n * to the transformed item containing original value passed in an input list.\n *\n * @private\n *\n * @param {Array}\n *         An array of playlist items\n *\n * @return {Array}\n *          A new array with transformed items\n */\n\n\nvar transformPrimitiveItems = function transformPrimitiveItems(arr) {\n  var list = [];\n  var tempItem;\n  arr.forEach(function (item) {\n    if (!isItemObject(item)) {\n      tempItem = Object(item);\n      tempItem.originalValue = item;\n    } else {\n      tempItem = item;\n    }\n\n    list.push(tempItem);\n  });\n  return list;\n};\n/**\n * Generate a unique id for each playlist item object. This id will be used to determine\n * index of an item in the playlist array for cases where there are multiple items with\n * the same source set.\n *\n * @private\n *\n * @param {Array}\n *         An array of playlist items\n *\n * @return {Array}\n *          The list of playlist items with unique ids\n */\n\n\nvar generatePlaylistItemId = function generatePlaylistItemId(arr) {\n  var guid = 1;\n  arr.forEach(function (item) {\n    item.playlistItemId_ = guid++;\n  });\n};\n/**\n * Look through an array of playlist items for a specific playlist item id.\n *\n * @private\n * @param   {Array}\n *           An array of playlist items to look through\n *\n * @param   {Player}\n *           The player containing a playlist\n *\n * @return  {number}\n *           The index of the playlist item or -1 if not found\n */\n\n\nvar indexInPlaylistItemIds = function indexInPlaylistItemIds(list, currentItemId) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].playlistItemId_ === currentItemId) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Given two sources, check to see whether the two sources are equal.\n * If both source urls have a protocol, the protocols must match, otherwise, protocols\n * are ignored.\n *\n * @private\n * @param {string|Object} source1\n *        The first source\n *\n * @param {string|Object} source2\n *        The second source\n *\n * @return {boolean}\n *         The result\n */\n\n\nvar sourceEquals = function sourceEquals(source1, source2) {\n  var src1 = source1;\n  var src2 = source2;\n\n  if (typeof source1 === 'object') {\n    src1 = source1.src;\n  }\n\n  if (typeof source2 === 'object') {\n    src2 = source2.src;\n  }\n\n  if (/^\\/\\//.test(src1)) {\n    src2 = src2.slice(src2.indexOf('//'));\n  }\n\n  if (/^\\/\\//.test(src2)) {\n    src1 = src1.slice(src1.indexOf('//'));\n  }\n\n  return src1 === src2;\n};\n/**\n * Look through an array of playlist items for a specific `source`;\n * checking both the value of elements and the value of their `src`\n * property.\n *\n * @private\n * @param   {Array} arr\n *          An array of playlist items to look through\n *\n * @param   {string} src\n *          The source to look for\n *\n * @return  {number}\n *          The index of that source or -1\n */\n\n\nvar indexInSources = function indexInSources(arr, src) {\n  for (var i = 0; i < arr.length; i++) {\n    var sources = arr[i].sources;\n\n    if (Array.isArray(sources)) {\n      for (var j = 0; j < sources.length; j++) {\n        var source = sources[j];\n\n        if (source && sourceEquals(source, src)) {\n          return i;\n        }\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Randomize the contents of an array.\n *\n * @private\n * @param  {Array} arr\n *         An array.\n *\n * @return {Array}\n *         The same array that was passed in.\n */\n\n\nvar randomize = function randomize(arr) {\n  var index = -1;\n  var lastIndex = arr.length - 1;\n\n  while (++index < arr.length) {\n    var rand = index + Math.floor(Math.random() * (lastIndex - index + 1));\n    var value = arr[rand];\n    arr[rand] = arr[index];\n    arr[index] = value;\n  }\n\n  return arr;\n};\n/**\n * Factory function for creating new playlist implementation on the given player.\n *\n * API summary:\n *\n * playlist(['a', 'b', 'c']) // setter\n * playlist() // getter\n * playlist.currentItem() // getter, 0\n * playlist.currentItem(1) // setter, 1\n * playlist.next() // 'c'\n * playlist.previous() // 'b'\n * playlist.first() // 'a'\n * playlist.last() // 'c'\n * playlist.autoadvance(5) // 5 second delay\n * playlist.autoadvance() // cancel autoadvance\n *\n * @param  {Player} player\n *         The current player\n *\n * @param  {Array=} initialList\n *         If given, an initial list of sources with which to populate\n *         the playlist.\n *\n * @param  {number=}  initialIndex\n *         If given, the index of the item in the list that should\n *         be loaded first. If -1, no video is loaded. If omitted, The\n *         the first video is loaded.\n *\n * @return {Function}\n *         Returns the playlist function specific to the given player.\n */\n\n\nfunction factory(player, initialList, initialIndex) {\n  if (initialIndex === void 0) {\n    initialIndex = 0;\n  }\n\n  var list = null;\n  var changing = false;\n  /**\n   * Get/set the playlist for a player.\n   *\n   * This function is added as an own property of the player and has its\n   * own methods which can be called to manipulate the internal state.\n   *\n   * @param  {Array} [newList]\n   *         If given, a new list of sources with which to populate the\n   *         playlist. Without this, the function acts as a getter.\n   *\n   * @param  {number}  [newIndex]\n   *         If given, the index of the item in the list that should\n   *         be loaded first. If -1, no video is loaded. If omitted, The\n   *         the first video is loaded.\n   *\n   * @return {Array}\n   *         The playlist\n   */\n\n  var playlist = player.playlist = function (newList, newIndex) {\n    if (newIndex === void 0) {\n      newIndex = 0;\n    }\n\n    if (changing) {\n      throw new Error('do not call playlist() during a playlist change');\n    }\n\n    if (Array.isArray(newList)) {\n      // @todo - Simplify this to `list.slice()` for v5.\n      var previousPlaylist = Array.isArray(list) ? list.slice() : null;\n      list = newList.slice(); // Transform any primitive and null values in an input list to objects\n\n      if (list.filter(function (item) {\n        return isItemObject(item);\n      }).length !== list.length) {\n        list = transformPrimitiveItems(list);\n      } // Mark the playlist as changing during the duringplaylistchange lifecycle.\n\n\n      changing = true;\n      player.trigger({\n        type: 'duringplaylistchange',\n        nextIndex: newIndex,\n        nextPlaylist: list,\n        previousIndex: playlist.currentIndex_,\n        // @todo - Simplify this to simply pass along `previousPlaylist` for v5.\n        previousPlaylist: previousPlaylist || []\n      });\n      changing = false;\n\n      if (newIndex !== -1) {\n        playlist.currentItem(newIndex);\n      } // The only time the previous playlist is null is the first call to this\n      // function. This allows us to fire the `duringplaylistchange` event\n      // every time the playlist is populated and to maintain backward\n      // compatibility by not firing the `playlistchange` event on the initial\n      // population of the list.\n      //\n      // @todo - Remove this condition in preparation for v5.\n\n\n      if (previousPlaylist) {\n        player.setTimeout(function () {\n          player.trigger('playlistchange');\n        }, 0);\n      } // Add unique id to each playlist item. This id will be used\n      // to determine index in cases where there are more than one\n      // identical sources in the playlist.\n\n\n      generatePlaylistItemId(list);\n    } // Always return a shallow clone of the playlist list.\n    // We also want to return originalValue if any item in the list has it.\n\n\n    return list.map(function (item) {\n      return item.originalValue || item;\n    }).slice();\n  }; // On a new source, if there is no current item, disable auto-advance.\n\n\n  player.on('loadstart', function () {\n    if (playlist.currentItem() === -1) {\n      reset(player);\n    }\n  });\n  player.on('playlistitem', function (event, item) {\n    if (item && item.playlistItemId_) {\n      playlist.currentPlaylistItemId_ = item.playlistItemId_;\n    }\n  });\n  playlist.currentIndex_ = -1;\n  playlist.player_ = player;\n  playlist.autoadvance_ = {};\n  playlist.repeat_ = false;\n  playlist.currentPlaylistItemId_ = null;\n  /**\n   * Get or set the current item in the playlist.\n   *\n   * During the duringplaylistchange event, acts only as a getter.\n   *\n   * @param  {number} [index]\n   *         If given as a valid value, plays the playlist item at that index.\n   *\n   * @return {number}\n   *         The current item index.\n   */\n\n  playlist.currentItem = function (index) {\n    // If the playlist is changing, only act as a getter.\n    if (changing) {\n      return playlist.currentIndex_;\n    }\n\n    if (typeof index === 'number' && playlist.currentIndex_ !== index && index >= 0 && index < list.length) {\n      playlist.currentIndex_ = index;\n      playItem(playlist.player_, list[playlist.currentIndex_]);\n    } else {\n      playlist.currentIndex_ = indexInPlaylistItemIds(list, playlist.currentPlaylistItemId_);\n    }\n\n    return playlist.currentIndex_;\n  };\n  /**\n   * Checks if the playlist contains a value.\n   *\n   * @param  {string|Object|Array} value\n   *         The value to check\n   *\n   * @return {boolean}\n   *         The result\n   */\n\n\n  playlist.contains = function (value) {\n    return playlist.indexOf(value) !== -1;\n  };\n  /**\n   * Gets the index of a value in the playlist or -1 if not found.\n   *\n   * @param  {string|Object|Array} value\n   *         The value to find the index of\n   *\n   * @return {number}\n   *         The index or -1\n   */\n\n\n  playlist.indexOf = function (value) {\n    if (typeof value === 'string') {\n      return indexInSources(list, value);\n    }\n\n    var sources = Array.isArray(value) ? value : value.sources;\n\n    for (var i = 0; i < sources.length; i++) {\n      var source = sources[i];\n\n      if (typeof source === 'string') {\n        return indexInSources(list, source);\n      } else if (source.src) {\n        return indexInSources(list, source.src);\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Get the index of the current item in the playlist. This is identical to\n   * calling `currentItem()` with no arguments.\n   *\n   * @return {number}\n   *         The current item index.\n   */\n\n\n  playlist.currentIndex = function () {\n    return playlist.currentItem();\n  };\n  /**\n   * Get the index of the last item in the playlist.\n   *\n   * @return {number}\n   *         The index of the last item in the playlist or -1 if there are no\n   *         items.\n   */\n\n\n  playlist.lastIndex = function () {\n    return list.length - 1;\n  };\n  /**\n   * Get the index of the next item in the playlist.\n   *\n   * @return {number}\n   *         The index of the next item in the playlist or -1 if there is no\n   *         current item.\n   */\n\n\n  playlist.nextIndex = function () {\n    var current = playlist.currentItem();\n\n    if (current === -1) {\n      return -1;\n    }\n\n    var lastIndex = playlist.lastIndex(); // When repeating, loop back to the beginning on the last item.\n\n    if (playlist.repeat_ && current === lastIndex) {\n      return 0;\n    } // Don't go past the end of the playlist.\n\n\n    return Math.min(current + 1, lastIndex);\n  };\n  /**\n   * Get the index of the previous item in the playlist.\n   *\n   * @return {number}\n   *         The index of the previous item in the playlist or -1 if there is\n   *         no current item.\n   */\n\n\n  playlist.previousIndex = function () {\n    var current = playlist.currentItem();\n\n    if (current === -1) {\n      return -1;\n    } // When repeating, loop back to the end of the playlist.\n\n\n    if (playlist.repeat_ && current === 0) {\n      return playlist.lastIndex();\n    } // Don't go past the beginning of the playlist.\n\n\n    return Math.max(current - 1, 0);\n  };\n  /**\n   * Plays the first item in the playlist.\n   *\n   * @return {Object|undefined}\n   *         Returns undefined and has no side effects if the list is empty.\n   */\n\n\n  playlist.first = function () {\n    if (changing) {\n      return;\n    }\n\n    var newItem = playlist.currentItem(0);\n\n    if (list.length) {\n      return list[newItem].originalValue || list[newItem];\n    }\n\n    playlist.currentIndex_ = -1;\n  };\n  /**\n   * Plays the last item in the playlist.\n   *\n   * @return {Object|undefined}\n   *         Returns undefined and has no side effects if the list is empty.\n   */\n\n\n  playlist.last = function () {\n    if (changing) {\n      return;\n    }\n\n    var newItem = playlist.currentItem(playlist.lastIndex());\n\n    if (list.length) {\n      return list[newItem].originalValue || list[newItem];\n    }\n\n    playlist.currentIndex_ = -1;\n  };\n  /**\n   * Plays the next item in the playlist.\n   *\n   * @return {Object|undefined}\n   *         Returns undefined and has no side effects if on last item.\n   */\n\n\n  playlist.next = function () {\n    if (changing) {\n      return;\n    }\n\n    var index = playlist.nextIndex();\n\n    if (index !== playlist.currentIndex_) {\n      var newItem = playlist.currentItem(index);\n      return list[newItem].originalValue || list[newItem];\n    }\n  };\n  /**\n   * Plays the previous item in the playlist.\n   *\n   * @return {Object|undefined}\n   *         Returns undefined and has no side effects if on first item.\n   */\n\n\n  playlist.previous = function () {\n    if (changing) {\n      return;\n    }\n\n    var index = playlist.previousIndex();\n\n    if (index !== playlist.currentIndex_) {\n      var newItem = playlist.currentItem(index);\n      return list[newItem].originalValue || list[newItem];\n    }\n  };\n  /**\n   * Set up auto-advance on the playlist.\n   *\n   * @param  {number} [delay]\n   *         The number of seconds to wait before each auto-advance.\n   */\n\n\n  playlist.autoadvance = function (delay) {\n    setup(playlist.player_, delay);\n  };\n  /**\n   * Sets `repeat` option, which makes the \"next\" video of the last video in\n   * the playlist be the first video in the playlist.\n   *\n   * @param  {boolean} [val]\n   *         The value to set repeat to\n   *\n   * @return {boolean}\n   *         The current value of repeat\n   */\n\n\n  playlist.repeat = function (val) {\n    if (val === undefined) {\n      return playlist.repeat_;\n    }\n\n    if (typeof val !== 'boolean') {\n      videojs.log.error('videojs-playlist: Invalid value for repeat', val);\n      return;\n    }\n\n    playlist.repeat_ = !!val;\n    return playlist.repeat_;\n  };\n  /**\n   * Sorts the playlist array.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}\n   * @fires playlistsorted\n   *\n   * @param {Function} compare\n   *        A comparator function as per the native Array method.\n   */\n\n\n  playlist.sort = function (compare) {\n    // Bail if the array is empty.\n    if (!list.length) {\n      return;\n    }\n\n    list.sort(compare); // If the playlist is changing, don't trigger events.\n\n    if (changing) {\n      return;\n    }\n    /**\n     * Triggered after the playlist is sorted internally.\n     *\n     * @event playlistsorted\n     * @type {Object}\n     */\n\n\n    player.trigger('playlistsorted');\n  };\n  /**\n   * Reverses the playlist array.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse}\n   * @fires playlistsorted\n   */\n\n\n  playlist.reverse = function () {\n    // Bail if the array is empty.\n    if (!list.length) {\n      return;\n    }\n\n    list.reverse(); // If the playlist is changing, don't trigger events.\n\n    if (changing) {\n      return;\n    }\n    /**\n     * Triggered after the playlist is sorted internally.\n     *\n     * @event playlistsorted\n     * @type {Object}\n     */\n\n\n    player.trigger('playlistsorted');\n  };\n  /**\n   * Shuffle the contents of the list randomly.\n   *\n   * @see   {@link https://github.com/lodash/lodash/blob/40e096b6d5291a025e365a0f4c010d9a0efb9a69/shuffle.js}\n   * @fires playlistsorted\n   * @todo  Make the `rest` option default to `true` in v5.0.0.\n   * @param {Object} [options]\n   *        An object containing shuffle options.\n   *\n   * @param {boolean} [options.rest = false]\n   *        By default, the entire playlist is randomized. However, this may\n   *        not be desirable in all cases, such as when a user is already\n   *        watching a video.\n   *\n   *        When `true` is passed for this option, it will only shuffle\n   *        playlist items after the current item. For example, when on the\n   *        first item, will shuffle the second item and beyond.\n   */\n\n\n  playlist.shuffle = function (_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        rest = _ref.rest;\n\n    var index = 0;\n    var arr = list; // When options.rest is true, start randomization at the item after the\n    // current item.\n\n    if (rest) {\n      index = playlist.currentIndex_ + 1;\n      arr = list.slice(index);\n    } // Bail if the array is empty or too short to shuffle.\n\n\n    if (arr.length <= 1) {\n      return;\n    }\n\n    randomize(arr); // When options.rest is true, splice the randomized sub-array back into\n    // the original array.\n\n    if (rest) {\n      var _list;\n\n      (_list = list).splice.apply(_list, [index, arr.length].concat(arr));\n    } // If the playlist is changing, don't trigger events.\n\n\n    if (changing) {\n      return;\n    }\n    /**\n     * Triggered after the playlist is sorted internally.\n     *\n     * @event playlistsorted\n     * @type {Object}\n     */\n\n\n    player.trigger('playlistsorted');\n  }; // If an initial list was given, populate the playlist with it.\n\n\n  if (Array.isArray(initialList)) {\n    playlist(initialList.slice(), initialIndex); // If there is no initial list given, silently set an empty array.\n  } else {\n    list = [];\n  }\n\n  return playlist;\n}\n\nvar version = \"4.3.0\";\nvar registerPlugin = videojs.registerPlugin || videojs.plugin;\n/**\n * The video.js playlist plugin. Invokes the playlist-maker to create a\n * playlist function on the specific player.\n *\n * @param {Array} list\n *        a list of sources\n *\n * @param {number} item\n *        The index to start at\n */\n\nvar plugin = function plugin(list, item) {\n  factory(this, list, item);\n};\n\nregisterPlugin('playlist', plugin);\nplugin.VERSION = version;\nexport default plugin;"],"sourceRoot":""}