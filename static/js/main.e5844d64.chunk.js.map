{"version":3,"sources":["VideoPlayer.js","App.js","serviceWorker.js","index.js"],"names":["VideoPlayer","createButton","id","imgUrl","buttonClasses","prompText","selectorString","imgStyle","callBack","Button","videojs","getComponent","myButton","extend","constructor","apply","this","arguments","forEach","entry","console","log","addClass","bind","controlText","handleClick","size","registerComponent","totalControls","_this","player","getChild","children","length","addChild","img","document","createElement","src","alt","className","setAttribute","querySelector","appendChild","videoNode","props","videoOptions","playlist","videoList","autoadvance","e","dispose","_this2","react_default","a","ref","node","style","width","height","color","Component","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","videoSize","state","autoplay","controls","playsinline","preload","BigPlayButton","controlBar","VolumeMenuButton","CurrentTimeDisplay","FullscreenToggle","sources","type","poster","src_VideoPlayer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5844d64.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport videojs from 'video.js';\nimport 'videojs-playlist';\nimport 'video.js/dist/video-js.css';\n\nimport './App.css';\n\n// videojs.registerPlugin('playlist', videojsPlaylistPlugin);\n\nclass VideoPlayer extends Component {\n\tcreateButton = (id, imgUrl, buttonClasses, prompText, selectorString, imgStyle, callBack) => {\n\t\tvar Button = videojs.getComponent('Button');\n\n\t\tvar myButton = videojs.extend(Button, {\n\t\t\tconstructor: function() {\n\t\t\t\tButton.apply(this, arguments);\n\n\t\t\t\tbuttonClasses.forEach(function(entry) {\n\t\t\t\t\tconsole.log(19, entry);\n\t\t\t\t\tthis.addClass(entry);\n\t\t\t\t}.bind(this));\n\n\t\t\t\tthis.controlText(prompText);\n\t\t\t},\n\n\t\t\thandleClick: function() {\n\t\t\t\tlet size = \"large\";\n\t\t\t\tif(id === \"SmallButton\") size = \"small\";\n\t\t\t\tif(id === \"MediumButton\") size = \"medium\";\n\t\t\t\tif(id === \"LargeButton\") size = \"large\";\n\n\t\t\t\tcallBack(size);\n\t\t\t}\n\t\t});\n\n\t\tvideojs.registerComponent(id, myButton);\n\t\tvar totalControls = this.player.getChild('controlBar').children().length;\n\t\tthis.player.getChild('controlBar').addChild(id, {}, totalControls-1);\n\n\t\tlet img = document.createElement(\"IMG\");\n\t\timg.src = imgUrl;\n\t\timg.alt = \"hello\";\n\t\timg.className = \"btn_img\";\n\t\timg.setAttribute(\"class\", imgStyle);\n\n\t\tvar settingsIcon = document.querySelector(selectorString);\n\t\tsettingsIcon.appendChild(img);\n\n\t\treturn myButton;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.player = videojs(this.videoNode, this.props.videoOptions, function onPlayerReady() {\n\t\t\tconsole.log('onPlayerReady', this)\n\t\t});\n\n\t\ttry{\n\t\t\t// this.player.playlist(this.props.videoList, 4);/// play video 5\n\n\t\t\tthis.player.playlist(this.props.videoList);\n\t\t\tthis.player.playlist.autoadvance(0); // play all\n\t\t}catch(e){\n\t\t}\n\n\t\t// (id, imgUrl, buttonClasses, prompText, selectorString, imgStyle, callBack)\n\t\tlet id = \"SmallButton\";\n\t\tlet imgUrl = \"http://event.netbriefings.com/event/common/smallwindow.svg\";\n\t\tlet buttonClasses = [\"icon-angle\", \"icon-angle-small\"];\n\t\tlet prompText = \"Small Video\";\n\t\tlet selectorString = \".icon-angle-small .vjs-icon-placeholder\";\n\t\tlet imgStyle = \"btn_img_small\";\n\t\tthis.createButton(id, imgUrl, buttonClasses, prompText, selectorString, imgStyle, this.props.callBack);\n\n        id = \"MediumButton\";\n        imgUrl = \"http://event.netbriefings.com/event/common/largewindow.svg\";\n        buttonClasses = [\"icon-angle\", \"icon-angle-medium\"];\n        prompText = \"Medium Video\";\n        selectorString = \".icon-angle-medium .vjs-icon-placeholder\";\n\t\timgStyle = \"btn_img_medium\";\n        this.createButton(id, imgUrl, buttonClasses, prompText, selectorString, imgStyle, this.props.callBack);\n\n        id = \"LargeButton\";\n        imgUrl = \"http://event.netbriefings.com/event/common/largewindow.svg\";\n        buttonClasses = [\"icon-angle\", \"icon-angle-large\"];\n        prompText = \"Large Video\";\n        selectorString = \".icon-angle-large .vjs-icon-placeholder\";\n\t\timgStyle = \"btn_img_large\";\n        this.createButton(id, imgUrl, buttonClasses, prompText, selectorString, imgStyle, this.props.callBack);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.player) {\n\t\t\ttry{\n\t\t\t\tthis.player.dispose();\n\t\t\t}catch(e){\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<video ref={ node => this.videoNode = node } className=\"video-js\" style={{width: \"100%\", height: \"auto\", color: 'white'}} ></video>\n\t\t);\n\t}\n}\n\nexport default VideoPlayer;\n","import React, { Component } from 'react';\nimport VideoPlayer from './VideoPlayer.js';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state={videoSize: \"large\"}\n\t}\n\n\tcallBack = (size)=>{\n\t\tconsole.log(13, size);\n\t\tthis.setState ({videoSize: size});\n\t};\n\n\trender() {\n\t\tconst videoOptions = {\n\t\t\tcallBack: this.callBack,\n\t\t\tvideoOptions: {\n\t\t\t\tautoplay: true,\n\t\t\t\tcontrols: true,\n\t\t\t\tplaysinline: \"playsinline\",\n\t\t\t\tpreload: \"auto\",\n\t\t\t\tBigPlayButton: false,\n\t\t\t\tcontrolBar: {\n\t\t\t\t\tVolumeMenuButton: false,\n\t\t\t\t\tCurrentTimeDisplay: false,\n\t\t\t\t\tFullscreenToggle: false\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tvideoList: [{\n\t\t\t\tsources: [{\n\t\t\t\t\tsrc: 'http://media.w3.org/2010/05/sintel/trailer.mp4',\n\t\t\t\t\ttype: 'video/mp4'\n\t\t\t\t}],\n\t\t\t\tposter: 'https://www.rt.com/static/img/og-logo-rt.png'\n\t\t\t}, {\n\t\t\t\tsources: [{\n\t\t\t\t\tsrc: 'http://media.w3.org/2010/05/bunny/trailer.mp4',\n\t\t\t\t\ttype: 'video/mp4'\n\t\t\t\t}],\n\t\t\t\tposter: 'http://media.w3.org/2010/05/bunny/poster.png'\n\t\t\t}, {\n\t\t\t\tsources: [{\n\t\t\t\t\tsrc: 'https://vjs.zencdn.net/v/oceans.mp4',\n\t\t\t\t\ttype: 'video/mp4'\n\t\t\t\t}],\n\t\t\t\tposter: 'https://vjs.zencdn.net/v/oceans.png'\n\t\t\t}, {\n\t\t\t\tsources: [{\n\t\t\t\t\tsrc: 'http://media.w3.org/2010/05/bunny/movie.mp4',\n\t\t\t\t\ttype: 'video/mp4'\n\t\t\t\t}],\n\t\t\t\tposter: 'http://media.w3.org/2010/05/bunny/poster.png'\n\t\t\t}, {\n\t\t\t\tsources: [{\n\t\t\t\t\tsrc: 'http://media.w3.org/2010/05/video/movie_300.mp4',\n\t\t\t\t\ttype: 'video/mp4'\n\t\t\t\t}],\n\t\t\t\tposter: 'http://media.w3.org/2010/05/video/poster.png'\n\t\t\t}]\n\t\t};\n\n\t\tif(this.state.videoSize === \"large\"){\n\t\t\treturn (\n\t\t\t\t<div className=\"large-vid\">\n\t\t\t\t\t<VideoPlayer { ...videoOptions } />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}else if(this.state.videoSize === \"medium\"){\n\t\t\treturn (\n\t\t\t\t<div className=\"medium-vid\">\n\t\t\t\t\t<VideoPlayer { ...videoOptions } />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}else{\n\t\t\treturn (\n\t\t\t\t<div className=\"small-vid\">\n\t\t\t\t\t<VideoPlayer { ...videoOptions } />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}